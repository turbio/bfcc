r7 >>>>>>>
+++++++
r1 >
runtime init:
#===TOP_FRAME
+
>>>>#main
+
>#main/b0
+
<<<<<[
    >#three_args
    [
        >>>>>#B:%ret_lading_pad
        [
            <<<<<<-
            #dead_frame
            >-
            <#dead_fn_pad/three_args
            >>>>>>-
            l26 <<<<<<<<<<<<<<<<<<<<<<<<<<
        ]
        <<<<<<#mainloop_three_args
        >#F:three_args
        >#F:five_args
        >#F:twelve_args
        >#F:main
        >#B:%no_block0_call_for_three_args
        >#B:%ret_lading_pad
        >#B:%3
        >#B:%call_term_for_0
        >#B:%call_term_for_1
        >#B:%call_term_for_2
        >#alloc_%4
        >#alloc_%5
        >#alloc_%6
        >#%7_=_load_i32*_%4__align_4(mult)
        >#%8_=_trunc_i32_%7_to_i8(mult)
        >#%9_=_load_i32*_%5__align_4(mult)
        >#%10_=_trunc_i32_%9_to_i8(mult)
        >#%11_=_load_i32*_%6__align_4(mult)
        >#%12_=_trunc_i32_%11_to_i8(mult)
        >#%0
        >#%1
        >#%2
        <<<<<<<<<<<<<<<<<#B:%no_block0_call_for_three_args
        [
            -
            copy up args
            >>>>>>>>>>>>>>>#arg_%0
            l2 <<
            m0/22 <<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<]
            r2 >>
            >>>>>>>>>>>>>>>>>>>>>#arg_%1
            l3 <<<
            m0/24 <<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<]
            r3 >>>
            >>>>>>>>>>>>>>>>>>>>>>#arg_%2
            l4 <<<<
            m0/26 <<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<<<]
            r4 >>>>
            br label %3
            >>>>>>>+
        <<]
        >>#B:%3
        [
            -
            %4 = alloca i32_ align 4
            %5 = alloca i32_ align 4
            %6 = alloca i32_ align 4
            store i32 %0_ i32* %4_ align 4
            >>>>[-]
            m20/11 >>>>>>>>>[-<<<<<<<<<+>>>>>>>>>]
            store i32 %1_ i32* %5_ align 4
            <<<<<<<<[-]
            m21/12 >>>>>>>>>[-<<<<<<<<<+>>>>>>>>>]
            store i32 %2_ i32* %6_ align 4
            <<<<<<<<[-]
            m22/13 >>>>>>>>>[-<<<<<<<<<+>>>>>>>>>]
            %7 = load i32* %4_ align 4
            <<<<<<<<[-]
            d11/14/23 <<<[->>>+>>>>>>>>>+<<<<<<<<<<<<]
            m23/11 >>>>>>>>>>>>[-<<<<<<<<<<<<+>>>>>>>>>>>>]
            %8 = trunc i32 %7 to i8
            <<<<<<<<[-]
            d14/24/23 <[->>>>>>>>>>+<+<<<<<<<<<]
            m24/14 >>>>>>>>>>[-<<<<<<<<<<+>>>>>>>>>>]
            m23/15 <[-<<<<<<<<+>>>>>>>>]
            call @putchar(i8 %8)
            enable next block when we return
            <<<<<<<<<<<<<<<#caller/%call_term_for_0
            +
            putchar intrinsic
            d15/23/25 >>>>>>>[->>>>>>>>+>>+<<<<<<<<<<]
            m23/15 >>>>>>>>[-<<<<<<<<+>>>>>>>>]
            >>.
            [-]
        <<<<<<<<<<<<<<<<<<]
        >#B:%call_term_for_0
        [
            -
            %9 = load i32* %5_ align 4
            >>>>>>>>[-]
            d12/16/23 <<<<[->>>>+>>>>>>>+<<<<<<<<<<<]
            m23/12 >>>>>>>>>>>[-<<<<<<<<<<<+>>>>>>>>>>>]
            %10 = trunc i32 %9 to i8
            <<<<<<[-]
            d16/23/24 <[->>>>>>>+>+<<<<<<<<]
            m23/16 >>>>>>>[-<<<<<<<+>>>>>>>]
            m24/17 >[-<<<<<<<+>>>>>>>]
            call @putchar(i8 %10)
            enable next block when we return
            <<<<<<<<<<<<<<<#caller/%call_term_for_1
            +
            putchar intrinsic
            d17/23/24 >>>>>>>>[->>>>>>+>+<<<<<<<]
            m23/17 >>>>>>[-<<<<<<+>>>>>>]
            >.
            [-]
        <<<<<<<<<<<<<<<<]
        >#B:%call_term_for_1
        [
            -
            %11 = load i32* %6_ align 4
            >>>>>>>>>[-]
            d13/18/23 <<<<<[->>>>>+>>>>>+<<<<<<<<<<]
            m23/13 >>>>>>>>>>[-<<<<<<<<<<+>>>>>>>>>>]
            %12 = trunc i32 %11 to i8
            <<<<[-]
            d18/23/24 <[->>>>>+>+<<<<<<]
            m23/18 >>>>>[-<<<<<+>>>>>]
            m24/19 >[-<<<<<+>>>>>]
            call @putchar(i8 %12)
            enable next block when we return
            <<<<<<<<<<<<<<#caller/%call_term_for_2
            +
            putchar intrinsic
            d19/23/24 >>>>>>>>>[->>>>+>+<<<<<]
            m23/19 >>>>[-<<<<+>>>>]
            >.
            [-]
        <<<<<<<<<<<<<<<]
        >#B:%call_term_for_2
        [
            -
            ret void
            zero all function allocs
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            <<<<<<<<<<<<<<<<<<<-
            #dead_frame
            >-
            l1 <
            <[-]
            r1 >
            l11 <<<<<<<<<<<
        >>>>>>>>>>]
    <<<<<<<<<]
    >#five_args
    [
        >>>>#B:%ret_lading_pad
        [
            <<<<<<-
            #dead_frame
            >>-
            <<#dead_fn_pad/five_args
            >>>>>>-
            l36 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
        ]
        <<<<<<#mainloop_five_args
        >#F:three_args
        >#F:five_args
        >#F:twelve_args
        >#F:main
        >#B:%no_block0_call_for_five_args
        >#B:%ret_lading_pad
        >#B:%5
        >#B:%call_term_for_0
        >#B:%call_term_for_1
        >#B:%call_term_for_2
        >#B:%call_term_for_3
        >#B:%call_term_for_4
        >#alloc_%6
        >#alloc_%7
        >#alloc_%8
        >#alloc_%9
        >#alloc_%10
        >#%11_=_load_i32*_%6__align_4(mult)
        >#%12_=_trunc_i32_%11_to_i8(mult)
        >#%13_=_load_i32*_%7__align_4(mult)
        >#%14_=_trunc_i32_%13_to_i8(mult)
        >#%15_=_load_i32*_%8__align_4(mult)
        >#%16_=_trunc_i32_%15_to_i8(mult)
        >#%17_=_load_i32*_%9__align_4(mult)
        >#%18_=_trunc_i32_%17_to_i8(mult)
        >#%19_=_load_i32*_%10__align_4(mult)
        >#%20_=_trunc_i32_%19_to_i8(mult)
        >#%0
        >#%1
        >#%2
        >#%3
        >#%4
        <<<<<<<<<<<<<<<<<<<<<<<<<<<#B:%no_block0_call_for_five_args
        [
            -
            copy up args
            >>>>>>>>>>>>>>>>>>>>>>>#arg_%0
            l2 <<
            m0/30 <<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            r2 >>
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>#arg_%1
            l3 <<<
            m0/32 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            r3 >>>
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#arg_%2
            l4 <<<<
            m0/34 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            r4 >>>>
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#arg_%3
            l5 <<<<<
            m0/36 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            r5 >>>>>
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#arg_%4
            l6 <<<<<<
            m0/38 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            r6 >>>>>>
            br label %5
            >>>>>>>+
        <<]
        >>#B:%5
        [
            -
            %6 = alloca i32_ align 4
            %7 = alloca i32_ align 4
            %8 = alloca i32_ align 4
            %9 = alloca i32_ align 4
            %10 = alloca i32_ align 4
            store i32 %0_ i32* %6_ align 4
            >>>>>>[-]
            m28/13 >>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>]
            store i32 %1_ i32* %7_ align 4
            <<<<<<<<<<<<<<[-]
            m29/14 >>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>]
            store i32 %2_ i32* %8_ align 4
            <<<<<<<<<<<<<<[-]
            m30/15 >>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>]
            store i32 %3_ i32* %9_ align 4
            <<<<<<<<<<<<<<[-]
            m31/16 >>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>]
            store i32 %4_ i32* %10_ align 4
            <<<<<<<<<<<<<<[-]
            m32/17 >>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>]
            %11 = load i32* %6_ align 4
            <<<<<<<<<<<<<<[-]
            d13/18/33 <<<<<[->>>>>+>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<]
            m33/13 >>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>]
            %12 = trunc i32 %11 to i8
            <<<<<<<<<<<<<<[-]
            d18/34/33 <[->>>>>>>>>>>>>>>>+<+<<<<<<<<<<<<<<<]
            m34/18 >>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>]
            m33/19 <[-<<<<<<<<<<<<<<+>>>>>>>>>>>>>>]
            call @putchar(i8 %12)
            enable next block when we return
            <<<<<<<<<<<<<<<<<<<<<<<<<#caller/%call_term_for_0
            +
            putchar intrinsic
            d19/33/35 >>>>>>>>>>>[->>>>>>>>>>>>>>+>>+<<<<<<<<<<<<<<<<]
            m33/19 >>>>>>>>>>>>>>[-<<<<<<<<<<<<<<+>>>>>>>>>>>>>>]
            >>.
            [-]
        <<<<<<<<<<<<<<<<<<<<<<<<<<<<]
        >#B:%call_term_for_0
        [
            -
            %13 = load i32* %7_ align 4
            >>>>>>>>>>>>[-]
            d14/20/33 <<<<<<[->>>>>>+>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<]
            m33/14 >>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>]
            %14 = trunc i32 %13 to i8
            <<<<<<<<<<<<[-]
            d20/33/34 <[->>>>>>>>>>>>>+>+<<<<<<<<<<<<<<]
            m33/20 >>>>>>>>>>>>>[-<<<<<<<<<<<<<+>>>>>>>>>>>>>]
            m34/21 >[-<<<<<<<<<<<<<+>>>>>>>>>>>>>]
            call @putchar(i8 %14)
            enable next block when we return
            <<<<<<<<<<<<<<<<<<<<<<<<<#caller/%call_term_for_1
            +
            putchar intrinsic
            d21/33/34 >>>>>>>>>>>>[->>>>>>>>>>>>+>+<<<<<<<<<<<<<]
            m33/21 >>>>>>>>>>>>[-<<<<<<<<<<<<+>>>>>>>>>>>>]
            >.
            [-]
        <<<<<<<<<<<<<<<<<<<<<<<<<<]
        >#B:%call_term_for_1
        [
            -
            %15 = load i32* %8_ align 4
            >>>>>>>>>>>>>[-]
            d15/22/33 <<<<<<<[->>>>>>>+>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<]
            m33/15 >>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>]
            %16 = trunc i32 %15 to i8
            <<<<<<<<<<[-]
            d22/33/34 <[->>>>>>>>>>>+>+<<<<<<<<<<<<]
            m33/22 >>>>>>>>>>>[-<<<<<<<<<<<+>>>>>>>>>>>]
            m34/23 >[-<<<<<<<<<<<+>>>>>>>>>>>]
            call @putchar(i8 %16)
            enable next block when we return
            <<<<<<<<<<<<<<<<<<<<<<<<#caller/%call_term_for_2
            +
            putchar intrinsic
            d23/33/34 >>>>>>>>>>>>>[->>>>>>>>>>+>+<<<<<<<<<<<]
            m33/23 >>>>>>>>>>[-<<<<<<<<<<+>>>>>>>>>>]
            >.
            [-]
        <<<<<<<<<<<<<<<<<<<<<<<<<]
        >#B:%call_term_for_2
        [
            -
            %17 = load i32* %9_ align 4
            >>>>>>>>>>>>>>[-]
            d16/24/33 <<<<<<<<[->>>>>>>>+>>>>>>>>>+<<<<<<<<<<<<<<<<<]
            m33/16 >>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>]
            %18 = trunc i32 %17 to i8
            <<<<<<<<[-]
            d24/33/34 <[->>>>>>>>>+>+<<<<<<<<<<]
            m33/24 >>>>>>>>>[-<<<<<<<<<+>>>>>>>>>]
            m34/25 >[-<<<<<<<<<+>>>>>>>>>]
            call @putchar(i8 %18)
            enable next block when we return
            <<<<<<<<<<<<<<<<<<<<<<<#caller/%call_term_for_3
            +
            putchar intrinsic
            d25/33/34 >>>>>>>>>>>>>>[->>>>>>>>+>+<<<<<<<<<]
            m33/25 >>>>>>>>[-<<<<<<<<+>>>>>>>>]
            >.
            [-]
        <<<<<<<<<<<<<<<<<<<<<<<<]
        >#B:%call_term_for_3
        [
            -
            %19 = load i32* %10_ align 4
            >>>>>>>>>>>>>>>[-]
            d17/26/33 <<<<<<<<<[->>>>>>>>>+>>>>>>>+<<<<<<<<<<<<<<<<]
            m33/17 >>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>]
            %20 = trunc i32 %19 to i8
            <<<<<<[-]
            d26/33/34 <[->>>>>>>+>+<<<<<<<<]
            m33/26 >>>>>>>[-<<<<<<<+>>>>>>>]
            m34/27 >[-<<<<<<<+>>>>>>>]
            call @putchar(i8 %20)
            enable next block when we return
            <<<<<<<<<<<<<<<<<<<<<<#caller/%call_term_for_4
            +
            putchar intrinsic
            d27/33/34 >>>>>>>>>>>>>>>[->>>>>>+>+<<<<<<<]
            m33/27 >>>>>>[-<<<<<<+>>>>>>]
            >.
            [-]
        <<<<<<<<<<<<<<<<<<<<<<<]
        >#B:%call_term_for_4
        [
            -
            ret void
            zero all function allocs
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            <<<<<<<<<<<<<<<<<<<<<<<<<<<-
            #dead_frame
            >>-
            l1 <
            <<[-]
            r1 >
            l13 <<<<<<<<<<<<<
        >>>>>>>>>>>>]
    <<<<<<<<<<]
    >#twelve_args
    [
        >>>#B:%ret_lading_pad
        [
            <<<<<<-
            #dead_frame
            >>>-
            <<<#dead_fn_pad/twelve_args
            >>>>>>-
            l64 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
        ]
        <<<<<<#mainloop_twelve_args
        >#F:three_args
        >#F:five_args
        >#F:twelve_args
        >#F:main
        >#B:%no_block0_call_for_twelve_args
        >#B:%ret_lading_pad
        >#B:%12
        >#B:%call_term_for_0
        >#B:%call_term_for_1
        >#B:%call_term_for_2
        >#B:%call_term_for_3
        >#B:%call_term_for_4
        >#B:%call_term_for_5
        >#alloc_%13
        >#alloc_%14
        >#alloc_%15
        >#alloc_%16
        >#alloc_%17
        >#alloc_%18
        >#alloc_%19
        >#alloc_%20
        >#alloc_%21
        >#alloc_%22
        >#alloc_%23
        >#alloc_%24
        >#%25_=_load_i32*_%13__align_4(mult)
        >#%26_=_load_i32*_%14__align_4(mult)
        >#%27_=_load_i32*_%15__align_4(mult)
        >#%28_=_load_i32*_%16__align_4(mult)
        >#%29_=_load_i32*_%17__align_4(mult)
        >#%30_=_load_i32*_%18__align_4(mult)
        >#%31_=_load_i32*_%19__align_4(mult)
        >#%32_=_load_i32*_%20__align_4(mult)
        >#%33_=_load_i32*_%21__align_4(mult)
        >#%34_=_trunc_i32_%33_to_i8(mult)
        >#%35_=_load_i32*_%22__align_4(mult)
        >#%36_=_trunc_i32_%35_to_i8(mult)
        >#%37_=_load_i32*_%23__align_4(mult)
        >#%38_=_trunc_i32_%37_to_i8(mult)
        >#%39_=_load_i32*_%24__align_4(mult)
        >#%40_=_trunc_i32_%39_to_i8(mult)
        >#%0
        >#%1
        >#%2
        >#%3
        >#%4
        >#%5
        >#%6
        >#%7
        >#%8
        >#%9
        >#%10
        >#%11
        <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<#B:%no_block0_call_for_twelve_args
        [
            -
            copy up args
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#arg_%0
            l2 <<
            m0/44 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            r2 >>
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#arg_%1
            l3 <<<
            m0/46 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            r3 >>>
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#arg_%2
            l4 <<<<
            m0/48 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            r4 >>>>
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#arg_%3
            l5 <<<<<
            m0/50 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            r5 >>>>>
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#arg_%4
            l6 <<<<<<
            m0/52 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            r6 >>>>>>
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#arg_%5
            l7 <<<<<<<
            m0/54 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            r7 >>>>>>>
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#arg_%6
            l8 <<<<<<<<
            m0/56 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            r8 >>>>>>>>
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#arg_%7
            l9 <<<<<<<<<
            m0/58 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            r9 >>>>>>>>>
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#arg_%8
            l10 <<<<<<<<<<
            m0/60 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            r10 >>>>>>>>>>
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#arg_%9
            l11 <<<<<<<<<<<
            m0/62 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            r11 >>>>>>>>>>>
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#arg_%10
            l12 <<<<<<<<<<<<
            m0/64 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            r12 >>>>>>>>>>>>
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#arg_%11
            l13 <<<<<<<<<<<<<
            m0/66 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            r13 >>>>>>>>>>>>>
            br label %12
            >>>>>>>+
        <<]
        >>#B:%12
        [
            -
            %13 = alloca i32_ align 4
            %14 = alloca i32_ align 4
            %15 = alloca i32_ align 4
            %16 = alloca i32_ align 4
            %17 = alloca i32_ align 4
            %18 = alloca i32_ align 4
            %19 = alloca i32_ align 4
            %20 = alloca i32_ align 4
            %21 = alloca i32_ align 4
            %22 = alloca i32_ align 4
            %23 = alloca i32_ align 4
            %24 = alloca i32_ align 4
            store i32 %0_ i32* %13_ align 4
            >>>>>>>[-]
            m42/14 >>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            store i32 %1_ i32* %14_ align 4
            <<<<<<<<<<<<<<<<<<<<<<<<<<<[-]
            m43/15 >>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            store i32 %2_ i32* %15_ align 4
            <<<<<<<<<<<<<<<<<<<<<<<<<<<[-]
            m44/16 >>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            store i32 %3_ i32* %16_ align 4
            <<<<<<<<<<<<<<<<<<<<<<<<<<<[-]
            m45/17 >>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            store i32 %4_ i32* %17_ align 4
            <<<<<<<<<<<<<<<<<<<<<<<<<<<[-]
            m46/18 >>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            store i32 %5_ i32* %18_ align 4
            <<<<<<<<<<<<<<<<<<<<<<<<<<<[-]
            m47/19 >>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            store i32 %6_ i32* %19_ align 4
            <<<<<<<<<<<<<<<<<<<<<<<<<<<[-]
            m48/20 >>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            store i32 %7_ i32* %20_ align 4
            <<<<<<<<<<<<<<<<<<<<<<<<<<<[-]
            m49/21 >>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            store i32 %8_ i32* %21_ align 4
            <<<<<<<<<<<<<<<<<<<<<<<<<<<[-]
            m50/22 >>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            store i32 %9_ i32* %22_ align 4
            <<<<<<<<<<<<<<<<<<<<<<<<<<<[-]
            m51/23 >>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            store i32 %10_ i32* %23_ align 4
            <<<<<<<<<<<<<<<<<<<<<<<<<<<[-]
            m52/24 >>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            store i32 %11_ i32* %24_ align 4
            <<<<<<<<<<<<<<<<<<<<<<<<<<<[-]
            m53/25 >>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            %25 = load i32* %13_ align 4
            <<<<<<<<<<<<<<<<<<<<<<<<<<<[-]
            d14/26/54 <<<<<<<<<<<<[->>>>>>>>>>>>+>>>>>>>>>>>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m54/14 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            %26 = load i32* %14_ align 4
            <<<<<<<<<<<<<<<<<<<<<<<<<<<[-]
            d15/27/55 <<<<<<<<<<<<[->>>>>>>>>>>>+>>>>>>>>>>>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m55/15 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            %27 = load i32* %15_ align 4
            <<<<<<<<<<<<<<<<<<<<<<<<<<<[-]
            d16/28/54 <<<<<<<<<<<<[->>>>>>>>>>>>+>>>>>>>>>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m54/16 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            call @three_args(i32 %25_ i32 %26_ i32 %27)
            enable next block when we return
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<#caller/%call_term_for_0
            +
            stack_width 64
            ret_pad_width 6
            copy up arg 0
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#arg_0
            d26/54/56 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>+>>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m54/26 >>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            m56/73 >>[->>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<]
            copy up arg 1
            >>>>>>>>>>>>>>>>#arg_1
            d27/55/57 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>+>>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m55/27 >>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            m57/72 >>[->>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<]
            copy up arg 2
            >>>>>>>>>>>>>>#arg_2
            d28/58/59 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m58/28 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            m59/71 >[->>>>>>>>>>>>+<<<<<<<<<<<<]
            give callee a stack pointer
            >>>>>>>>>>>>>>>#stack_ptr
            +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            l1 <
            d0/75/76 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m76/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            r64 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<#JUMP_PAD
            +
            >>>#caller
            +
            >>>#caller/jump_pad_blk
            +
            r11 >>>>>>>>>>>
            <<<<<<#===FRAME_three_args
            +
            >#three_args
            +
            >>>>#three_args/b0
            +
        >>]
        >#B:%call_term_for_0
        [
            -
            %28 = load i32* %16_ align 4
            >>>>>>>>>>>>>>>>>>>>>[-]
            d17/29/54 <<<<<<<<<<<<[->>>>>>>>>>>>+>>>>>>>>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m54/17 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            %29 = load i32* %17_ align 4
            <<<<<<<<<<<<<<<<<<<<<<<<[-]
            d18/30/54 <<<<<<<<<<<<[->>>>>>>>>>>>+>>>>>>>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m54/18 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            %30 = load i32* %18_ align 4
            <<<<<<<<<<<<<<<<<<<<<<<[-]
            d19/31/54 <<<<<<<<<<<<[->>>>>>>>>>>>+>>>>>>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m54/19 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            %31 = load i32* %19_ align 4
            <<<<<<<<<<<<<<<<<<<<<<[-]
            d20/32/54 <<<<<<<<<<<<[->>>>>>>>>>>>+>>>>>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m54/20 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            %32 = load i32* %20_ align 4
            <<<<<<<<<<<<<<<<<<<<<[-]
            d21/33/54 <<<<<<<<<<<<[->>>>>>>>>>>>+>>>>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m54/21 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            call @five_args(i32 %28_ i32 %29_ i32 %30_ i32 %31_ i32 %32)
            enable next block when we return
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<#caller/%call_term_for_1
            +
            stack_width 64
            ret_pad_width 6
            copy up arg 0
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#arg_0
            d29/54/55 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m54/29 >>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>]
            m55/75 >[->>>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<]
            copy up arg 1
            >>>>>>>>>>>>>>>>>>>#arg_1
            d30/56/57 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m56/30 >>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>]
            m57/74 >[->>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<]
            copy up arg 2
            >>>>>>>>>>>>>>>>#arg_2
            d31/58/60 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>+>>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m58/31 >>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            m60/73 >>[->>>>>>>>>>>>>+<<<<<<<<<<<<<]
            copy up arg 3
            >>>>>>>>>>>>#arg_3
            d32/59/61 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>+>>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m59/32 >>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            m61/72 >>[->>>>>>>>>>>+<<<<<<<<<<<]
            copy up arg 4
            >>>>>>>>>>#arg_4
            d33/62/63 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m62/33 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            m63/71 >[->>>>>>>>+<<<<<<<<]
            give callee a stack pointer
            >>>>>>>>>>>>>#stack_ptr
            +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            l1 <
            d0/77/78 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m78/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            r64 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<#JUMP_PAD
            +
            >>>#caller
            +
            >>>#caller/jump_pad_blk
            +
            r13 >>>>>>>>>>>>>
            <<<<<<#===FRAME_five_args
            +
            >>#five_args
            +
            >>>#five_args/b0
            +
        >>>]
        >#B:%call_term_for_1
        [
            -
            %33 = load i32* %21_ align 4
            >>>>>>>>>>>>>>>>>>>>>>>>>[-]
            d22/34/54 <<<<<<<<<<<<[->>>>>>>>>>>>+>>>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m54/22 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            %34 = trunc i32 %33 to i8
            <<<<<<<<<<<<<<<<<<<[-]
            d34/54/55 <[->>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<]
            m54/34 >>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>]
            m55/35 >[-<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>]
            call @putchar(i8 %34)
            enable next block when we return
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<#caller/%call_term_for_2
            +
            putchar intrinsic
            d35/54/55 >>>>>>>>>>>>>>>>>>>>>>>>>[->>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<]
            m54/35 >>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>]
            >.
            [-]
        <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
        >#B:%call_term_for_2
        [
            -
            %35 = load i32* %22_ align 4
            >>>>>>>>>>>>>>>>>>>>>>>>>>[-]
            d23/36/54 <<<<<<<<<<<<<[->>>>>>>>>>>>>+>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m54/23 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            %36 = trunc i32 %35 to i8
            <<<<<<<<<<<<<<<<<[-]
            d36/54/55 <[->>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<]
            m54/36 >>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>]
            m55/37 >[-<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>]
            call @putchar(i8 %36)
            enable next block when we return
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<#caller/%call_term_for_3
            +
            putchar intrinsic
            d37/54/55 >>>>>>>>>>>>>>>>>>>>>>>>>>[->>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<]
            m54/37 >>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>]
            >.
            [-]
        <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
        >#B:%call_term_for_3
        [
            -
            %37 = load i32* %23_ align 4
            >>>>>>>>>>>>>>>>>>>>>>>>>>>[-]
            d24/38/54 <<<<<<<<<<<<<<[->>>>>>>>>>>>>>+>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m54/24 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            %38 = trunc i32 %37 to i8
            <<<<<<<<<<<<<<<[-]
            d38/54/55 <[->>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<]
            m54/38 >>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>]
            m55/39 >[-<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>]
            call @putchar(i8 %38)
            enable next block when we return
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<#caller/%call_term_for_4
            +
            putchar intrinsic
            d39/54/55 >>>>>>>>>>>>>>>>>>>>>>>>>>>[->>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<]
            m54/39 >>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>]
            >.
            [-]
        <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
        >#B:%call_term_for_4
        [
            -
            %39 = load i32* %24_ align 4
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>[-]
            d25/40/54 <<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>+>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m54/25 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            %40 = trunc i32 %39 to i8
            <<<<<<<<<<<<<[-]
            d40/54/55 <[->>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<]
            m54/40 >>>>>>>>>>>>>>[-<<<<<<<<<<<<<<+>>>>>>>>>>>>>>]
            m55/41 >[-<<<<<<<<<<<<<<+>>>>>>>>>>>>>>]
            call @putchar(i8 %40)
            enable next block when we return
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<#caller/%call_term_for_5
            +
            putchar intrinsic
            d41/54/55 >>>>>>>>>>>>>>>>>>>>>>>>>>>>[->>>>>>>>>>>>>+>+<<<<<<<<<<<<<<]
            m54/41 >>>>>>>>>>>>>[-<<<<<<<<<<<<<+>>>>>>>>>>>>>]
            >.
            [-]
        <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
        >#B:%call_term_for_5
        [
            -
            ret void
            zero all function allocs
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<-
            #dead_frame
            >>>-
            l1 <
            <<<[-]
            r1 >
            l20 <<<<<<<<<<<<<<<<<<<<
        >>>>>>>>>>>>>]
    <<<<<<<<<<]
    >#main
    [
        >>#B:%ret_lading_pad
        [
            <<<<<<-
            #dead_frame
            >>>>-
            <<<<#dead_fn_pad/main
            >>>>>>-
            l25 <<<<<<<<<<<<<<<<<<<<<<<<<
        ]
        <<<<<<#mainloop_main
        >#F:three_args
        >#F:five_args
        >#F:twelve_args
        >#F:main
        >#B:%no_block0_call_for_main
        >#B:%ret_lading_pad
        >#B:%0
        >#B:%call_term_for_0
        >#B:%call_term_for_1
        >#B:%call_term_for_2
        >#B:%call_term_for_3
        >#B:%call_term_for_4
        <<<<<<<#B:%no_block0_call_for_main
        [
            -
            copy up args
            br label %0
            >>+
        <<]
        >>#B:%0
        [
            -
            call @three_args(i32 79_ i32 119_ i32 79)
            enable next block when we return
            >#caller/%call_term_for_0
            +
            stack_width 25
            ret_pad_width 6
            copy up arg 0
            >>>>>>>>>>>>>>>>>>>>>>>>>>#arg_0
            op_to_reg storing const value in temp address
            <<<<<<<<<<<<<<<<<<<<<#constop_79
            +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            m13/34 [->>>>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<]
            copy up arg 1
            >>>>>>>>>>>>>>>>>>>>#arg_1
            op_to_reg storing const value in temp address
            <<<<<<<<<<<<<<<<<<<#constop_119
            +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            m14/33 [->>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<]
            copy up arg 2
            >>>>>>>>>>>>>>>>>>#arg_2
            op_to_reg storing const value in temp address
            <<<<<<<<<<<<<<<<<#constop_79
            +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            m15/32 [->>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<]
            give callee a stack pointer
            >>>>>>>>>>>>>>>>>>>>#stack_ptr
            ++++++++++++++++++++++++++++++++++
            l1 <
            d0/36/37 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m37/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            r25 >>>>>>>>>>>>>>>>>>>>>>>>>
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<#JUMP_PAD
            +
            >>>>#caller
            +
            >>#caller/jump_pad_blk
            +
            r11 >>>>>>>>>>>
            <<<<<<#===FRAME_three_args
            +
            >#three_args
            +
            >>>>#three_args/b0
            +
        >>]
        >#B:%call_term_for_0
        [
            -
            call @putchar(i8 10)
            enable next block when we return
            >#caller/%call_term_for_1
            +
            putchar intrinsic
            op_to_reg storing const value in temp address
            >>>>#constop_10
            ++++++++++
            .
            [-]
        <<<<<]
        >#B:%call_term_for_1
        [
            -
            call @five_args(i32 122_ i32 97_ i32 100_ i32 100_ i32 121)
            enable next block when we return
            >#caller/%call_term_for_2
            +
            stack_width 25
            ret_pad_width 6
            copy up arg 0
            >>>>>>>>>>>>>>>>>>>>>>>>>>#arg_0
            op_to_reg storing const value in temp address
            <<<<<<<<<<<<<<<<<<<<<<<#constop_122
            ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            m13/36 [->>>>>>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<]
            copy up arg 1
            >>>>>>>>>>>>>>>>>>>>>>#arg_1
            op_to_reg storing const value in temp address
            <<<<<<<<<<<<<<<<<<<<<#constop_97
            +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            m14/35 [->>>>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<]
            copy up arg 2
            >>>>>>>>>>>>>>>>>>>>#arg_2
            op_to_reg storing const value in temp address
            <<<<<<<<<<<<<<<<<<#constop_100
            ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            m16/34 [->>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<]
            copy up arg 3
            >>>>>>>>>>>>>>>>>#arg_3
            op_to_reg storing const value in temp address
            <<<<<<<<<<<<<<<<<<#constop_100
            ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            m15/33 [->>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<]
            copy up arg 4
            >>>>>>>>>>>>>>>>>#arg_4
            op_to_reg storing const value in temp address
            <<<<<<<<<<<<<<<#constop_121
            +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            m17/32 [->>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<]
            give callee a stack pointer
            >>>>>>>>>>>>>>>>>>>>#stack_ptr
            ++++++++++++++++++++++++++++++++++
            l1 <
            d0/38/39 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m39/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            r25 >>>>>>>>>>>>>>>>>>>>>>>>>
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<#JUMP_PAD
            +
            >>>>#caller
            +
            >>#caller/jump_pad_blk
            +
            r13 >>>>>>>>>>>>>
            <<<<<<#===FRAME_five_args
            +
            >>#five_args
            +
            >>>#five_args/b0
            +
        >>>>]
        >#B:%call_term_for_2
        [
            -
            call @putchar(i8 10)
            enable next block when we return
            >#caller/%call_term_for_3
            +
            putchar intrinsic
            op_to_reg storing const value in temp address
            >>#constop_10
            ++++++++++
            .
            [-]
        <<<]
        >#B:%call_term_for_3
        [
            -
            call @twelve_args(i32 108_ i32 109_ i32 97_ i32 111_ i32 109_ i32 121_ i32 100_ i32 117_ i32 100_ i32 101_ i32 33_ i32 63)
            enable next block when we return
            >#caller/%call_term_for_4
            +
            stack_width 25
            ret_pad_width 6
            copy up arg 0
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#arg_0
            op_to_reg storing const value in temp address
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<#constop_108
            ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            m13/43 [->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            copy up arg 1
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>#arg_1
            op_to_reg storing const value in temp address
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<#constop_109
            +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            m14/42 [->>>>>>>>>>>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            copy up arg 2
            >>>>>>>>>>>>>>>>>>>>>>>>>>>#arg_2
            op_to_reg storing const value in temp address
            <<<<<<<<<<<<<<<<<<<<<<<<<<#constop_97
            +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            m15/41 [->>>>>>>>>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<<<]
            copy up arg 3
            >>>>>>>>>>>>>>>>>>>>>>>>>#arg_3
            op_to_reg storing const value in temp address
            <<<<<<<<<<<<<<<<<<<<<<<<#constop_111
            +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            m16/40 [->>>>>>>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<]
            copy up arg 4
            >>>>>>>>>>>>>>>>>>>>>>>#arg_4
            op_to_reg storing const value in temp address
            <<<<<<<<<<<<<<<<<<<<<#constop_109
            +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            m18/39 [->>>>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<]
            copy up arg 5
            >>>>>>>>>>>>>>>>>>>>#arg_5
            op_to_reg storing const value in temp address
            <<<<<<<<<<<<<<<<<<<<<#constop_121
            +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            m17/38 [->>>>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<]
            copy up arg 6
            >>>>>>>>>>>>>>>>>>>>#arg_6
            op_to_reg storing const value in temp address
            <<<<<<<<<<<<<<<<<<#constop_100
            ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            m19/37 [->>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<]
            copy up arg 7
            >>>>>>>>>>>>>>>>>#arg_7
            op_to_reg storing const value in temp address
            <<<<<<<<<<<<<<<<#constop_117
            +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            m20/36 [->>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<]
            copy up arg 8
            >>>>>>>>>>>>>>>#arg_8
            op_to_reg storing const value in temp address
            <<<<<<<<<<<<<<#constop_100
            ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            m21/35 [->>>>>>>>>>>>>>+<<<<<<<<<<<<<<]
            copy up arg 9
            >>>>>>>>>>>>>#arg_9
            op_to_reg storing const value in temp address
            <<<<<<<<<<<<#constop_101
            +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            m22/34 [->>>>>>>>>>>>+<<<<<<<<<<<<]
            copy up arg 10
            >>>>>>>>>>>#arg_10
            op_to_reg storing const value in temp address
            <<<<<<<<<<#constop_33
            +++++++++++++++++++++++++++++++++
            m23/33 [->>>>>>>>>>+<<<<<<<<<<]
            copy up arg 11
            >>>>>>>>>#arg_11
            op_to_reg storing const value in temp address
            <<<<<<<<#constop_63
            +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            m24/32 [->>>>>>>>+<<<<<<<<]
            give callee a stack pointer
            >>>>>>>>>>>>>>>>>>>>#stack_ptr
            ++++++++++++++++++++++++++++++++++
            l1 <
            d0/45/46 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m46/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            r25 >>>>>>>>>>>>>>>>>>>>>>>>>
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<#JUMP_PAD
            +
            >>>>#caller
            +
            >>#caller/jump_pad_blk
            +
            r20 >>>>>>>>>>>>>>>>>>>>
            <<<<<<#===FRAME_twelve_args
            +
            >>>#twelve_args
            +
            >>#twelve_args/b0
            +
        >>>>>>]
        >#B:%call_term_for_4
        [
            -
            ret void
            zero all function allocs
            <<<<<<<<<<<<-
            #dead_frame
            >>>>-
            l1 <
            <<<<[-]
            r1 >
            l8 <<<<<<<<
        >>>>>>>>>>>>]
    <<<<<<<<]
<<<<]
