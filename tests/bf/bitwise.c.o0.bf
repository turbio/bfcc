r4 >>>>
++++
r1 >
runtime init:
#===TOP_FRAME
+
>#main
+
>#main/b0
+
<<[
    >#main
    [
        >>#B:%ret_lading_pad
        [
            <<<-
            #dead_frame
            >-
            <#dead_fn_pad/main
            >>>-
            l47 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
        ]
        <<<#mainloop_main
        >#F:main
        >#B:%0
        >#B:%ret_lading_pad
        >#B:%3
        >#B:%6
        >#B:%7
        >#B:%10
        >#B:%13
        >#B:%16
        >#B:%call_term_for_6
        >#B:%17
        >#B:%20
        >#B:%23
        >#B:%call_term_for_10
        >#B:%24
        >#B:%call_term_for_12
        >#B:%25
        >#B:%28
        >#B:%29
        >#B:%32
        >#alloc_%1
        >#alloc_%2
        >#%4_=_load_i32*_%1__align_4
        >#%5_=_icmp_ule_i32_%4__i32_1
        >#%8_=_load_i32*_%2__align_4
        >#%9_=_icmp_ule_i32_%8__i32_1
        >#%11_=_load_i32*_%1__align_4
        >#%12_=_icmp_ne_i32_%11__i32_0
        >#%14_=_load_i32*_%2__align_4
        >#%15_=_icmp_ne_i32_%14__i32_0
        >#%18_=_load_i32*_%1__align_4
        >#%19_=_icmp_ne_i32_%18__i32_0
        >#%21_=_load_i32*_%2__align_4
        >#%22_=_icmp_ne_i32_%21__i32_0
        >#%26_=_load_i32*_%2__align_4
        >#%27_=_add_i32_%26__i32_1
        >#%30_=_load_i32*_%1__align_4
        >#%31_=_add_i32_%30__i32_1
        <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<#B:%0
        [
            -
            copy up args
            %1 = alloca i32_ align 4
            %2 = alloca i32_ align 4
            store i32 0_ i32* %1_ align 4
            op_to_reg storing const value in temp address
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#constop_0
            
            <<<<<<<<<<<<<<<<<<[-]
            m39/21 >>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>]
            br label %3
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+
        <<]
        >>#B:%3
        [
            -
            %4 = load i32* %1_ align 4
            d21/23/40 >>>>>>>>>>>>>>>>>[->>+>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<]
            m40/21 >>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>]
            %5 = icmp ule i32 %4_ i32 1
            op_to_reg storing const value in temp address
            <#constop_1
            +
            >>#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m23/41 <<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<]
            >>>>>>>>>>>>>>>>>>>>+
            <<<<[
                -
                
                >>[
                    -
                    
                    r1 >
                ]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<]
            >>>>-
            <<<<<<<<<<<<<<<<<<<+
            >>>>>>>>>>>>>>>>>[
                [-]
                <<<<<<<<<<<<<<<<<[-]
            >>>>>>>>>>>>>>>>>]
            br i1 %5_ label %6_ label %32
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+
            >>>>>>>>>>>>>>>>>>>>>[
                -
                <<<<<<<<<<<<<<<<<<<<<-
                >>+
                #B:main/6_true
            >>>>>>>>>>>>>>>>>>>]
            <<<<<<<<<<<<<<<<<<<<<[
                -
                >>>>>>>>>>>>>>>>>+
                #B:main/32_false
            <<<<<<<<<<<<<<<<<]
        >]
        >#B:%6
        [
            -
            store i32 0_ i32* %2_ align 4
            op_to_reg storing const value in temp address
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#constop_0
            
            <<<<<<<<<<<<<<<<<[-]
            m39/22 >>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>]
            br label %7
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+
        <]
        >#B:%7
        [
            -
            %8 = load i32* %2_ align 4
            d22/25/39 >>>>>>>>>>>>>>>>[->>>+>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<]
            m39/22 >>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>]
            %9 = icmp ule i32 %8_ i32 1
            op_to_reg storing const value in temp address
            #constop_1
            +
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m25/40 <<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<]
            >>>>>>>>>>>>>>>>>+
            <<<[
                -
                
                >[
                    -
                    
                    r1 >
                ]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <]
            >>>-
            <<<<<<<<<<<<<<<<+
            >>>>>>>>>>>>>>[
                [-]
                <<<<<<<<<<<<<<[-]
            >>>>>>>>>>>>>>]
            br i1 %9_ label %10_ label %28
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+
            >>>>>>>>>>>>>>>>>>>>>>>[
                -
                <<<<<<<<<<<<<<<<<<<<<<<-
                >>>>+
                #B:main/10_true
            >>>>>>>>>>>>>>>>>>>]
            <<<<<<<<<<<<<<<<<<<<<<<[
                -
                >>>>>>>>>>>>>>>+
                #B:main/28_false
            <<<<<<<<<<<<<<<]
        >>>]
        >#B:%10
        [
            -
            %11 = load i32* %1_ align 4
            d21/27/39 >>>>>>>>>>>>>>[->>>>>>+>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<]
            m39/21 >>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>]
            %12 = icmp ne i32 %11_ i32 0
            op_to_reg storing const value in temp address
            #constop_0
            
            >>>>>#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m27/44 <<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<]
            >>>>>>>>>>>>>>>>>>>+
            <<<<<<<[
                -
                >+
                >>>>[
                    -
                    <<<<-
                    r1 >
                >>>>]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<]
            >>>>>>>-
            <<[
                [-]
                <<<<<<<<<<<<<<<<+
            >>>>>>>>>>>>>>>>]
            <<<<[
                [-]
                <<<<<<<<<<<<+
            >>>>>>>>>>>>]
            br i1 %12_ label %16_ label %13
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+
            >>>>>>>>>>>>>>>>>>>>>>>>>[
                -
                <<<<<<<<<<<<<<<<<<<<<<<<<-
                >>>>>>+
                #B:main/16_true
            >>>>>>>>>>>>>>>>>>>]
            <<<<<<<<<<<<<<<<<<<<<<<<<[
                -
                >>>>>+
                #B:main/13_false
            <<<<<]
        >>>>]
        >#B:%13
        [
            -
            %14 = load i32* %2_ align 4
            d22/29/39 >>>>>>>>>>>>>>[->>>>>>>+>>>>>>>>>>+<<<<<<<<<<<<<<<<<]
            m39/22 >>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>]
            %15 = icmp ne i32 %14_ i32 0
            op_to_reg storing const value in temp address
            #constop_0
            
            >>#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m29/41 <<<<<<<<<<<<<<[->>>>>>>>>>>>+<<<<<<<<<<<<]
            >>>>>>>>>>>>>>+
            <<<<[
                -
                >+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<]
            >>>>-
            <<[
                [-]
                <<<<<<<<<<<+
            >>>>>>>>>>>]
            <[
                [-]
                <<<<<<<<<<+
            >>>>>>>>>>]
            br i1 %15_ label %16_ label %17
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+
            >>>>>>>>>>>>>>>>>>>>>>>>>>>[
                -
                <<<<<<<<<<<<<<<<<<<<<<<<<<<-
                >>>>>>+
                #B:main/16_true
            >>>>>>>>>>>>>>>>>>>>>]
            <<<<<<<<<<<<<<<<<<<<<<<<<<<[
                -
                >>>>>>>>+
                #B:main/17_false
            <<<<<<<<]
        >>>>>]
        >#B:%16
        [
            -
            call @putchar(i8 111)
            enable next block when we return
            >#caller/%call_term_for_6
            +
            putchar intrinsic
            op_to_reg storing const value in temp address
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>#constop_111
            +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            .
            [-]
        <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
        >#B:%call_term_for_6
        [
            -
            br label %17
            >+
        <]
        >#B:%17
        [
            -
            %18 = load i32* %1_ align 4
            d21/31/39 >>>>>>>>>>[->>>>>>>>>>+>>>>>>>>+<<<<<<<<<<<<<<<<<<]
            m39/21 >>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>]
            %19 = icmp ne i32 %18_ i32 0
            op_to_reg storing const value in temp address
            #constop_0
            
            >>#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m31/41 <<<<<<<<<<<<[->>>>>>>>>>+<<<<<<<<<<]
            >>>>>>>>>>>>+
            <<<<[
                -
                >+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<]
            >>>>-
            <<[
                [-]
                <<<<<<<<<+
            >>>>>>>>>]
            <[
                [-]
                <<<<<<<<+
            >>>>>>>>]
            br i1 %19_ label %20_ label %24
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>[
                -
                <<<<<<<<<<<<<<<<<<<<<<<<<<<<<-
                >>>>>>>>>+
                #B:main/20_true
            >>>>>>>>>>>>>>>>>>>>]
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<[
                -
                >>>>>>>>>>>>+
                #B:main/24_false
            <<<<<<<<<<<<]
        >>>>>>>>]
        >#B:%20
        [
            -
            %21 = load i32* %2_ align 4
            d22/33/39 >>>>>>>>>>[->>>>>>>>>>>+>>>>>>+<<<<<<<<<<<<<<<<<]
            m39/22 >>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>]
            %22 = icmp ne i32 %21_ i32 0
            op_to_reg storing const value in temp address
            #constop_0
            
            >>#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m33/41 <<<<<<<<<<[->>>>>>>>+<<<<<<<<]
            >>>>>>>>>>+
            <<<<[
                -
                >+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<]
            >>>>-
            <<[
                [-]
                <<<<<<<+
            >>>>>>>]
            <[
                [-]
                <<<<<<+
            >>>>>>]
            br i1 %22_ label %23_ label %24
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[
                -
                <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<-
                >>>>>>>>>>+
                #B:main/23_true
            >>>>>>>>>>>>>>>>>>>>>]
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[
                -
                >>>>>>>>>>>>+
                #B:main/24_false
            <<<<<<<<<<<<]
        >>>>>>>>>]
        >#B:%23
        [
            -
            call @putchar(i8 97)
            enable next block when we return
            >#caller/%call_term_for_10
            +
            putchar intrinsic
            op_to_reg storing const value in temp address
            >>>>>>>>>>>>>>>>>>>>>>>>>#constop_97
            +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            .
            [-]
        <<<<<<<<<<<<<<<<<<<<<<<<<<]
        >#B:%call_term_for_10
        [
            -
            br label %24
            >+
        <]
        >#B:%24
        [
            -
            call @putchar(i8 44)
            enable next block when we return
            >#caller/%call_term_for_12
            +
            putchar intrinsic
            op_to_reg storing const value in temp address
            >>>>>>>>>>>>>>>>>>>>>>>#constop_44
            ++++++++++++++++++++++++++++++++++++++++++++
            .
            [-]
        <<<<<<<<<<<<<<<<<<<<<<<<]
        >#B:%call_term_for_12
        [
            -
            br label %25
            >+
        <]
        >#B:%25
        [
            -
            %26 = load i32* %2_ align 4
            d22/35/39 >>>>>[->>>>>>>>>>>>>+>>>>+<<<<<<<<<<<<<<<<<]
            m39/22 >>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>]
            %27 = add i32 %26_ i32 1
            op_to_reg storing const value in temp address
            #constop_1
            +
            m35/36 <<<<[->+<]
            >>>>[
                -
                <<<+
            >>>]
            store i32 %27_ i32* %2_ align 4
            <<<<<<<<<<<<<<<<<[-]
            m36/22 >>>>>>>>>>>>>>[-<<<<<<<<<<<<<<+>>>>>>>>>>>>>>]
            br label %7
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+
        >>>>>>>>>>>]
        >#B:%28
        [
            -
            br label %29
            >+
        <]
        >#B:%29
        [
            -
            %30 = load i32* %1_ align 4
            d21/37/39 >>[->>>>>>>>>>>>>>>>+>>+<<<<<<<<<<<<<<<<<<]
            m39/21 >>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>]
            %31 = add i32 %30_ i32 1
            op_to_reg storing const value in temp address
            #constop_1
            +
            m37/38 <<[->+<]
            >>[
                -
                <+
            >]
            store i32 %31_ i32* %1_ align 4
            <<<<<<<<<<<<<<<<<<[-]
            m38/21 >>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>]
            br label %3
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+
        >>>>>>>>>>>>>>>]
        >#B:%32
        [
            -
            ret void
            zero all function allocs
            >[-]
            >[-]
            <<<<<<<<<<<<<<<<<<<<<<-
            #dead_frame
            >-
            l1 <
            <[-]
            r1 >
            l5 <<<<<
        >>>>>>>>>>>>>>>>>>>>]
    <<<<<<<<<<<<<<<<<<<]
<]
