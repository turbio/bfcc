r6 >>>>>>
++++++
r1 >
runtime init:
#===TOP_FRAME
+
>>>#main
+
>#main/b0
+
<<<<[
    >#add
    [
        >>>>#add/RET_LANDING_PAD
        [
            <<<<<-
            #dead_frame
            >-
            <#dead_fn_pad/add
            >>>>>-
            l25 <<<<<<<<<<<<<<<<<<<<<<<<<
        ]
        <<<<<#mainloop_add
        >#F:add
        >#F:sub
        >#F:main
        >#B:%no_b0_call_for_add
        >#B:%ret_lading_pad
        >#B:%2
        >#B:%call_term_for_0
        >#alloc_%3
        >#alloc_%4
        <<<<<[
            -
            copy up args
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#arg_%0
            l2 <<
            m0/37 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            r2 >>
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#arg_%1
            l3 <<<
            m0/39 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            r3 >>>
            br label %2
            >>>>>>+
        <<]
        >>[
            -
            %3 = alloca i32_ align 4
            %4 = alloca i32_ align 4
            store i32 %0_ i32* %3_ align 4
            op_to_reg storing pointer value in temp address
            >>>>#tmp_allocptr_%3
            >#tmp_allocptr_tru_%3
            l1 <
            d0/11/12 <<<<<<<<<<<[->>>>>>>>>>>+>+<<<<<<<<<<<<]
            m12/0 >>>>>>>>>>>>[-<<<<<<<<<<<<+>>>>>>>>>>>>]
            r1 >
            <<+++++++++
            store sitch: alloca Some(8)
            store sitch: from LocalOperand { name: Number(0)_ ty: TypeRef(IntegerType { bits: 32 }) }
            >>#train_tmp
            >#train_ret
            >#train_ptr
            >#train_cargo
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/17/18 <<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<]
            m17/0 >>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m17/19 <<<<[->>+<<]
            >>>>+
            <<<<<<<<<<<[
                -
                >>>>>>>>+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<<<]
            >>>>>>>>>>>-
            <<#subnu_to
            [
                if pos
                m19/14 [-<<<<<+>>>>>]
                <<<<<++++++++++++
            >>>>>]
            <[
                if neg
                <<<<++++++++++++
                >>>>[
                    -
                    <<<<-
                >>>>]
            ]
            m35/15 >>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>]
            drive left! choo choo
            <<<<<<<<<<<<<<<<<<<<<[
                m13/12 <[-<+>]
                m14/13 >[-<+>]
                m15/14 >[-<+>]
                m11/15 <<<<[->>>>+<<<<]
                l1 <
                >>>-
                <+
            >]
            <<<[-]
            m15/11 >>>>[-<<<<+>>>>]
            <<[
                m16/12 >>>[-<<<<+>>>>]
                
                m13/14 <<<[->+<]
                r1 >
                -
            ]
            store i32 %1_ i32* %4_ align 4
            op_to_reg storing pointer value in temp address
            <<<#tmp_allocptr_%4
            >#tmp_allocptr_tru_%4
            l1 <
            d0/11/12 <<<<<<<<<<<[->>>>>>>>>>>+>+<<<<<<<<<<<<]
            m12/0 >>>>>>>>>>>>[-<<<<<<<<<<<<+>>>>>>>>>>>>]
            r1 >
            <<++++++++++
            store sitch: alloca Some(9)
            store sitch: from LocalOperand { name: Number(1)_ ty: TypeRef(IntegerType { bits: 32 }) }
            >>#train_tmp
            >#train_ret
            >#train_ptr
            >#train_cargo
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/17/18 <<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<]
            m17/0 >>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >>>>#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m17/22 <<<<<<<[->>>>>+<<<<<]
            >>>>>>>+
            <<<<<<<<<<<<<<[
                -
                >>>>>>>>+
                >>>>[
                    -
                    <<<<-
                    r1 >
                >>>>]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<<<<<<]
            >>>>>>>>>>>>>>-
            <<#subnu_to
            [
                if pos
                m22/14 [-<<<<<<<<+>>>>>>>>]
                <<<<<<<<++++++++++++
            >>>>>>>>]
            <<<<[
                if neg
                <<<<++++++++++++
                >>>>[
                    -
                    <<<<-
                >>>>]
            ]
            m36/15 >>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>]
            drive left! choo choo
            <<<<<<<<<<<<<<<<<<<<<<[
                m13/12 <[-<+>]
                m14/13 >[-<+>]
                m15/14 >[-<+>]
                m11/15 <<<<[->>>>+<<<<]
                l1 <
                >>>-
                <+
            >]
            <<<[-]
            m15/11 >>>>[-<<<<+>>>>]
            <<[
                m16/12 >>>[-<<<<+>>>>]
                
                m13/14 <<<[->+<]
                r1 >
                -
            ]
            %5 = load i32* %3_ align 4
            op_to_reg storing pointer value in temp address
            <<<#tmp_allocptr_%3
            >#tmp_allocptr_tru_%3
            l1 <
            d0/11/12 <<<<<<<<<<<[->>>>>>>>>>>+>+<<<<<<<<<<<<]
            m12/0 >>>>>>>>>>>>[-<<<<<<<<<<<<+>>>>>>>>>>>>]
            r1 >
            <<+++++++++
            >>>>>>>>>>>>>>>>>>>>>>>>>>>#load_ret_%5
            <<<<<<<<<<<<<<<<<<<<<<<<<#train_tmp
            >#train_ret
            >#train_ptr
            
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/16/17 <<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<]
            m16/0 >>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m16/18 <<<<[->>+<<]
            >>>>+
            <<<<<<<<<<[
                -
                >>>>>>>+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<<]
            >>>>>>>>>>-
            <<#subnu_to
            [
                if pos
                m18/14 [-<<<<+>>>>]
                <<<<++++++++++++
            >>>>]
            <[
                if neg
                <<<++++++++++++
                >>>[
                    -
                    <<<-
                >>>]
            ]
            drive left! choo choo
            <<<[
                m13/12 <[-<+>]
                m14/13 >[-<+>]
                
                m11/14 <<<[->>>+<<<]
                l1 <
                >>>-
                <+
            >]
            get our bag
            d11/12/14 <<<[->+>>+<<<]
            m12/11 >[-<+>]
            >[
                m15/12 >>[-<<<+>>>]
                m14/15 <[->+<]
                m13/14 <[->+<]
                r1 >
                -
            ]
            m14/37 >[->>>>>>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<]
            %6 = add i32 65_ i32 %5
            op_to_reg storing const value in temp address
            <<<<#constop_65
            +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            #add_op0_i32_65
            >>>>>>>>>>>>>>>>>>>>>>>>>>>#add_op1_i32_%5
            >#add_ret_%6
            m10/38 <<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            >>>>>>>>>>>>>>>>>>>>>>>>>>>[
                -
                >+
            <]
            %7 = load i32* %4_ align 4
            op_to_reg storing pointer value in temp address
            <<<<<<<<<<<<<<<<<<<<<<<<<<<#tmp_allocptr_%4
            >#tmp_allocptr_tru_%4
            l1 <
            d0/11/12 <<<<<<<<<<<[->>>>>>>>>>>+>+<<<<<<<<<<<<]
            m12/0 >>>>>>>>>>>>[-<<<<<<<<<<<<+>>>>>>>>>>>>]
            r1 >
            <<++++++++++
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>#load_ret_%7
            <<<<<<<<<<<<<<<<<<<<<<<<<<<#train_tmp
            >#train_ret
            >#train_ptr
            
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/16/17 <<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<]
            m16/0 >>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m16/18 <<<<[->>+<<]
            >>>>+
            <<<<<<<<<<[
                -
                >>>>>>>+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<<]
            >>>>>>>>>>-
            <<#subnu_to
            [
                if pos
                m18/14 [-<<<<+>>>>]
                <<<<++++++++++++
            >>>>]
            <[
                if neg
                <<<++++++++++++
                >>>[
                    -
                    <<<-
                >>>]
            ]
            drive left! choo choo
            <<<[
                m13/12 <[-<+>]
                m14/13 >[-<+>]
                
                m11/14 <<<[->>>+<<<]
                l1 <
                >>>-
                <+
            >]
            get our bag
            d11/12/14 <<<[->+>>+<<<]
            m12/11 >[-<+>]
            >[
                m15/12 >>[-<<<+>>>]
                m14/15 <[->+<]
                m13/14 <[->+<]
                r1 >
                -
            ]
            m14/39 >[->>>>>>>>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<<]
            %8 = add i32 %6_ i32 %7
            >>>>>>>>>>>>>>>>>>>>>>>>#add_op0_i32_%6
            >#add_op1_i32_%7
            >#add_ret_%8
            m38/40 <<[->>+<<]
            >[
                -
                >+
            <]
            %9 = trunc i32 %8 to i8
            >#trunc_op_i32_%8
            >#trunc_ret_%9
            m40/41 <[->+<]
            call @putchar(i8 %9)
            enable next block when we return
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<#caller/%call_term_for_0
            +
            putchar intrinsic
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>.
            [-]
        <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
        >[
            -
            ret void
            zero all function allocs
            >[-]
            >[-]
            <<<<<<<<<-
            #dead_frame
            >-
            l1 <
            <[-]
            r1 >
            l9 <<<<<<<<<
        >>>>>>>]
    <<<<<<]
    >#sub
    [
        >>>#sub/RET_LANDING_PAD
        [
            <<<<<-
            #dead_frame
            >>-
            <<#dead_fn_pad/sub
            >>>>>-
            l25 <<<<<<<<<<<<<<<<<<<<<<<<<
        ]
        <<<<<#mainloop_sub
        >#F:add
        >#F:sub
        >#F:main
        >#B:%no_b0_call_for_sub
        >#B:%ret_lading_pad
        >#B:%2
        >#B:%call_term_for_0
        >#alloc_%3
        >#alloc_%4
        <<<<<[
            -
            copy up args
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#arg_%0
            l2 <<
            m0/37 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            r2 >>
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#arg_%1
            l3 <<<
            m0/39 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            r3 >>>
            br label %2
            >>>>>>+
        <<]
        >>[
            -
            %3 = alloca i32_ align 4
            %4 = alloca i32_ align 4
            store i32 %0_ i32* %3_ align 4
            op_to_reg storing pointer value in temp address
            >>>>#tmp_allocptr_%3
            >#tmp_allocptr_tru_%3
            l1 <
            d0/11/12 <<<<<<<<<<<[->>>>>>>>>>>+>+<<<<<<<<<<<<]
            m12/0 >>>>>>>>>>>>[-<<<<<<<<<<<<+>>>>>>>>>>>>]
            r1 >
            <<+++++++++
            store sitch: alloca Some(8)
            store sitch: from LocalOperand { name: Number(0)_ ty: TypeRef(IntegerType { bits: 32 }) }
            >>#train_tmp
            >#train_ret
            >#train_ptr
            >#train_cargo
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/17/18 <<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<]
            m17/0 >>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m17/19 <<<<[->>+<<]
            >>>>+
            <<<<<<<<<<<[
                -
                >>>>>>>>+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<<<]
            >>>>>>>>>>>-
            <<#subnu_to
            [
                if pos
                m19/14 [-<<<<<+>>>>>]
                <<<<<++++++++++++
            >>>>>]
            <[
                if neg
                <<<<++++++++++++
                >>>>[
                    -
                    <<<<-
                >>>>]
            ]
            m35/15 >>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>]
            drive left! choo choo
            <<<<<<<<<<<<<<<<<<<<<[
                m13/12 <[-<+>]
                m14/13 >[-<+>]
                m15/14 >[-<+>]
                m11/15 <<<<[->>>>+<<<<]
                l1 <
                >>>-
                <+
            >]
            <<<[-]
            m15/11 >>>>[-<<<<+>>>>]
            <<[
                m16/12 >>>[-<<<<+>>>>]
                
                m13/14 <<<[->+<]
                r1 >
                -
            ]
            store i32 %1_ i32* %4_ align 4
            op_to_reg storing pointer value in temp address
            <<<#tmp_allocptr_%4
            >#tmp_allocptr_tru_%4
            l1 <
            d0/11/12 <<<<<<<<<<<[->>>>>>>>>>>+>+<<<<<<<<<<<<]
            m12/0 >>>>>>>>>>>>[-<<<<<<<<<<<<+>>>>>>>>>>>>]
            r1 >
            <<++++++++++
            store sitch: alloca Some(9)
            store sitch: from LocalOperand { name: Number(1)_ ty: TypeRef(IntegerType { bits: 32 }) }
            >>#train_tmp
            >#train_ret
            >#train_ptr
            >#train_cargo
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/17/18 <<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<]
            m17/0 >>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >>>>#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m17/22 <<<<<<<[->>>>>+<<<<<]
            >>>>>>>+
            <<<<<<<<<<<<<<[
                -
                >>>>>>>>+
                >>>>[
                    -
                    <<<<-
                    r1 >
                >>>>]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<<<<<<]
            >>>>>>>>>>>>>>-
            <<#subnu_to
            [
                if pos
                m22/14 [-<<<<<<<<+>>>>>>>>]
                <<<<<<<<++++++++++++
            >>>>>>>>]
            <<<<[
                if neg
                <<<<++++++++++++
                >>>>[
                    -
                    <<<<-
                >>>>]
            ]
            m36/15 >>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>]
            drive left! choo choo
            <<<<<<<<<<<<<<<<<<<<<<[
                m13/12 <[-<+>]
                m14/13 >[-<+>]
                m15/14 >[-<+>]
                m11/15 <<<<[->>>>+<<<<]
                l1 <
                >>>-
                <+
            >]
            <<<[-]
            m15/11 >>>>[-<<<<+>>>>]
            <<[
                m16/12 >>>[-<<<<+>>>>]
                
                m13/14 <<<[->+<]
                r1 >
                -
            ]
            %5 = load i32* %3_ align 4
            op_to_reg storing pointer value in temp address
            <<<#tmp_allocptr_%3
            >#tmp_allocptr_tru_%3
            l1 <
            d0/11/12 <<<<<<<<<<<[->>>>>>>>>>>+>+<<<<<<<<<<<<]
            m12/0 >>>>>>>>>>>>[-<<<<<<<<<<<<+>>>>>>>>>>>>]
            r1 >
            <<+++++++++
            >>>>>>>>>>>>>>>>>>>>>>>>>>>#load_ret_%5
            <<<<<<<<<<<<<<<<<<<<<<<<<#train_tmp
            >#train_ret
            >#train_ptr
            
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/16/17 <<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<]
            m16/0 >>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m16/18 <<<<[->>+<<]
            >>>>+
            <<<<<<<<<<[
                -
                >>>>>>>+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<<]
            >>>>>>>>>>-
            <<#subnu_to
            [
                if pos
                m18/14 [-<<<<+>>>>]
                <<<<++++++++++++
            >>>>]
            <[
                if neg
                <<<++++++++++++
                >>>[
                    -
                    <<<-
                >>>]
            ]
            drive left! choo choo
            <<<[
                m13/12 <[-<+>]
                m14/13 >[-<+>]
                
                m11/14 <<<[->>>+<<<]
                l1 <
                >>>-
                <+
            >]
            get our bag
            d11/12/14 <<<[->+>>+<<<]
            m12/11 >[-<+>]
            >[
                m15/12 >>[-<<<+>>>]
                m14/15 <[->+<]
                m13/14 <[->+<]
                r1 >
                -
            ]
            m14/37 >[->>>>>>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<]
            %6 = add i32 65_ i32 %5
            op_to_reg storing const value in temp address
            <<<<#constop_65
            +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            #add_op0_i32_65
            >>>>>>>>>>>>>>>>>>>>>>>>>>>#add_op1_i32_%5
            >#add_ret_%6
            m10/38 <<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            >>>>>>>>>>>>>>>>>>>>>>>>>>>[
                -
                >+
            <]
            %7 = load i32* %4_ align 4
            op_to_reg storing pointer value in temp address
            <<<<<<<<<<<<<<<<<<<<<<<<<<<#tmp_allocptr_%4
            >#tmp_allocptr_tru_%4
            l1 <
            d0/11/12 <<<<<<<<<<<[->>>>>>>>>>>+>+<<<<<<<<<<<<]
            m12/0 >>>>>>>>>>>>[-<<<<<<<<<<<<+>>>>>>>>>>>>]
            r1 >
            <<++++++++++
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>#load_ret_%7
            <<<<<<<<<<<<<<<<<<<<<<<<<<<#train_tmp
            >#train_ret
            >#train_ptr
            
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/16/17 <<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<]
            m16/0 >>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m16/18 <<<<[->>+<<]
            >>>>+
            <<<<<<<<<<[
                -
                >>>>>>>+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<<]
            >>>>>>>>>>-
            <<#subnu_to
            [
                if pos
                m18/14 [-<<<<+>>>>]
                <<<<++++++++++++
            >>>>]
            <[
                if neg
                <<<++++++++++++
                >>>[
                    -
                    <<<-
                >>>]
            ]
            drive left! choo choo
            <<<[
                m13/12 <[-<+>]
                m14/13 >[-<+>]
                
                m11/14 <<<[->>>+<<<]
                l1 <
                >>>-
                <+
            >]
            get our bag
            d11/12/14 <<<[->+>>+<<<]
            m12/11 >[-<+>]
            >[
                m15/12 >>[-<<<+>>>]
                m14/15 <[->+<]
                m13/14 <[->+<]
                r1 >
                -
            ]
            m14/39 >[->>>>>>>>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<<]
            %8 = sub i32 %6_ i32 %7
            >>>>>>>>>>>>>>>>>>>>>>>>#sub_op0_i32_%6
            >#sub_op1_i32_%7
            >#sub_ret_%8
            m38/40 <<[->>+<<]
            >[
                -
                >-
            <]
            %9 = trunc i32 %8 to i8
            >#trunc_op_i32_%8
            >#trunc_ret_%9
            m40/41 <[->+<]
            call @putchar(i8 %9)
            enable next block when we return
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<#caller/%call_term_for_0
            +
            putchar intrinsic
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>.
            [-]
        <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
        >[
            -
            ret void
            zero all function allocs
            >[-]
            >[-]
            <<<<<<<<<-
            #dead_frame
            >>-
            l1 <
            <<[-]
            r1 >
            l9 <<<<<<<<<
        >>>>>>>]
    <<<<<]
    >#main
    [
        >>#main/RET_LANDING_PAD
        [
            <<<<<-
            #dead_frame
            >>>-
            <<<#dead_fn_pad/main
            >>>>>-
            l44 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
        ]
        <<<<<#mainloop_main
        >#F:add
        >#F:sub
        >#F:main
        >#B:%0
        >#B:%ret_lading_pad
        >#B:%5
        >#B:%8
        >#B:%9
        >#B:%12
        >#B:%call_term_for_4
        >#B:%15
        >#B:%18
        >#B:%19
        >#B:%22
        >#B:%23
        >#B:%26
        >#B:%27
        >#B:%30
        >#B:%call_term_for_13
        >#B:%33
        >#B:%36
        >#B:%37
        >#B:%40
        >#alloc_%1
        >#alloc_%2
        >#alloc_%3
        >#alloc_%4
        <<<<<<<<<<<<<<<<<<<<<<<[
            -
            copy up args
            %1 = alloca i32_ align 4
            %2 = alloca i32_ align 4
            %3 = alloca i32_ align 4
            %4 = alloca i32_ align 4
            store i32 0_ i32* %1_ align 4
            op_to_reg storing const value in temp address
            >>>>>>>>>>>>>>>>>>>>>>>>#constop_0
            
            op_to_reg storing pointer value in temp address
            >#tmp_allocptr_%1
            >#tmp_allocptr_tru_%1
            l1 <
            d0/30/31 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m31/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            <<+++++++++++++++++++++++++
            store sitch: alloca Some(24)
            store sitch: from ConstantOperand(ConstantRef(Int { bits: 32_ value: 0 }))
            >>#train_tmp
            >#train_ret
            >#train_ptr
            >#train_cargo
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/36/37 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m36/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m36/38 <<<<[->>+<<]
            >>>>+
            <<<<<<<<<<<[
                -
                >>>>>>>>+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<<<]
            >>>>>>>>>>>-
            <<#subnu_to
            [
                if pos
                m38/33 [-<<<<<+>>>>>]
                <<<<<+++++++++++++++++++++++++++++++
            >>>>>]
            <[
                if neg
                <<<<+++++++++++++++++++++++++++++++
                >>>>[
                    -
                    <<<<-
                >>>>]
            ]
            m28/34 <<<<<<<<<[->>>>>>+<<<<<<]
            drive left! choo choo
            >>>>>[
                m32/31 <[-<+>]
                m33/32 >[-<+>]
                m34/33 >[-<+>]
                m30/34 <<<<[->>>>+<<<<]
                l1 <
                >>>-
                <+
            >]
            <<<[-]
            m34/30 >>>>[-<<<<+>>>>]
            <<[
                m35/31 >>>[-<<<<+>>>>]
                
                m32/33 <<<[->+<]
                r1 >
                -
            ]
            br label %5
            <<<<<<<<<<<<<<<<<<<<<<<<<<+
        <<]
        >>[
            -
            %6 = load i32* %1_ align 4
            op_to_reg storing pointer value in temp address
            >>>>>>>>>>>>>>>>>>>>>>#tmp_allocptr_%1
            >#tmp_allocptr_tru_%1
            l1 <
            d0/29/30 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m30/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            <<+++++++++++++++++++++++++
            >>>>>>>>>>>>>>>>>>>>>>>>>>#load_ret_%6
            <<<<<<<<<<<<<<<<<<<<<<<<#train_tmp
            >#train_ret
            >#train_ptr
            
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/34/35 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m34/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m34/36 <<<<[->>+<<]
            >>>>+
            <<<<<<<<<<[
                -
                >>>>>>>+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<<]
            >>>>>>>>>>-
            <<#subnu_to
            [
                if pos
                m36/32 [-<<<<+>>>>]
                <<<<++++++++++++++++++++++++++++++
            >>>>]
            <[
                if neg
                <<<++++++++++++++++++++++++++++++
                >>>[
                    -
                    <<<-
                >>>]
            ]
            drive left! choo choo
            <<<[
                m31/30 <[-<+>]
                m32/31 >[-<+>]
                
                m29/32 <<<[->>>+<<<]
                l1 <
                >>>-
                <+
            >]
            get our bag
            d29/30/32 <<<[->+>>+<<<]
            m30/29 >[-<+>]
            >[
                m33/30 >>[-<<<+>>>]
                m32/33 <[->+<]
                m31/32 <[->+<]
                r1 >
                -
            ]
            m32/54 >[->>>>>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<]
            %7 = icmp slt i32 %6_ i32 16
            op_to_reg storing const value in temp address
            <<<<#constop_16
            ++++++++++++++++
            >>>>>>>>>>>>>>>>>>>>>>>>>>#icmp_op0_i32_%6
            <<<<<<<<<<<<<<<<<<<<<<<<<<#icmp_op1_i32_16
            >>>>>>>>>>>>>>>>>>>>>>>>>>>#icmp_ret_%7
            <<<<<<<<<<<<<<<<<<<<<<<<<<#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m28/29 <<<[->+<]
            >>>+
            >>>>>>>>>>>>>>>>>>>>>>>[
                -
                
                <<<<<<<<<<<<<<<<<<<<<<<<<[
                    -
                    
                    r1 >
                ]
                r1 >
                [
                    l1 <
                ]
                l1 <
            >>>>>>>>>>>>>>>>>>>>>>>>>]
            <<<<<<<<<<<<<<<<<<<<<<<-
            <<[
                [-]
                >>>>>>>>>>>>>>>>>>>>>>>>>>+
            <<<<<<<<<<<<<<<<<<<<<<<<<<]
            br i1 %7_ label %8_ label %22
            <<<<<<<<<<<<<<<<<<<<<<<<+
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[
                -
                <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<-
                >>+
                #B:main/8_true
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[
                -
                >>>>>>>>>+
                #B:main/22_false
            <<<<<<<<<]
        >]
        >[
            -
            store i32 0_ i32* %2_ align 4
            op_to_reg storing const value in temp address
            >>>>>>>>>>>>>>>>>>>>>#constop_0
            
            op_to_reg storing pointer value in temp address
            >#tmp_allocptr_%2
            >#tmp_allocptr_tru_%2
            l1 <
            d0/30/31 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m31/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            <<++++++++++++++++++++++++++
            store sitch: alloca Some(25)
            store sitch: from ConstantOperand(ConstantRef(Int { bits: 32_ value: 0 }))
            >>#train_tmp
            >#train_ret
            >#train_ptr
            >#train_cargo
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/36/37 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m36/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >>>>#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m36/41 <<<<<<<[->>>>>+<<<<<]
            >>>>>>>+
            <<<<<<<<<<<<<<[
                -
                >>>>>>>>+
                >>>>[
                    -
                    <<<<-
                    r1 >
                >>>>]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<<<<<<]
            >>>>>>>>>>>>>>-
            <<#subnu_to
            [
                if pos
                m41/33 [-<<<<<<<<+>>>>>>>>]
                <<<<<<<<+++++++++++++++++++++++++++++++
            >>>>>>>>]
            <<<<[
                if neg
                <<<<+++++++++++++++++++++++++++++++
                >>>>[
                    -
                    <<<<-
                >>>>]
            ]
            m28/34 <<<<<<<<<[->>>>>>+<<<<<<]
            drive left! choo choo
            >>>>>[
                m32/31 <[-<+>]
                m33/32 >[-<+>]
                m34/33 >[-<+>]
                m30/34 <<<<[->>>>+<<<<]
                l1 <
                >>>-
                <+
            >]
            <<<[-]
            m34/30 >>>>[-<<<<+>>>>]
            <<[
                m35/31 >>>[-<<<<+>>>>]
                
                m32/33 <<<[->+<]
                r1 >
                -
            ]
            br label %9
            <<<<<<<<<<<<<<<<<<<<<<<<+
        <]
        >[
            -
            %10 = load i32* %2_ align 4
            op_to_reg storing pointer value in temp address
            >>>>>>>>>>>>>>>>>>>>#tmp_allocptr_%2
            >#tmp_allocptr_tru_%2
            l1 <
            d0/29/30 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m30/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            <<++++++++++++++++++++++++++
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>#load_ret_%10
            <<<<<<<<<<<<<<<<<<<<<<<<<<#train_tmp
            >#train_ret
            >#train_ptr
            
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/34/35 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m34/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m34/36 <<<<[->>+<<]
            >>>>+
            <<<<<<<<<<[
                -
                >>>>>>>+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<<]
            >>>>>>>>>>-
            <<#subnu_to
            [
                if pos
                m36/32 [-<<<<+>>>>]
                <<<<++++++++++++++++++++++++++++++
            >>>>]
            <[
                if neg
                <<<++++++++++++++++++++++++++++++
                >>>[
                    -
                    <<<-
                >>>]
            ]
            drive left! choo choo
            <<<[
                m31/30 <[-<+>]
                m32/31 >[-<+>]
                
                m29/32 <<<[->>>+<<<]
                l1 <
                >>>-
                <+
            >]
            get our bag
            d29/30/32 <<<[->+>>+<<<]
            m30/29 >[-<+>]
            >[
                m33/30 >>[-<<<+>>>]
                m32/33 <[->+<]
                m31/32 <[->+<]
                r1 >
                -
            ]
            m32/56 >[->>>>>>>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<]
            %11 = icmp slt i32 %10_ i32 16
            op_to_reg storing const value in temp address
            <<<<#constop_16
            ++++++++++++++++
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>#icmp_op0_i32_%10
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<#icmp_op1_i32_16
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>#icmp_ret_%11
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m28/29 <<<[->+<]
            >>>+
            >>>>>>>>>>>>>>>>>>>>>>>>>[
                -
                
                <<<<<<<<<<<<<<<<<<<<<<<<<<<[
                    -
                    
                    r1 >
                ]
                r1 >
                [
                    l1 <
                ]
                l1 <
            >>>>>>>>>>>>>>>>>>>>>>>>>>>]
            <<<<<<<<<<<<<<<<<<<<<<<<<-
            <<[
                [-]
                >>>>>>>>>>>>>>>>>>>>>>>>>>>>+
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            br i1 %11_ label %12_ label %18
            <<<<<<<<<<<<<<<<<<<<<<<<+
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[
                -
                <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<-
                >>>>+
                #B:main/12_true
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[
                -
                >>>>>>>+
                #B:main/18_false
            <<<<<<<]
        >>>]
        >[
            -
            %13 = load i32* %1_ align 4
            op_to_reg storing pointer value in temp address
            >>>>>>>>>>>>>>>>>>>#tmp_allocptr_%1
            >#tmp_allocptr_tru_%1
            l1 <
            d0/29/30 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m30/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            <<+++++++++++++++++++++++++
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#load_ret_%13
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<#train_tmp
            >#train_ret
            >#train_ptr
            
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/34/35 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m34/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m34/36 <<<<[->>+<<]
            >>>>+
            <<<<<<<<<<[
                -
                >>>>>>>+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<<]
            >>>>>>>>>>-
            <<#subnu_to
            [
                if pos
                m36/32 [-<<<<+>>>>]
                <<<<++++++++++++++++++++++++++++++
            >>>>]
            <[
                if neg
                <<<++++++++++++++++++++++++++++++
                >>>[
                    -
                    <<<-
                >>>]
            ]
            drive left! choo choo
            <<<[
                m31/30 <[-<+>]
                m32/31 >[-<+>]
                
                m29/32 <<<[->>>+<<<]
                l1 <
                >>>-
                <+
            >]
            get our bag
            d29/30/32 <<<[->+>>+<<<]
            m30/29 >[-<+>]
            >[
                m33/30 >>[-<<<+>>>]
                m32/33 <[->+<]
                m31/32 <[->+<]
                r1 >
                -
            ]
            m32/58 >[->>>>>>>>>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<<<]
            %14 = load i32* %2_ align 4
            op_to_reg storing pointer value in temp address
            <<<<#tmp_allocptr_%2
            >#tmp_allocptr_tru_%2
            l1 <
            d0/29/30 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m30/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            <<++++++++++++++++++++++++++
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#load_ret_%14
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<#train_tmp
            >#train_ret
            >#train_ptr
            
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/34/35 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m34/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m34/36 <<<<[->>+<<]
            >>>>+
            <<<<<<<<<<[
                -
                >>>>>>>+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<<]
            >>>>>>>>>>-
            <<#subnu_to
            [
                if pos
                m36/32 [-<<<<+>>>>]
                <<<<++++++++++++++++++++++++++++++
            >>>>]
            <[
                if neg
                <<<++++++++++++++++++++++++++++++
                >>>[
                    -
                    <<<-
                >>>]
            ]
            drive left! choo choo
            <<<[
                m31/30 <[-<+>]
                m32/31 >[-<+>]
                
                m29/32 <<<[->>>+<<<]
                l1 <
                >>>-
                <+
            >]
            get our bag
            d29/30/32 <<<[->+>>+<<<]
            m30/29 >[-<+>]
            >[
                m33/30 >>[-<<<+>>>]
                m32/33 <[->+<]
                m31/32 <[->+<]
                r1 >
                -
            ]
            m32/59 >[->>>>>>>>>>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            call @add(i32 %13_ i32 %14)
            enable next block when we return
            <<<<<<<<<<<<<<<<<<<<<<#caller/%call_term_for_4
            +
            stack_width 44
            ret_pad_width 5
            copy up arg 0
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#arg_0
            m58/51 >>>>>>>[-<<<<<<<+>>>>>>>]
            copy up arg 1
            <<<<<<<<#arg_1
            m59/50 >>>>>>>>>[-<<<<<<<<<+>>>>>>>>>]
            give callee a stack pointer
            <<<<<<<#stack_ptr
            ++++++++++++++++++++++++++++++++++++++++++++++++++++
            l1 <
            d0/53/54 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m54/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            r44 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<#JUMP_PAD
            +
            >>>#caller
            +
            >>#caller/jump_pad_blk
            +
            r9 >>>>>>>>>
            <<<<<#===FRAME_add
            +
            >#add
            +
            >>>#add/b0
            +
        >>>>>]
        >[
            -
            br label %15
            >+
        <]
        >[
            -
            %16 = load i32* %2_ align 4
            op_to_reg storing pointer value in temp address
            >>>>>>>>>>>>>>>>>#tmp_allocptr_%2
            >#tmp_allocptr_tru_%2
            l1 <
            d0/29/30 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m30/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            <<++++++++++++++++++++++++++
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#load_ret_%16
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<#train_tmp
            >#train_ret
            >#train_ptr
            
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/34/35 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m34/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m34/36 <<<<[->>+<<]
            >>>>+
            <<<<<<<<<<[
                -
                >>>>>>>+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<<]
            >>>>>>>>>>-
            <<#subnu_to
            [
                if pos
                m36/32 [-<<<<+>>>>]
                <<<<++++++++++++++++++++++++++++++
            >>>>]
            <[
                if neg
                <<<++++++++++++++++++++++++++++++
                >>>[
                    -
                    <<<-
                >>>]
            ]
            drive left! choo choo
            <<<[
                m31/30 <[-<+>]
                m32/31 >[-<+>]
                
                m29/32 <<<[->>>+<<<]
                l1 <
                >>>-
                <+
            >]
            get our bag
            d29/30/32 <<<[->+>>+<<<]
            m30/29 >[-<+>]
            >[
                m33/30 >>[-<<<+>>>]
                m32/33 <[->+<]
                m31/32 <[->+<]
                r1 >
                -
            ]
            m32/60 >[->>>>>>>>>>>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            %17 = add i32 %16_ i32 1
            op_to_reg storing const value in temp address
            <<<<#constop_1
            +
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#add_op0_i32_%16
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<#add_op1_i32_1
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#add_ret_%17
            m60/61 <[->+<]
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[
                -
                >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            store i32 %17_ i32* %2_ align 4
            op_to_reg storing pointer value in temp address
            #tmp_allocptr_%2
            >#tmp_allocptr_tru_%2
            l1 <
            d0/29/30 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m30/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            <<++++++++++++++++++++++++++
            store sitch: alloca Some(25)
            store sitch: from LocalOperand { name: Number(17)_ ty: TypeRef(IntegerType { bits: 32 }) }
            >>#train_tmp
            >#train_ret
            >#train_ptr
            >#train_cargo
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/35/36 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m35/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m35/37 <<<<[->>+<<]
            >>>>+
            <<<<<<<<<<<[
                -
                >>>>>>>>+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<<<]
            >>>>>>>>>>>-
            <<#subnu_to
            [
                if pos
                m37/32 [-<<<<<+>>>>>]
                <<<<<++++++++++++++++++++++++++++++
            >>>>>]
            <[
                if neg
                <<<<++++++++++++++++++++++++++++++
                >>>>[
                    -
                    <<<<-
                >>>>]
            ]
            m61/33 >>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            drive left! choo choo
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<[
                m31/30 <[-<+>]
                m32/31 >[-<+>]
                m33/32 >[-<+>]
                m29/33 <<<<[->>>>+<<<<]
                l1 <
                >>>-
                <+
            >]
            <<<[-]
            m33/29 >>>>[-<<<<+>>>>]
            <<[
                m34/30 >>>[-<<<<+>>>>]
                
                m31/32 <<<[->+<]
                r1 >
                -
            ]
            br label %9
            <<<<<<<<<<<<<<<<<<<<<<<+
        >>>]
        >[
            -
            br label %19
            >+
        <]
        >[
            -
            %20 = load i32* %1_ align 4
            op_to_reg storing pointer value in temp address
            >>>>>>>>>>>>>>>#tmp_allocptr_%1
            >#tmp_allocptr_tru_%1
            l1 <
            d0/29/30 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m30/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            <<+++++++++++++++++++++++++
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#load_ret_%20
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<#train_tmp
            >#train_ret
            >#train_ptr
            
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/34/35 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m34/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m34/36 <<<<[->>+<<]
            >>>>+
            <<<<<<<<<<[
                -
                >>>>>>>+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<<]
            >>>>>>>>>>-
            <<#subnu_to
            [
                if pos
                m36/32 [-<<<<+>>>>]
                <<<<++++++++++++++++++++++++++++++
            >>>>]
            <[
                if neg
                <<<++++++++++++++++++++++++++++++
                >>>[
                    -
                    <<<-
                >>>]
            ]
            drive left! choo choo
            <<<[
                m31/30 <[-<+>]
                m32/31 >[-<+>]
                
                m29/32 <<<[->>>+<<<]
                l1 <
                >>>-
                <+
            >]
            get our bag
            d29/30/32 <<<[->+>>+<<<]
            m30/29 >[-<+>]
            >[
                m33/30 >>[-<<<+>>>]
                m32/33 <[->+<]
                m31/32 <[->+<]
                r1 >
                -
            ]
            m32/62 >[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            %21 = add i32 %20_ i32 1
            op_to_reg storing const value in temp address
            <<<<#constop_1
            +
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#add_op0_i32_%20
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<#add_op1_i32_1
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#add_ret_%21
            m62/63 <[->+<]
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[
                -
                >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            store i32 %21_ i32* %1_ align 4
            op_to_reg storing pointer value in temp address
            #tmp_allocptr_%1
            >#tmp_allocptr_tru_%1
            l1 <
            d0/29/30 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m30/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            <<+++++++++++++++++++++++++
            store sitch: alloca Some(24)
            store sitch: from LocalOperand { name: Number(21)_ ty: TypeRef(IntegerType { bits: 32 }) }
            >>#train_tmp
            >#train_ret
            >#train_ptr
            >#train_cargo
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/35/36 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m35/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m35/37 <<<<[->>+<<]
            >>>>+
            <<<<<<<<<<<[
                -
                >>>>>>>>+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<<<]
            >>>>>>>>>>>-
            <<#subnu_to
            [
                if pos
                m37/32 [-<<<<<+>>>>>]
                <<<<<++++++++++++++++++++++++++++++
            >>>>>]
            <[
                if neg
                <<<<++++++++++++++++++++++++++++++
                >>>>[
                    -
                    <<<<-
                >>>>]
            ]
            m63/33 >>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            drive left! choo choo
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[
                m31/30 <[-<+>]
                m32/31 >[-<+>]
                m33/32 >[-<+>]
                m29/33 <<<<[->>>>+<<<<]
                l1 <
                >>>-
                <+
            >]
            <<<[-]
            m33/29 >>>>[-<<<<+>>>>]
            <<[
                m34/30 >>>[-<<<<+>>>>]
                
                m31/32 <<<[->+<]
                r1 >
                -
            ]
            br label %5
            <<<<<<<<<<<<<<<<<<<<<<<<<+
        >>>>>>>]
        >[
            -
            store i32 0_ i32* %3_ align 4
            op_to_reg storing const value in temp address
            >>>>>>>>>>>>>>#constop_0
            
            op_to_reg storing pointer value in temp address
            >#tmp_allocptr_%3
            >#tmp_allocptr_tru_%3
            l1 <
            d0/30/31 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m31/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            <<+++++++++++++++++++++++++++
            store sitch: alloca Some(26)
            store sitch: from ConstantOperand(ConstantRef(Int { bits: 32_ value: 0 }))
            >>#train_tmp
            >#train_ret
            >#train_ptr
            >#train_cargo
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/36/37 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m36/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m36/38 <<<<[->>+<<]
            >>>>+
            <<<<<<<<<<<[
                -
                >>>>>>>>+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<<<]
            >>>>>>>>>>>-
            <<#subnu_to
            [
                if pos
                m38/33 [-<<<<<+>>>>>]
                <<<<<+++++++++++++++++++++++++++++++
            >>>>>]
            <[
                if neg
                <<<<+++++++++++++++++++++++++++++++
                >>>>[
                    -
                    <<<<-
                >>>>]
            ]
            m28/34 <<<<<<<<<[->>>>>>+<<<<<<]
            drive left! choo choo
            >>>>>[
                m32/31 <[-<+>]
                m33/32 >[-<+>]
                m34/33 >[-<+>]
                m30/34 <<<<[->>>>+<<<<]
                l1 <
                >>>-
                <+
            >]
            <<<[-]
            m34/30 >>>>[-<<<<+>>>>]
            <<[
                m35/31 >>>[-<<<<+>>>>]
                
                m32/33 <<<[->+<]
                r1 >
                -
            ]
            br label %23
            <<<<<<<<<<<<<<<<<+
        <]
        >[
            -
            %24 = load i32* %3_ align 4
            op_to_reg storing pointer value in temp address
            >>>>>>>>>>>>>#tmp_allocptr_%3
            >#tmp_allocptr_tru_%3
            l1 <
            d0/29/30 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m30/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            <<+++++++++++++++++++++++++++
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#load_ret_%24
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<#train_tmp
            >#train_ret
            >#train_ptr
            
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/34/35 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m34/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m34/36 <<<<[->>+<<]
            >>>>+
            <<<<<<<<<<[
                -
                >>>>>>>+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<<]
            >>>>>>>>>>-
            <<#subnu_to
            [
                if pos
                m36/32 [-<<<<+>>>>]
                <<<<++++++++++++++++++++++++++++++
            >>>>]
            <[
                if neg
                <<<++++++++++++++++++++++++++++++
                >>>[
                    -
                    <<<-
                >>>]
            ]
            drive left! choo choo
            <<<[
                m31/30 <[-<+>]
                m32/31 >[-<+>]
                
                m29/32 <<<[->>>+<<<]
                l1 <
                >>>-
                <+
            >]
            get our bag
            d29/30/32 <<<[->+>>+<<<]
            m30/29 >[-<+>]
            >[
                m33/30 >>[-<<<+>>>]
                m32/33 <[->+<]
                m31/32 <[->+<]
                r1 >
                -
            ]
            m32/64 >[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            %25 = icmp slt i32 %24_ i32 16
            op_to_reg storing const value in temp address
            <<<<#constop_16
            ++++++++++++++++
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#icmp_op0_i32_%24
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<#icmp_op1_i32_16
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#icmp_ret_%25
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m28/29 <<<[->+<]
            >>>+
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[
                -
                
                <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[
                    -
                    
                    r1 >
                ]
                r1 >
                [
                    l1 <
                ]
                l1 <
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<-
            <<[
                [-]
                >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            br i1 %25_ label %26_ label %40
            <<<<<<<<<<<<<<<<<<<<<<<<+
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[
                -
                <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<-
                >>>>>>>>>>>+
                #B:main/26_true
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[
                -
                >>>>>>>>>>>>>>>>>>+
                #B:main/40_false
            <<<<<<<<<<<<<<<<<<]
        >>>>>>>>>>]
        >[
            -
            store i32 0_ i32* %4_ align 4
            op_to_reg storing const value in temp address
            >>>>>>>>>>>>#constop_0
            
            op_to_reg storing pointer value in temp address
            >#tmp_allocptr_%4
            >#tmp_allocptr_tru_%4
            l1 <
            d0/30/31 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m31/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            <<++++++++++++++++++++++++++++
            store sitch: alloca Some(27)
            store sitch: from ConstantOperand(ConstantRef(Int { bits: 32_ value: 0 }))
            >>#train_tmp
            >#train_ret
            >#train_ptr
            >#train_cargo
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/36/37 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m36/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m36/38 <<<<[->>+<<]
            >>>>+
            <<<<<<<<<<<[
                -
                >>>>>>>>+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<<<]
            >>>>>>>>>>>-
            <<#subnu_to
            [
                if pos
                m38/33 [-<<<<<+>>>>>]
                <<<<<+++++++++++++++++++++++++++++++
            >>>>>]
            <[
                if neg
                <<<<+++++++++++++++++++++++++++++++
                >>>>[
                    -
                    <<<<-
                >>>>]
            ]
            m28/34 <<<<<<<<<[->>>>>>+<<<<<<]
            drive left! choo choo
            >>>>>[
                m32/31 <[-<+>]
                m33/32 >[-<+>]
                m34/33 >[-<+>]
                m30/34 <<<<[->>>>+<<<<]
                l1 <
                >>>-
                <+
            >]
            <<<[-]
            m34/30 >>>>[-<<<<+>>>>]
            <<[
                m35/31 >>>[-<<<<+>>>>]
                
                m32/33 <<<[->+<]
                r1 >
                -
            ]
            br label %27
            <<<<<<<<<<<<<<<+
        <]
        >[
            -
            %28 = load i32* %4_ align 4
            op_to_reg storing pointer value in temp address
            >>>>>>>>>>>#tmp_allocptr_%4
            >#tmp_allocptr_tru_%4
            l1 <
            d0/29/30 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m30/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            <<++++++++++++++++++++++++++++
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#load_ret_%28
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<#train_tmp
            >#train_ret
            >#train_ptr
            
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/34/35 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m34/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m34/36 <<<<[->>+<<]
            >>>>+
            <<<<<<<<<<[
                -
                >>>>>>>+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<<]
            >>>>>>>>>>-
            <<#subnu_to
            [
                if pos
                m36/32 [-<<<<+>>>>]
                <<<<++++++++++++++++++++++++++++++
            >>>>]
            <[
                if neg
                <<<++++++++++++++++++++++++++++++
                >>>[
                    -
                    <<<-
                >>>]
            ]
            drive left! choo choo
            <<<[
                m31/30 <[-<+>]
                m32/31 >[-<+>]
                
                m29/32 <<<[->>>+<<<]
                l1 <
                >>>-
                <+
            >]
            get our bag
            d29/30/32 <<<[->+>>+<<<]
            m30/29 >[-<+>]
            >[
                m33/30 >>[-<<<+>>>]
                m32/33 <[->+<]
                m31/32 <[->+<]
                r1 >
                -
            ]
            m32/66 >[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            %29 = icmp slt i32 %28_ i32 16
            op_to_reg storing const value in temp address
            <<<<#constop_16
            ++++++++++++++++
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#icmp_op0_i32_%28
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<#icmp_op1_i32_16
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#icmp_ret_%29
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m28/29 <<<[->+<]
            >>>+
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[
                -
                
                <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[
                    -
                    
                    r1 >
                ]
                r1 >
                [
                    l1 <
                ]
                l1 <
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<-
            <<[
                [-]
                >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            br i1 %29_ label %30_ label %36
            <<<<<<<<<<<<<<<<<<<<<<<<+
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[
                -
                <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<-
                >>>>>>>>>>>>>+
                #B:main/30_true
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[
                -
                >>>>>>>>>>>>>>>>+
                #B:main/36_false
            <<<<<<<<<<<<<<<<]
        >>>>>>>>>>>>]
        >[
            -
            %31 = load i32* %3_ align 4
            op_to_reg storing pointer value in temp address
            >>>>>>>>>>#tmp_allocptr_%3
            >#tmp_allocptr_tru_%3
            l1 <
            d0/29/30 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m30/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            <<+++++++++++++++++++++++++++
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#load_ret_%31
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<#train_tmp
            >#train_ret
            >#train_ptr
            
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/34/35 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m34/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m34/36 <<<<[->>+<<]
            >>>>+
            <<<<<<<<<<[
                -
                >>>>>>>+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<<]
            >>>>>>>>>>-
            <<#subnu_to
            [
                if pos
                m36/32 [-<<<<+>>>>]
                <<<<++++++++++++++++++++++++++++++
            >>>>]
            <[
                if neg
                <<<++++++++++++++++++++++++++++++
                >>>[
                    -
                    <<<-
                >>>]
            ]
            drive left! choo choo
            <<<[
                m31/30 <[-<+>]
                m32/31 >[-<+>]
                
                m29/32 <<<[->>>+<<<]
                l1 <
                >>>-
                <+
            >]
            get our bag
            d29/30/32 <<<[->+>>+<<<]
            m30/29 >[-<+>]
            >[
                m33/30 >>[-<<<+>>>]
                m32/33 <[->+<]
                m31/32 <[->+<]
                r1 >
                -
            ]
            m32/68 >[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            %32 = load i32* %4_ align 4
            op_to_reg storing pointer value in temp address
            <<<<#tmp_allocptr_%4
            >#tmp_allocptr_tru_%4
            l1 <
            d0/29/30 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m30/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            <<++++++++++++++++++++++++++++
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#load_ret_%32
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<#train_tmp
            >#train_ret
            >#train_ptr
            
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/34/35 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m34/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m34/36 <<<<[->>+<<]
            >>>>+
            <<<<<<<<<<[
                -
                >>>>>>>+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<<]
            >>>>>>>>>>-
            <<#subnu_to
            [
                if pos
                m36/32 [-<<<<+>>>>]
                <<<<++++++++++++++++++++++++++++++
            >>>>]
            <[
                if neg
                <<<++++++++++++++++++++++++++++++
                >>>[
                    -
                    <<<-
                >>>]
            ]
            drive left! choo choo
            <<<[
                m31/30 <[-<+>]
                m32/31 >[-<+>]
                
                m29/32 <<<[->>>+<<<]
                l1 <
                >>>-
                <+
            >]
            get our bag
            d29/30/32 <<<[->+>>+<<<]
            m30/29 >[-<+>]
            >[
                m33/30 >>[-<<<+>>>]
                m32/33 <[->+<]
                m31/32 <[->+<]
                r1 >
                -
            ]
            m32/69 >[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            call @sub(i32 %31_ i32 %32)
            enable next block when we return
            <<<<<<<<<<<<<#caller/%call_term_for_13
            +
            stack_width 44
            ret_pad_width 5
            copy up arg 0
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#arg_0
            m68/51 >>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>]
            copy up arg 1
            <<<<<<<<<<<<<<<<<<#arg_1
            m69/50 >>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>]
            give callee a stack pointer
            <<<<<<<<<<<<<<<<<#stack_ptr
            ++++++++++++++++++++++++++++++++++++++++++++++++++++
            l1 <
            d0/53/54 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m54/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            r44 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<#JUMP_PAD
            +
            >>>#caller
            +
            >>#caller/jump_pad_blk
            +
            r9 >>>>>>>>>
            <<<<<#===FRAME_sub
            +
            >>#sub
            +
            >>#sub/b0
            +
        >>>>>>>>>>>>>>]
        >[
            -
            br label %33
            >+
        <]
        >[
            -
            %34 = load i32* %4_ align 4
            op_to_reg storing pointer value in temp address
            >>>>>>>>#tmp_allocptr_%4
            >#tmp_allocptr_tru_%4
            l1 <
            d0/29/30 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m30/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            <<++++++++++++++++++++++++++++
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#load_ret_%34
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<#train_tmp
            >#train_ret
            >#train_ptr
            
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/34/35 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m34/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m34/36 <<<<[->>+<<]
            >>>>+
            <<<<<<<<<<[
                -
                >>>>>>>+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<<]
            >>>>>>>>>>-
            <<#subnu_to
            [
                if pos
                m36/32 [-<<<<+>>>>]
                <<<<++++++++++++++++++++++++++++++
            >>>>]
            <[
                if neg
                <<<++++++++++++++++++++++++++++++
                >>>[
                    -
                    <<<-
                >>>]
            ]
            drive left! choo choo
            <<<[
                m31/30 <[-<+>]
                m32/31 >[-<+>]
                
                m29/32 <<<[->>>+<<<]
                l1 <
                >>>-
                <+
            >]
            get our bag
            d29/30/32 <<<[->+>>+<<<]
            m30/29 >[-<+>]
            >[
                m33/30 >>[-<<<+>>>]
                m32/33 <[->+<]
                m31/32 <[->+<]
                r1 >
                -
            ]
            m32/70 >[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            %35 = add i32 %34_ i32 1
            op_to_reg storing const value in temp address
            <<<<#constop_1
            +
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#add_op0_i32_%34
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<#add_op1_i32_1
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#add_ret_%35
            m70/71 <[->+<]
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[
                -
                >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            store i32 %35_ i32* %4_ align 4
            op_to_reg storing pointer value in temp address
            #tmp_allocptr_%4
            >#tmp_allocptr_tru_%4
            l1 <
            d0/29/30 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m30/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            <<++++++++++++++++++++++++++++
            store sitch: alloca Some(27)
            store sitch: from LocalOperand { name: Number(35)_ ty: TypeRef(IntegerType { bits: 32 }) }
            >>#train_tmp
            >#train_ret
            >#train_ptr
            >#train_cargo
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/35/36 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m35/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m35/37 <<<<[->>+<<]
            >>>>+
            <<<<<<<<<<<[
                -
                >>>>>>>>+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<<<]
            >>>>>>>>>>>-
            <<#subnu_to
            [
                if pos
                m37/32 [-<<<<<+>>>>>]
                <<<<<++++++++++++++++++++++++++++++
            >>>>>]
            <[
                if neg
                <<<<++++++++++++++++++++++++++++++
                >>>>[
                    -
                    <<<<-
                >>>>]
            ]
            m71/33 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            drive left! choo choo
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[
                m31/30 <[-<+>]
                m32/31 >[-<+>]
                m33/32 >[-<+>]
                m29/33 <<<<[->>>>+<<<<]
                l1 <
                >>>-
                <+
            >]
            <<<[-]
            m33/29 >>>>[-<<<<+>>>>]
            <<[
                m34/30 >>>[-<<<<+>>>>]
                
                m31/32 <<<[->+<]
                r1 >
                -
            ]
            br label %27
            <<<<<<<<<<<<<<+
        >>>]
        >[
            -
            br label %37
            >+
        <]
        >[
            -
            %38 = load i32* %3_ align 4
            op_to_reg storing pointer value in temp address
            >>>>>>#tmp_allocptr_%3
            >#tmp_allocptr_tru_%3
            l1 <
            d0/29/30 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m30/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            <<+++++++++++++++++++++++++++
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#load_ret_%38
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<#train_tmp
            >#train_ret
            >#train_ptr
            
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/34/35 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m34/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m34/36 <<<<[->>+<<]
            >>>>+
            <<<<<<<<<<[
                -
                >>>>>>>+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<<]
            >>>>>>>>>>-
            <<#subnu_to
            [
                if pos
                m36/32 [-<<<<+>>>>]
                <<<<++++++++++++++++++++++++++++++
            >>>>]
            <[
                if neg
                <<<++++++++++++++++++++++++++++++
                >>>[
                    -
                    <<<-
                >>>]
            ]
            drive left! choo choo
            <<<[
                m31/30 <[-<+>]
                m32/31 >[-<+>]
                
                m29/32 <<<[->>>+<<<]
                l1 <
                >>>-
                <+
            >]
            get our bag
            d29/30/32 <<<[->+>>+<<<]
            m30/29 >[-<+>]
            >[
                m33/30 >>[-<<<+>>>]
                m32/33 <[->+<]
                m31/32 <[->+<]
                r1 >
                -
            ]
            m32/72 >[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            %39 = add i32 %38_ i32 1
            op_to_reg storing const value in temp address
            <<<<#constop_1
            +
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#add_op0_i32_%38
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<#add_op1_i32_1
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#add_ret_%39
            m72/73 <[->+<]
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[
                -
                >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            store i32 %39_ i32* %3_ align 4
            op_to_reg storing pointer value in temp address
            #tmp_allocptr_%3
            >#tmp_allocptr_tru_%3
            l1 <
            d0/29/30 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m30/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            <<+++++++++++++++++++++++++++
            store sitch: alloca Some(26)
            store sitch: from LocalOperand { name: Number(39)_ ty: TypeRef(IntegerType { bits: 32 }) }
            >>#train_tmp
            >#train_ret
            >#train_ptr
            >#train_cargo
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/35/36 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m35/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m35/37 <<<<[->>+<<]
            >>>>+
            <<<<<<<<<<<[
                -
                >>>>>>>>+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<<<]
            >>>>>>>>>>>-
            <<#subnu_to
            [
                if pos
                m37/32 [-<<<<<+>>>>>]
                <<<<<++++++++++++++++++++++++++++++
            >>>>>]
            <[
                if neg
                <<<<++++++++++++++++++++++++++++++
                >>>>[
                    -
                    <<<<-
                >>>>]
            ]
            m73/33 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            drive left! choo choo
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[
                m31/30 <[-<+>]
                m32/31 >[-<+>]
                m33/32 >[-<+>]
                m29/33 <<<<[->>>>+<<<<]
                l1 <
                >>>-
                <+
            >]
            <<<[-]
            m33/29 >>>>[-<<<<+>>>>]
            <<[
                m34/30 >>>[-<<<<+>>>>]
                
                m31/32 <<<[->+<]
                r1 >
                -
            ]
            br label %23
            <<<<<<<<<<<<<<<<+
        >>>>>>>]
        >[
            -
            ret void
            zero all function allocs
            >[-]
            >[-]
            >[-]
            >[-]
            <<<<<<<<<<<<<<<<<<<<<<<<<<<-
            #dead_frame
            >>>-
            l1 <
            <<<[-]
            r1 >
            l7 <<<<<<<
        >>>>>>>>>>>>>>>>>>>>>>>]
    <<<<<<<<<<<<<<<<<<<<]
<<<]
