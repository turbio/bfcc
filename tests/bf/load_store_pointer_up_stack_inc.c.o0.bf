r7 >>>>>>>
+++++++
r1 >
runtime init:
#===TOP_FRAME
+
>>>>#main
+
>#main/b0
+
<<<<<[
    >#deref_int_inc
    [
        >>>>>#B:%ret_lading_pad
        [
            <<<<<<-
            #dead_frame
            >-
            <#dead_fn_pad/deref_int_inc
            >>>>>>-
            l29 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<
        ]
        <<<<<<#mainloop_deref_int_inc
        >#F:deref_int_inc
        >#F:deref_int_inc2
        >#F:deref_int
        >#F:main
        >#B:%1
        >#B:%ret_lading_pad
        >#alloc_%2
        >#%3_=_load_i8*_%2__align_1(mult)
        >#%4_=_zext_i8_%3_to_i64(mult)
        >#%5_=_inttoptr_i64_%4_to_i32*(mult)
        >#%6_=_load_i32*_%5__align_4(mult)
        >#%7_=_add_i32_%6__i32_1(mult)
        >#%0
        <<<<<<<<#B:%1
        [
            -
            copy up args
            >>>>>>>>#arg_%0
            l2 <<
            m0/15 <<<<<<<<<<<<<[->>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<]
            r2 >>
            %2 = alloca i8_ align 1
            store i8 %0_ i8* %2_ align 1
            >>>>>>>[-]
            m13/7 >>>>>>[-<<<<<<+>>>>>>]
            %3 = load i8* %2_ align 1
            <<<<<[-]
            d7/8/14 <[->+>>>>>>+<<<<<<<]
            m14/7 >>>>>>>[-<<<<<<<+>>>>>>>]
            %4 = zext i8 %3 to i64
            <<<<<[-]
            d8/15/14 <[->>>>>>>+<+<<<<<<]
            m15/8 >>>>>>>[-<<<<<<<+>>>>>>>]
            m14/9 <[-<<<<<+>>>>>]
            %5 = inttoptr i64 %4 to i32*
            <<<<[-]
            d9/14/16 <[->>>>>+>>+<<<<<<<]
            m14/9 >>>>>[-<<<<<+>>>>>]
            m16/10 >>[-<<<<<<+>>>>>>]
            %6 = load i32* %5_ align 4
            <<<<<[-]
            d10/14/15 <[->>>>+>+<<<<<]
            m14/10 >>>>[-<<<<+>>>>]
            >>>#train_tmp
            >#train_ret
            >#train_ptr
            
            >#stackptr
            <<<<#stackptr_tmp
            l1 <
            d0/17/21 <<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>+>>>>+<<<<<<<<<<<<<<<<<<<<<]
            m17/0 >>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>]
            r1 >
            >>>>#ptr_underflow
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m20/22 <<<<[->>+<<]
            >>>>+
            <<<<<<<<<[
                -
                >>>>>>+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<]
            >>>>>>>>>-
            <<#subnu_to
            [
                if pos
                m22/19 [-<<<+>>>]
                <<<+++++++++++++++++
            >>>]
            <[
                if neg
                <<+++++++++++++++++
                >>[
                    -
                    <<-
                >>]
            ]
            drive left! choo choo
            <<[
                m18/17 <[-<+>]
                m19/18 >[-<+>]
                
                m16/19 <<<[->>>+<<<]
                l1 <
                >>>-
                <+
            >]
            get our bag
            d16/17/19 <<<[->+>>+<<<]
            m17/16 >[-<+>]
            >[
                m20/17 >>[-<<<+>>>]
                m19/20 <[->+<]
                m18/19 <[->+<]
                r1 >
                -
            ]
            m19/11 >[-<<<<<<<<+>>>>>>>>]
            %7 = add i32 %6_ i32 1
            <<<<<<<[-]
            d11/14/15 <[->>>+>+<<<<]
            m14/11 >>>[-<<<+>>>]
            op_to_reg storing const value in temp address
            >>#constop_1
            +
            m15/12 <[-<<<+>>>]
            >[
                -
                <<<<+
            >>>>]
            store i32 %7_ i32* %5_ align 4
            d12/14/15 <<<<[->>+>+<<<]
            m14/12 >>[-<<+>>]
            d10/16/17 <<<<[->>>>>>+>+<<<<<<<]
            m16/10 >>>>>>[-<<<<<<+>>>>>>]
            >>#train_tmp
            >#train_ret
            >#train_ptr
            >#train_cargo
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/23/24 <<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<]
            m23/0 >>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            >>#ptr_underflow
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m23/26 <<<<<[->>>+<<<]
            >>>>>+
            <<<<<<<<<<<[
                -
                >>>>>>>>+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<<<]
            >>>>>>>>>>>-
            <<#subnu_to
            [
                if pos
                m26/20 [-<<<<<<+>>>>>>]
                <<<<<<++++++++++++++++++
            >>>>>>]
            <[
                if neg
                <<<<<++++++++++++++++++
                >>>>>[
                    -
                    <<<<<-
                >>>>>]
            ]
            m15/21 <<<<<<<<<<[->>>>>>+<<<<<<]
            drive left! choo choo
            >>>>>[
                m19/18 <[-<+>]
                m20/19 >[-<+>]
                m21/20 >[-<+>]
                m17/21 <<<<[->>>>+<<<<]
                l1 <
                >>>-
                <+
            >]
            <<<[-]
            m21/17 >>>>[-<<<<+>>>>]
            <<[
                m22/18 >>>[-<<<<+>>>>]
                
                m19/20 <<<[->+<]
                r1 >
                -
            ]
            ret void
            zero all function allocs
            <<<<<<<<<<<<[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            <<<<<<<<<<<<-
            #dead_frame
            >-
            l1 <
            <[-]
            r1 >
            l9 <<<<<<<<<
        >>>>>]
    <<<<]
    >#deref_int_inc2
    [
        >>>>#B:%ret_lading_pad
        [
            <<<<<<-
            #dead_frame
            >>-
            <<#dead_fn_pad/deref_int_inc2
            >>>>>>-
            l32 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
        ]
        <<<<<<#mainloop_deref_int_inc2
        >#F:deref_int_inc
        >#F:deref_int_inc2
        >#F:deref_int
        >#F:main
        >#B:%1
        >#B:%ret_lading_pad
        >#alloc_%2
        >#%3_=_load_i8*_%2__align_1(mult)
        >#%4_=_zext_i8_%3_to_i64(mult)
        >#%5_=_inttoptr_i64_%4_to_i32*(mult)
        >#%6_=_load_i32*_%5__align_4(mult)
        >#%7_=_add_i32_%6__i32_1(mult)
        >#%8_=_load_i8*_%2__align_1(mult)
        >#%9_=_zext_i8_%8_to_i64(mult)
        >#%10_=_inttoptr_i64_%9_to_i32*(mult)
        >#%0
        <<<<<<<<<<<#B:%1
        [
            -
            copy up args
            >>>>>>>>>>>#arg_%0
            l2 <<
            m0/18 <<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<]
            r2 >>
            %2 = alloca i8_ align 1
            store i8 %0_ i8* %2_ align 1
            >>>>>>>[-]
            m16/7 >>>>>>>>>[-<<<<<<<<<+>>>>>>>>>]
            %3 = load i8* %2_ align 1
            <<<<<<<<[-]
            d7/8/17 <[->+>>>>>>>>>+<<<<<<<<<<]
            m17/7 >>>>>>>>>>[-<<<<<<<<<<+>>>>>>>>>>]
            %4 = zext i8 %3 to i64
            <<<<<<<<[-]
            d8/18/17 <[->>>>>>>>>>+<+<<<<<<<<<]
            m18/8 >>>>>>>>>>[-<<<<<<<<<<+>>>>>>>>>>]
            m17/9 <[-<<<<<<<<+>>>>>>>>]
            %5 = inttoptr i64 %4 to i32*
            <<<<<<<[-]
            d9/17/19 <[->>>>>>>>+>>+<<<<<<<<<<]
            m17/9 >>>>>>>>[-<<<<<<<<+>>>>>>>>]
            m19/10 >>[-<<<<<<<<<+>>>>>>>>>]
            %6 = load i32* %5_ align 4
            <<<<<<<<[-]
            d10/17/18 <[->>>>>>>+>+<<<<<<<<]
            m17/10 >>>>>>>[-<<<<<<<+>>>>>>>]
            >>>#train_tmp
            >#train_ret
            >#train_ptr
            
            >#stackptr
            <<<<#stackptr_tmp
            l1 <
            d0/20/24 <<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>+>>>>+<<<<<<<<<<<<<<<<<<<<<<<<]
            m20/0 >>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>]
            r1 >
            >>>>#ptr_underflow
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m23/25 <<<<[->>+<<]
            >>>>+
            <<<<<<<<<[
                -
                >>>>>>+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<]
            >>>>>>>>>-
            <<#subnu_to
            [
                if pos
                m25/22 [-<<<+>>>]
                <<<++++++++++++++++++++
            >>>]
            <[
                if neg
                <<++++++++++++++++++++
                >>[
                    -
                    <<-
                >>]
            ]
            drive left! choo choo
            <<[
                m21/20 <[-<+>]
                m22/21 >[-<+>]
                
                m19/22 <<<[->>>+<<<]
                l1 <
                >>>-
                <+
            >]
            get our bag
            d19/20/22 <<<[->+>>+<<<]
            m20/19 >[-<+>]
            >[
                m23/20 >>[-<<<+>>>]
                m22/23 <[->+<]
                m21/22 <[->+<]
                r1 >
                -
            ]
            m22/11 >[-<<<<<<<<<<<+>>>>>>>>>>>]
            %7 = add i32 %6_ i32 1
            <<<<<<<<<<[-]
            d11/17/18 <[->>>>>>+>+<<<<<<<]
            m17/11 >>>>>>[-<<<<<<+>>>>>>]
            op_to_reg storing const value in temp address
            >>#constop_1
            +
            m18/12 <[-<<<<<<+>>>>>>]
            >[
                -
                <<<<<<<+
            >>>>>>>]
            %8 = load i8* %2_ align 1
            <<<<<<[-]
            d7/13/17 <<<<<<[->>>>>>+>>>>+<<<<<<<<<<]
            m17/7 >>>>>>>>>>[-<<<<<<<<<<+>>>>>>>>>>]
            %9 = zext i8 %8 to i64
            <<<[-]
            d13/17/18 <[->>>>+>+<<<<<]
            m17/13 >>>>[-<<<<+>>>>]
            m18/14 >[-<<<<+>>>>]
            %10 = inttoptr i64 %9 to i32*
            <<<[-]
            d14/17/18 <[->>>+>+<<<<]
            m17/14 >>>[-<<<+>>>]
            m18/15 >[-<<<+>>>]
            store i32 %7_ i32* %10_ align 4
            d12/17/18 <<<<<<[->>>>>+>+<<<<<<]
            m17/12 >>>>>[-<<<<<+>>>>>]
            d15/19/20 <<[->>>>+>+<<<<<]
            m19/15 >>>>[-<<<<+>>>>]
            >>#train_tmp
            >#train_ret
            >#train_ptr
            >#train_cargo
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/26/27 <<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m26/0 >>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            >>#ptr_underflow
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m26/29 <<<<<[->>>+<<<]
            >>>>>+
            <<<<<<<<<<<[
                -
                >>>>>>>>+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<<<]
            >>>>>>>>>>>-
            <<#subnu_to
            [
                if pos
                m29/23 [-<<<<<<+>>>>>>]
                <<<<<<+++++++++++++++++++++
            >>>>>>]
            <[
                if neg
                <<<<<+++++++++++++++++++++
                >>>>>[
                    -
                    <<<<<-
                >>>>>]
            ]
            m18/24 <<<<<<<<<<[->>>>>>+<<<<<<]
            drive left! choo choo
            >>>>>[
                m22/21 <[-<+>]
                m23/22 >[-<+>]
                m24/23 >[-<+>]
                m20/24 <<<<[->>>>+<<<<]
                l1 <
                >>>-
                <+
            >]
            <<<[-]
            m24/20 >>>>[-<<<<+>>>>]
            <<[
                m25/21 >>>[-<<<<+>>>>]
                
                m22/23 <<<[->+<]
                r1 >
                -
            ]
            ret void
            zero all function allocs
            <<<<<<<<<<<<<<<[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            <<<<<<<<<<<<<<<-
            #dead_frame
            >>-
            l1 <
            <<[-]
            r1 >
            l9 <<<<<<<<<
        >>>>>]
    <<<]
    >#deref_int
    [
        >>>#B:%ret_lading_pad
        [
            <<<<<<-
            #dead_frame
            >>>-
            <<<#dead_fn_pad/deref_int
            >>>>>>-
            l27 <<<<<<<<<<<<<<<<<<<<<<<<<<<
        ]
        <<<<<<#mainloop_deref_int
        >#F:deref_int_inc
        >#F:deref_int_inc2
        >#F:deref_int
        >#F:main
        >#B:%no_block0_call_for_deref_int
        >#B:%ret_lading_pad
        >#B:%1
        >#B:%call_term_for_0
        >#alloc_%2
        >#%3_=_load_i8*_%2__align_1(mult)
        >#%4_=_zext_i8_%3_to_i64(mult)
        >#%5_=_inttoptr_i64_%4_to_i32*(mult)
        >#%6_=_load_i32*_%5__align_4(mult)
        >#%7_=_trunc_i32_%6_to_i8(mult)
        >#%0
        <<<<<<<<<<#B:%no_block0_call_for_deref_int
        [
            -
            copy up args
            >>>>>>>>>>#arg_%0
            l2 <<
            m0/17 <<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<]
            r2 >>
            br label %1
            >>>>>>>+
        <<]
        >>#B:%1
        [
            -
            %2 = alloca i8_ align 1
            store i8 %0_ i8* %2_ align 1
            >>[-]
            m15/9 >>>>>>[-<<<<<<+>>>>>>]
            %3 = load i8* %2_ align 1
            <<<<<[-]
            d9/10/16 <[->+>>>>>>+<<<<<<<]
            m16/9 >>>>>>>[-<<<<<<<+>>>>>>>]
            %4 = zext i8 %3 to i64
            <<<<<[-]
            d10/17/16 <[->>>>>>>+<+<<<<<<]
            m17/10 >>>>>>>[-<<<<<<<+>>>>>>>]
            m16/11 <[-<<<<<+>>>>>]
            %5 = inttoptr i64 %4 to i32*
            <<<<[-]
            d11/16/18 <[->>>>>+>>+<<<<<<<]
            m16/11 >>>>>[-<<<<<+>>>>>]
            m18/12 >>[-<<<<<<+>>>>>>]
            %6 = load i32* %5_ align 4
            <<<<<[-]
            d12/16/17 <[->>>>+>+<<<<<]
            m16/12 >>>>[-<<<<+>>>>]
            >>>#train_tmp
            >#train_ret
            >#train_ptr
            
            >#stackptr
            <<<<#stackptr_tmp
            l1 <
            d0/19/23 <<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>+>>>>+<<<<<<<<<<<<<<<<<<<<<<<]
            m19/0 >>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>]
            r1 >
            >>>>#ptr_underflow
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m22/24 <<<<[->>+<<]
            >>>>+
            <<<<<<<<<[
                -
                >>>>>>+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<]
            >>>>>>>>>-
            <<#subnu_to
            [
                if pos
                m24/21 [-<<<+>>>]
                <<<+++++++++++++++++++
            >>>]
            <[
                if neg
                <<+++++++++++++++++++
                >>[
                    -
                    <<-
                >>]
            ]
            drive left! choo choo
            <<[
                m20/19 <[-<+>]
                m21/20 >[-<+>]
                
                m18/21 <<<[->>>+<<<]
                l1 <
                >>>-
                <+
            >]
            get our bag
            d18/19/21 <<<[->+>>+<<<]
            m19/18 >[-<+>]
            >[
                m22/19 >>[-<<<+>>>]
                m21/22 <[->+<]
                m20/21 <[->+<]
                r1 >
                -
            ]
            m21/13 >[-<<<<<<<<+>>>>>>>>]
            %7 = trunc i32 %6 to i8
            <<<<<<<[-]
            d13/16/17 <[->>>+>+<<<<]
            m16/13 >>>[-<<<+>>>]
            m17/14 >[-<<<+>>>]
            call @putchar(i8 %7)
            enable next block when we return
            <<<<<<<<<#caller/%call_term_for_0
            +
            putchar intrinsic
            d14/16/17 >>>>>>[->>+>+<<<]
            m16/14 >>[-<<+>>]
            >.
            [-]
        <<<<<<<<<<]
        >#B:%call_term_for_0
        [
            -
            ret void
            zero all function allocs
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            <<<<<<<<<<<<<<-
            #dead_frame
            >>>-
            l1 <
            <<<[-]
            r1 >
            l9 <<<<<<<<<
        >>>>>>>>]
    <<<<<]
    >#main
    [
        >>#B:%ret_lading_pad
        [
            <<<<<<-
            #dead_frame
            >>>>-
            <<<<#dead_fn_pad/main
            >>>>>>-
            l18 <<<<<<<<<<<<<<<<<<
        ]
        <<<<<<#mainloop_main
        >#F:deref_int_inc
        >#F:deref_int_inc2
        >#F:deref_int
        >#F:main
        >#B:%no_block0_call_for_main
        >#B:%ret_lading_pad
        >#B:%0
        >#B:%call_term_for_0
        >#B:%call_term_for_1
        >#B:%call_term_for_2
        >#alloc_%1
        >#%2_=_ptrtoint_i32*_%1_to_i8(mult)
        >#%3_=_ptrtoint_i32*_%1_to_i8(mult)
        >#%4_=_ptrtoint_i32*_%1_to_i8(mult)
        <<<<<<<<<#B:%no_block0_call_for_main
        [
            -
            copy up args
            br label %0
            >>+
        <<]
        >>#B:%0
        [
            -
            %1 = alloca i32_ align 4
            store i32 97_ i32* %1_ align 4
            op_to_reg storing const value in temp address
            >>>>>>>>#constop_97
            +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            <<<<[-]
            m15/11 >>>>[-<<<<+>>>>]
            %2 = ptrtoint i32* %1 to i8
            <<<[-]
            resolve alloca addr storing pointer value in temp address
            l1 <
            d0/17/16 <<<<<<<<<<<<[->>>>>>>>>>>>>>>>>+<+<<<<<<<<<<<<<<<<]
            m16/0 >>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>]
            r1 >
            ++++++++++++
            m16/12 [-<<<<+>>>>]
            call @deref_int(i8 %2)
            enable next block when we return
            <<<<<<<<#caller/%call_term_for_0
            +
            stack_width 18
            ret_pad_width 6
            copy up arg 0
            >>>>>>>>>>>>>>>>>#arg_0
            d12/15/17 <<<<<<<<<<<<<[->>>+>>+<<<<<]
            m15/12 >>>[-<<<+>>>]
            m17/25 >>[->>>>>>>>+<<<<<<<<]
            give callee a stack pointer
            >>>>>>>>>#stack_ptr
            +++++++++++++++++++++++++++
            l1 <
            d0/27/28 <<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m28/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            r18 >>>>>>>>>>>>>>>>>>
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<#JUMP_PAD
            +
            >>>>#caller
            +
            >>#caller/jump_pad_blk
            +
            r9 >>>>>>>>>
            <<<<<<#===FRAME_deref_int
            +
            >>>#deref_int
            +
            >>#deref_int/b0
            +
        >>]
        >#B:%call_term_for_0
        [
            -
            %3 = ptrtoint i32* %1 to i8
            >>>>>[-]
            resolve alloca addr storing pointer value in temp address
            l1 <
            d0/16/17 <<<<<<<<<<<<<[->>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<]
            m17/0 >>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>]
            r1 >
            <<++++++++++++
            m15/13 [-<<+>>]
            call @deref_int_inc(i8 %3)
            enable next block when we return
            <<<<<<#caller/%call_term_for_1
            +
            stack_width 18
            ret_pad_width 6
            copy up arg 0
            >>>>>>>>>>>>>>>>#arg_0
            d13/15/16 <<<<<<<<<<<<[->>+>+<<<]
            m15/13 >>[-<<+>>]
            m16/25 >[->>>>>>>>>+<<<<<<<<<]
            give callee a stack pointer
            >>>>>>>>>>#stack_ptr
            +++++++++++++++++++++++++++
            l1 <
            d0/27/28 <<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m28/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            r18 >>>>>>>>>>>>>>>>>>
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<#JUMP_PAD
            +
            >>>>#caller
            +
            >>#caller/jump_pad_blk
            +
            r9 >>>>>>>>>
            <<<<<<#===FRAME_deref_int_inc
            +
            >#deref_int_inc
            +
            >>>>#deref_int_inc/b0
            +
        >>>]
        >#B:%call_term_for_1
        [
            -
            %4 = ptrtoint i32* %1 to i8
            >>>>>[-]
            resolve alloca addr storing pointer value in temp address
            l1 <
            d0/16/17 <<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<]
            m17/0 >>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>]
            r1 >
            <<++++++++++++
            m15/14 [-<+>]
            call @deref_int(i8 %4)
            enable next block when we return
            <<<<<#caller/%call_term_for_2
            +
            stack_width 18
            ret_pad_width 6
            copy up arg 0
            >>>>>>>>>>>>>>>#arg_0
            d14/15/16 <<<<<<<<<<<[->+>+<<]
            m15/14 >[-<+>]
            m16/25 >[->>>>>>>>>+<<<<<<<<<]
            give callee a stack pointer
            >>>>>>>>>>#stack_ptr
            +++++++++++++++++++++++++++
            l1 <
            d0/27/28 <<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m28/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            r18 >>>>>>>>>>>>>>>>>>
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<#JUMP_PAD
            +
            >>>>#caller
            +
            >>#caller/jump_pad_blk
            +
            r9 >>>>>>>>>
            <<<<<<#===FRAME_deref_int
            +
            >>>#deref_int
            +
            >>#deref_int/b0
            +
        >>>>]
        >#B:%call_term_for_2
        [
            -
            ret void
            zero all function allocs
            >[-]
            >[-]
            >[-]
            >[-]
            <<<<<<<<<<<<<<-
            #dead_frame
            >>>>-
            l1 <
            <<<<[-]
            r1 >
            l8 <<<<<<<<
        >>>>>>>>>>]
    <<<<<<]
<<<<]
