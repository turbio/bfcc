r4 >>>>
++++
r1 >
runtime init:
#===TOP_FRAME
+
>#main
+
>#main/b0
+
<<[
    >#main
    [
        >>#B:%ret_lading_pad
        [
            <<<-
            #dead_frame
            >-
            <#dead_fn_pad/main
            >>>-
            l46 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
        ]
        <<<#mainloop_main
        >#F:main
        >#B:%no_block0_call_for_main
        >#B:%ret_lading_pad
        >#B:%0
        >#B:%call_term_for_0
        >#B:%call_term_for_1
        >#B:%call_term_for_2
        >#B:%call_term_for_3
        >#alloc_%1
        >#alloc_%2
        >#alloc_%3
        >#alloc_%4
        >#alloc_%5
        >#%6_=_load_i32**_%2__align_8(mult)
        >#%7_=_load_i32*_%6__align_4(mult)
        >#%8_=_trunc_i32_%7_to_i8(mult)
        >#%9_=_load_i32***_%3__align_8(mult)
        >#%10_=_load_i32**_%9__align_8(mult)
        >#%11_=_load_i32*_%10__align_4(mult)
        >#%12_=_trunc_i32_%11_to_i8(mult)
        >#%13_=_load_i32****_%4__align_8(mult)
        >#%14_=_load_i32***_%13__align_8(mult)
        >#%15_=_load_i32**_%14__align_8(mult)
        >#%16_=_load_i32*_%15__align_4(mult)
        >#%17_=_trunc_i32_%16_to_i8(mult)
        >#%18_=_load_i32*****_%5__align_8(mult)
        >#%19_=_load_i32****_%18__align_8(mult)
        >#%20_=_load_i32***_%19__align_8(mult)
        >#%21_=_load_i32**_%20__align_8(mult)
        >#%22_=_load_i32*_%21__align_4(mult)
        >#%23_=_trunc_i32_%22_to_i8(mult)
        <<<<<<<<<<<<<<<<<<<<<<<<<<<<<#B:%no_block0_call_for_main
        [
            -
            copy up args
            br label %0
            >>+
        <<]
        >>#B:%0
        [
            -
            %1 = alloca i32_ align 4
            %2 = alloca i32*_ align 8
            %3 = alloca i32**_ align 8
            %4 = alloca i32***_ align 8
            %5 = alloca i32****_ align 8
            store i32 112_ i32* %1_ align 4
            op_to_reg storing const value in temp address
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>#constop_112
            ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            <<<<<<<<<<<<<<<<<<<<<<<[-]
            m32/9 >>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>]
            store i32* %1_ i32** %2_ align 8
            resolve alloca addr storing pointer value in temp address
            l1 <
            d0/34/33 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+<+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m33/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            ++++++++++
            <<<<<<<<<<<<<<<<<<<<<<<[-]
            m33/10 >>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>]
            %6 = load i32** %2_ align 8
            <<<<<<<<<<<<<<<<<<<[-]
            d10/14/32 <<<<[->>>>+>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<]
            m32/10 >>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>]
            %7 = load i32* %6_ align 4
            <<<<<<<<<<<<<<<<<[-]
            d14/32/34 <[->>>>>>>>>>>>>>>>>>+>>+<<<<<<<<<<<<<<<<<<<<]
            m32/14 >>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>]
            >>>#train_tmp
            >#train_ret
            >#train_ptr
            
            >#stackptr
            <<<<<#stackptr_tmp
            l1 <
            d0/34/39 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m34/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            >>>>>#ptr_underflow
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m38/40 <<<<[->>+<<]
            >>>>+
            <<<<<<<<[
                -
                >>>>>+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<]
            >>>>>>>>-
            <<#subnu_to
            [
                if pos
                m40/37 [-<<<+>>>]
                <<<+++++++++++++++++++++++++++++++++++
            >>>]
            <[
                if neg
                <<+++++++++++++++++++++++++++++++++++
                >>[
                    -
                    <<-
                >>]
            ]
            drive left! choo choo
            <<[
                m36/35 <[-<+>]
                m37/36 >[-<+>]
                
                m34/37 <<<[->>>+<<<]
                l1 <
                >>>-
                <+
            >]
            get our bag
            d34/35/37 <<<[->+>>+<<<]
            m35/34 >[-<+>]
            >[
                m38/35 >>[-<<<+>>>]
                m37/38 <[->+<]
                m36/37 <[->+<]
                r1 >
                -
            ]
            m37/15 >[-<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>]
            %8 = trunc i32 %7 to i8
            <<<<<<<<<<<<<<<<<<<<<[-]
            d15/32/33 <[->>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<]
            m32/15 >>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>]
            m33/16 >[-<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>]
            call @putchar(i8 %8)
            enable next block when we return
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<#caller/%call_term_for_0
            +
            putchar intrinsic
            d16/32/33 >>>>>>>>>>>[->>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<]
            m32/16 >>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>]
            >.
            [-]
        <<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
        >#B:%call_term_for_0
        [
            -
            store i32** %2_ i32*** %3_ align 8
            resolve alloca addr storing pointer value in temp address
            l1 <
            d0/33/34 <<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m34/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            <<+++++++++++
            <<<<<<<<<<<<<<<<<<<<<[-]
            m32/11 >>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>]
            %9 = load i32*** %3_ align 8
            <<<<<<<<<<<<<<<[-]
            d11/17/32 <<<<<<[->>>>>>+>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<]
            m32/11 >>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>]
            %10 = load i32** %9_ align 8
            <<<<<<<<<<<<<<[-]
            d17/32/33 <[->>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<]
            m32/17 >>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>]
            >>#train_tmp
            >#train_ret
            >#train_ptr
            
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/38/39 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m38/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >>>>#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m38/43 <<<<<<<[->>>>>+<<<<<]
            >>>>>>>+
            <<<<<<<<<<<<[
                -
                >>>>>>+
                >>>>[
                    -
                    <<<<-
                    r1 >
                >>>>]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<<<<]
            >>>>>>>>>>>>-
            <<#subnu_to
            [
                if pos
                m43/36 [-<<<<<<<+>>>>>>>]
                <<<<<<<++++++++++++++++++++++++++++++++++
            >>>>>>>]
            <<<<[
                if neg
                <<<++++++++++++++++++++++++++++++++++
                >>>[
                    -
                    <<<-
                >>>]
            ]
            drive left! choo choo
            <<<[
                m35/34 <[-<+>]
                m36/35 >[-<+>]
                
                m33/36 <<<[->>>+<<<]
                l1 <
                >>>-
                <+
            >]
            get our bag
            d33/34/36 <<<[->+>>+<<<]
            m34/33 >[-<+>]
            >[
                m37/34 >>[-<<<+>>>]
                m36/37 <[->+<]
                m35/36 <[->+<]
                r1 >
                -
            ]
            m36/18 >[-<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>]
            %11 = load i32* %10_ align 4
            <<<<<<<<<<<<<<<<<[-]
            d18/32/33 <[->>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<]
            m32/18 >>>>>>>>>>>>>>[-<<<<<<<<<<<<<<+>>>>>>>>>>>>>>]
            >>#train_tmp
            >#train_ret
            >#train_ptr
            
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/38/39 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m38/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m38/40 <<<<[->>+<<]
            >>>>+
            <<<<<<<<<[
                -
                >>>>>>+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<]
            >>>>>>>>>-
            <<#subnu_to
            [
                if pos
                m40/36 [-<<<<+>>>>]
                <<<<++++++++++++++++++++++++++++++++++
            >>>>]
            <[
                if neg
                <<<++++++++++++++++++++++++++++++++++
                >>>[
                    -
                    <<<-
                >>>]
            ]
            drive left! choo choo
            <<<[
                m35/34 <[-<+>]
                m36/35 >[-<+>]
                
                m33/36 <<<[->>>+<<<]
                l1 <
                >>>-
                <+
            >]
            get our bag
            d33/34/36 <<<[->+>>+<<<]
            m34/33 >[-<+>]
            >[
                m37/34 >>[-<<<+>>>]
                m36/37 <[->+<]
                m35/36 <[->+<]
                r1 >
                -
            ]
            m36/19 >[-<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>]
            %12 = trunc i32 %11 to i8
            <<<<<<<<<<<<<<<<[-]
            d19/32/33 <[->>>>>>>>>>>>>+>+<<<<<<<<<<<<<<]
            m32/19 >>>>>>>>>>>>>[-<<<<<<<<<<<<<+>>>>>>>>>>>>>]
            m33/20 >[-<<<<<<<<<<<<<+>>>>>>>>>>>>>]
            call @putchar(i8 %12)
            enable next block when we return
            <<<<<<<<<<<<<<<<<<<<<<<<<<<#caller/%call_term_for_1
            +
            putchar intrinsic
            d20/32/33 >>>>>>>>>>>>>>[->>>>>>>>>>>>+>+<<<<<<<<<<<<<]
            m32/20 >>>>>>>>>>>>[-<<<<<<<<<<<<+>>>>>>>>>>>>]
            >.
            [-]
        <<<<<<<<<<<<<<<<<<<<<<<<<<<<]
        >#B:%call_term_for_1
        [
            -
            store i32*** %3_ i32**** %4_ align 8
            resolve alloca addr storing pointer value in temp address
            l1 <
            d0/33/34 <<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m34/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            <<++++++++++++
            <<<<<<<<<<<<<<<<<<<<[-]
            m32/12 >>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>]
            %13 = load i32**** %4_ align 8
            <<<<<<<<<<<[-]
            d12/21/32 <<<<<<<<<[->>>>>>>>>+>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<]
            m32/12 >>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>]
            %14 = load i32*** %13_ align 8
            <<<<<<<<<<[-]
            d21/32/33 <[->>>>>>>>>>>+>+<<<<<<<<<<<<]
            m32/21 >>>>>>>>>>>[-<<<<<<<<<<<+>>>>>>>>>>>]
            >>#train_tmp
            >#train_ret
            >#train_ptr
            
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/38/39 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m38/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m38/40 <<<<[->>+<<]
            >>>>+
            <<<<<<<<<[
                -
                >>>>>>+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<]
            >>>>>>>>>-
            <<#subnu_to
            [
                if pos
                m40/36 [-<<<<+>>>>]
                <<<<++++++++++++++++++++++++++++++++++
            >>>>]
            <[
                if neg
                <<<++++++++++++++++++++++++++++++++++
                >>>[
                    -
                    <<<-
                >>>]
            ]
            drive left! choo choo
            <<<[
                m35/34 <[-<+>]
                m36/35 >[-<+>]
                
                m33/36 <<<[->>>+<<<]
                l1 <
                >>>-
                <+
            >]
            get our bag
            d33/34/36 <<<[->+>>+<<<]
            m34/33 >[-<+>]
            >[
                m37/34 >>[-<<<+>>>]
                m36/37 <[->+<]
                m35/36 <[->+<]
                r1 >
                -
            ]
            m36/22 >[-<<<<<<<<<<<<<<+>>>>>>>>>>>>>>]
            %15 = load i32** %14_ align 8
            <<<<<<<<<<<<<[-]
            d22/32/33 <[->>>>>>>>>>+>+<<<<<<<<<<<]
            m32/22 >>>>>>>>>>[-<<<<<<<<<<+>>>>>>>>>>]
            >>#train_tmp
            >#train_ret
            >#train_ptr
            
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/38/39 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m38/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m38/40 <<<<[->>+<<]
            >>>>+
            <<<<<<<<<[
                -
                >>>>>>+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<]
            >>>>>>>>>-
            <<#subnu_to
            [
                if pos
                m40/36 [-<<<<+>>>>]
                <<<<++++++++++++++++++++++++++++++++++
            >>>>]
            <[
                if neg
                <<<++++++++++++++++++++++++++++++++++
                >>>[
                    -
                    <<<-
                >>>]
            ]
            drive left! choo choo
            <<<[
                m35/34 <[-<+>]
                m36/35 >[-<+>]
                
                m33/36 <<<[->>>+<<<]
                l1 <
                >>>-
                <+
            >]
            get our bag
            d33/34/36 <<<[->+>>+<<<]
            m34/33 >[-<+>]
            >[
                m37/34 >>[-<<<+>>>]
                m36/37 <[->+<]
                m35/36 <[->+<]
                r1 >
                -
            ]
            m36/23 >[-<<<<<<<<<<<<<+>>>>>>>>>>>>>]
            %16 = load i32* %15_ align 4
            <<<<<<<<<<<<[-]
            d23/32/33 <[->>>>>>>>>+>+<<<<<<<<<<]
            m32/23 >>>>>>>>>[-<<<<<<<<<+>>>>>>>>>]
            >>#train_tmp
            >#train_ret
            >#train_ptr
            
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/38/39 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m38/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m38/40 <<<<[->>+<<]
            >>>>+
            <<<<<<<<<[
                -
                >>>>>>+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<]
            >>>>>>>>>-
            <<#subnu_to
            [
                if pos
                m40/36 [-<<<<+>>>>]
                <<<<++++++++++++++++++++++++++++++++++
            >>>>]
            <[
                if neg
                <<<++++++++++++++++++++++++++++++++++
                >>>[
                    -
                    <<<-
                >>>]
            ]
            drive left! choo choo
            <<<[
                m35/34 <[-<+>]
                m36/35 >[-<+>]
                
                m33/36 <<<[->>>+<<<]
                l1 <
                >>>-
                <+
            >]
            get our bag
            d33/34/36 <<<[->+>>+<<<]
            m34/33 >[-<+>]
            >[
                m37/34 >>[-<<<+>>>]
                m36/37 <[->+<]
                m35/36 <[->+<]
                r1 >
                -
            ]
            m36/24 >[-<<<<<<<<<<<<+>>>>>>>>>>>>]
            %17 = trunc i32 %16 to i8
            <<<<<<<<<<<[-]
            d24/32/33 <[->>>>>>>>+>+<<<<<<<<<]
            m32/24 >>>>>>>>[-<<<<<<<<+>>>>>>>>]
            m33/25 >[-<<<<<<<<+>>>>>>>>]
            call @putchar(i8 %17)
            enable next block when we return
            <<<<<<<<<<<<<<<<<<<<<<<<<<#caller/%call_term_for_2
            +
            putchar intrinsic
            d25/32/33 >>>>>>>>>>>>>>>>>>[->>>>>>>+>+<<<<<<<<]
            m32/25 >>>>>>>[-<<<<<<<+>>>>>>>]
            >.
            [-]
        <<<<<<<<<<<<<<<<<<<<<<<<<<<]
        >#B:%call_term_for_2
        [
            -
            store i32**** %4_ i32***** %5_ align 8
            resolve alloca addr storing pointer value in temp address
            l1 <
            d0/33/34 <<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m34/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            <<+++++++++++++
            <<<<<<<<<<<<<<<<<<<[-]
            m32/13 >>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>]
            %18 = load i32***** %5_ align 8
            <<<<<<[-]
            d13/26/32 <<<<<<<<<<<<<[->>>>>>>>>>>>>+>>>>>>+<<<<<<<<<<<<<<<<<<<]
            m32/13 >>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>]
            %19 = load i32**** %18_ align 8
            <<<<<[-]
            d26/32/33 <[->>>>>>+>+<<<<<<<]
            m32/26 >>>>>>[-<<<<<<+>>>>>>]
            >>#train_tmp
            >#train_ret
            >#train_ptr
            
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/38/39 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m38/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m38/40 <<<<[->>+<<]
            >>>>+
            <<<<<<<<<[
                -
                >>>>>>+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<]
            >>>>>>>>>-
            <<#subnu_to
            [
                if pos
                m40/36 [-<<<<+>>>>]
                <<<<++++++++++++++++++++++++++++++++++
            >>>>]
            <[
                if neg
                <<<++++++++++++++++++++++++++++++++++
                >>>[
                    -
                    <<<-
                >>>]
            ]
            drive left! choo choo
            <<<[
                m35/34 <[-<+>]
                m36/35 >[-<+>]
                
                m33/36 <<<[->>>+<<<]
                l1 <
                >>>-
                <+
            >]
            get our bag
            d33/34/36 <<<[->+>>+<<<]
            m34/33 >[-<+>]
            >[
                m37/34 >>[-<<<+>>>]
                m36/37 <[->+<]
                m35/36 <[->+<]
                r1 >
                -
            ]
            m36/27 >[-<<<<<<<<<+>>>>>>>>>]
            %20 = load i32*** %19_ align 8
            <<<<<<<<[-]
            d27/32/33 <[->>>>>+>+<<<<<<]
            m32/27 >>>>>[-<<<<<+>>>>>]
            >>#train_tmp
            >#train_ret
            >#train_ptr
            
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/38/39 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m38/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m38/40 <<<<[->>+<<]
            >>>>+
            <<<<<<<<<[
                -
                >>>>>>+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<]
            >>>>>>>>>-
            <<#subnu_to
            [
                if pos
                m40/36 [-<<<<+>>>>]
                <<<<++++++++++++++++++++++++++++++++++
            >>>>]
            <[
                if neg
                <<<++++++++++++++++++++++++++++++++++
                >>>[
                    -
                    <<<-
                >>>]
            ]
            drive left! choo choo
            <<<[
                m35/34 <[-<+>]
                m36/35 >[-<+>]
                
                m33/36 <<<[->>>+<<<]
                l1 <
                >>>-
                <+
            >]
            get our bag
            d33/34/36 <<<[->+>>+<<<]
            m34/33 >[-<+>]
            >[
                m37/34 >>[-<<<+>>>]
                m36/37 <[->+<]
                m35/36 <[->+<]
                r1 >
                -
            ]
            m36/28 >[-<<<<<<<<+>>>>>>>>]
            %21 = load i32** %20_ align 8
            <<<<<<<[-]
            d28/32/33 <[->>>>+>+<<<<<]
            m32/28 >>>>[-<<<<+>>>>]
            >>#train_tmp
            >#train_ret
            >#train_ptr
            
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/38/39 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m38/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m38/40 <<<<[->>+<<]
            >>>>+
            <<<<<<<<<[
                -
                >>>>>>+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<]
            >>>>>>>>>-
            <<#subnu_to
            [
                if pos
                m40/36 [-<<<<+>>>>]
                <<<<++++++++++++++++++++++++++++++++++
            >>>>]
            <[
                if neg
                <<<++++++++++++++++++++++++++++++++++
                >>>[
                    -
                    <<<-
                >>>]
            ]
            drive left! choo choo
            <<<[
                m35/34 <[-<+>]
                m36/35 >[-<+>]
                
                m33/36 <<<[->>>+<<<]
                l1 <
                >>>-
                <+
            >]
            get our bag
            d33/34/36 <<<[->+>>+<<<]
            m34/33 >[-<+>]
            >[
                m37/34 >>[-<<<+>>>]
                m36/37 <[->+<]
                m35/36 <[->+<]
                r1 >
                -
            ]
            m36/29 >[-<<<<<<<+>>>>>>>]
            %22 = load i32* %21_ align 4
            <<<<<<[-]
            d29/32/33 <[->>>+>+<<<<]
            m32/29 >>>[-<<<+>>>]
            >>#train_tmp
            >#train_ret
            >#train_ptr
            
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/38/39 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m38/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m38/40 <<<<[->>+<<]
            >>>>+
            <<<<<<<<<[
                -
                >>>>>>+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<]
            >>>>>>>>>-
            <<#subnu_to
            [
                if pos
                m40/36 [-<<<<+>>>>]
                <<<<++++++++++++++++++++++++++++++++++
            >>>>]
            <[
                if neg
                <<<++++++++++++++++++++++++++++++++++
                >>>[
                    -
                    <<<-
                >>>]
            ]
            drive left! choo choo
            <<<[
                m35/34 <[-<+>]
                m36/35 >[-<+>]
                
                m33/36 <<<[->>>+<<<]
                l1 <
                >>>-
                <+
            >]
            get our bag
            d33/34/36 <<<[->+>>+<<<]
            m34/33 >[-<+>]
            >[
                m37/34 >>[-<<<+>>>]
                m36/37 <[->+<]
                m35/36 <[->+<]
                r1 >
                -
            ]
            m36/30 >[-<<<<<<+>>>>>>]
            %23 = trunc i32 %22 to i8
            <<<<<[-]
            d30/32/33 <[->>+>+<<<]
            m32/30 >>[-<<+>>]
            m33/31 >[-<<+>>]
            call @putchar(i8 %23)
            enable next block when we return
            <<<<<<<<<<<<<<<<<<<<<<<<<#caller/%call_term_for_3
            +
            putchar intrinsic
            d31/32/33 >>>>>>>>>>>>>>>>>>>>>>>[->+>+<<]
            m32/31 >[-<+>]
            >.
            [-]
        <<<<<<<<<<<<<<<<<<<<<<<<<<]
        >#B:%call_term_for_3
        [
            -
            ret i32 0
            zero all function allocs
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<-
            #dead_frame
            >-
            l1 <
            <[-]
            r1 >
            l5 <<<<<
        >>>>>>>>]
    <<<<<<<]
<]
