r4 >>>>
++++
r1 >
runtime init:
#===TOP_FRAME
+
>#main
+
>#main/b0
+
<<[
    >#main
    [
        >>#B:%ret_lading_pad
        [
            <<<-
            #dead_frame
            >-
            <#dead_fn_pad/main
            >>>-
            l44 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
        ]
        <<<#mainloop_main
        >#F:main
        >#B:%no_block0_call_for_main
        >#B:%ret_lading_pad
        >#B:%0
        >#B:%call_term_for_0
        >#B:%call_term_for_1
        >#B:%call_term_for_2
        >#B:%call_term_for_3
        >#alloc_%1
        >#alloc_%2
        >#alloc_%3
        >#alloc_%4
        >#alloc_%5
        >#%6_=_load_i32**_%2__align_8
        >#%7_=_load_i32*_%6__align_4
        >#%8_=_trunc_i32_%7_to_i8
        >#%9_=_load_i32***_%3__align_8
        >#%10_=_load_i32**_%9__align_8
        >#%11_=_load_i32*_%10__align_4
        >#%12_=_trunc_i32_%11_to_i8
        >#%13_=_load_i32****_%4__align_8
        >#%14_=_load_i32***_%13__align_8
        >#%15_=_load_i32**_%14__align_8
        >#%16_=_load_i32*_%15__align_4
        >#%17_=_trunc_i32_%16_to_i8
        >#%18_=_load_i32*****_%5__align_8
        >#%19_=_load_i32****_%18__align_8
        >#%20_=_load_i32***_%19__align_8
        >#%21_=_load_i32**_%20__align_8
        >#%22_=_load_i32*_%21__align_4
        >#%23_=_trunc_i32_%22_to_i8
        <<<<<<<<<<<<<<<<<<<<<<<<<<<<<#B:%no_block0_call_for_main
        [
            -
            copy up args
            br label %0
            >>+
        <<]
        >>#B:%0
        [
            -
            %1 = alloca i32_ align 4
            %2 = alloca i32*_ align 8
            %3 = alloca i32**_ align 8
            %4 = alloca i32***_ align 8
            %5 = alloca i32****_ align 8
            store i32 112_ i32* %1_ align 4
            op_to_reg storing const value in temp address
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>#constop_112
            ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            <<<<<<<<<<<<<<<<<<<<<<<[-]
            m32/9 >>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>]
            store i32* %1_ i32** %2_ align 8
            resolve alloca addr storing pointer value in temp address
            l1 <
            d0/34/33 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+<+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m33/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            ++++++++++
            <<<<<<<<<<<<<<<<<<<<<<<[-]
            m33/10 >>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>]
            %6 = load i32** %2_ align 8
            d10/14/32 <<<<<<<<<<<<<<<<<<<<<<<[->>>>+>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<]
            m32/10 >>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>]
            %7 = load i32* %6_ align 4
            >>#train_tmp
            >#train_ret
            >#train_ptr
            
            <<<#stackptr
            <#stackptr_tmp
            l1 <
            d0/33/34 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m33/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            >>>>#ptr_underflow
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m33/38 <<<<<<<[->>>>>+<<<<<]
            >>>>>>>+
            <<<<<<<<<<<<<<<<<<<<<<<<<<[
                -
                >>>>>>>>>>>>>>>>>>>>>>>+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<<<<<<<<<<<<<<<<<<]
            >>>>>>>>>>>>>>>>>>>>>>>>>>-
            <<#subnu_to
            [
                if pos
                m38/36 [-<<+>>]
                <<++++++++++++++++++++++++++++++++++
            >>]
            <[
                if neg
                <++++++++++++++++++++++++++++++++++
                >[
                    -
                    <-
                >]
            ]
            drive left! choo choo
            <[
                m35/34 <[-<+>]
                m36/35 >[-<+>]
                
                m33/36 <<<[->>>+<<<]
                l1 <
                >>>-
                <+
            >]
            get our bag
            d33/34/36 <<<[->+>>+<<<]
            m34/33 >[-<+>]
            >[
                m37/34 >>[-<<<+>>>]
                m36/37 <[->+<]
                m35/36 <[->+<]
                r1 >
                -
            ]
            m36/15 >[-<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>]
            %8 = trunc i32 %7 to i8
            m15/16 <<<<<<<<<<<<<<<<<<<<<[->+<]
            call @putchar(i8 %8)
            enable next block when we return
            <<<<<<<<<<#caller/%call_term_for_0
            +
            putchar intrinsic
            >>>>>>>>>>>.
            [-]
        <<<<<<<<<<<<]
        >#B:%call_term_for_0
        [
            -
            store i32** %2_ i32*** %3_ align 8
            resolve alloca addr storing pointer value in temp address
            l1 <
            d0/33/34 <<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m34/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            <<+++++++++++
            <<<<<<<<<<<<<<<<<<<<<[-]
            m32/11 >>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>]
            %9 = load i32*** %3_ align 8
            d11/17/32 <<<<<<<<<<<<<<<<<<<<<[->>>>>>+>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<]
            m32/11 >>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>]
            %10 = load i32** %9_ align 8
            #train_tmp
            >#train_ret
            >#train_ptr
            
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/36/37 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m36/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >>>>#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m36/41 <<<<<<<[->>>>>+<<<<<]
            >>>>>>>+
            <<<<<<<<<<<<<<<<<<<<<<<<<<[
                -
                >>>>>>>>>>>>>>>>>>>>+
                >>>>[
                    -
                    <<<<-
                    r1 >
                >>>>]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<<<<<<<<<<<<<<<<<<]
            >>>>>>>>>>>>>>>>>>>>>>>>>>-
            <<#subnu_to
            [
                if pos
                m41/34 [-<<<<<<<+>>>>>>>]
                <<<<<<<++++++++++++++++++++++++++++++++
            >>>>>>>]
            <<<<[
                if neg
                <<<++++++++++++++++++++++++++++++++
                >>>[
                    -
                    <<<-
                >>>]
            ]
            drive left! choo choo
            <<<[
                m33/32 <[-<+>]
                m34/33 >[-<+>]
                
                m31/34 <<<[->>>+<<<]
                l1 <
                >>>-
                <+
            >]
            get our bag
            d31/32/34 <<<[->+>>+<<<]
            m32/31 >[-<+>]
            >[
                m35/32 >>[-<<<+>>>]
                m34/35 <[->+<]
                m33/34 <[->+<]
                r1 >
                -
            ]
            m34/18 >[-<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>]
            %11 = load i32* %10_ align 4
            <<#train_tmp
            >#train_ret
            >#train_ptr
            
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/36/37 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m36/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m36/38 <<<<[->>+<<]
            >>>>+
            <<<<<<<<<<<<<<<<<<<<<<[
                -
                >>>>>>>>>>>>>>>>>>>+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<<<<<<<<<<<<<<]
            >>>>>>>>>>>>>>>>>>>>>>-
            <<#subnu_to
            [
                if pos
                m38/34 [-<<<<+>>>>]
                <<<<++++++++++++++++++++++++++++++++
            >>>>]
            <[
                if neg
                <<<++++++++++++++++++++++++++++++++
                >>>[
                    -
                    <<<-
                >>>]
            ]
            drive left! choo choo
            <<<[
                m33/32 <[-<+>]
                m34/33 >[-<+>]
                
                m31/34 <<<[->>>+<<<]
                l1 <
                >>>-
                <+
            >]
            get our bag
            d31/32/34 <<<[->+>>+<<<]
            m32/31 >[-<+>]
            >[
                m35/32 >>[-<<<+>>>]
                m34/35 <[->+<]
                m33/34 <[->+<]
                r1 >
                -
            ]
            m34/19 >[-<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>]
            %12 = trunc i32 %11 to i8
            m19/20 <<<<<<<<<<<<<<<[->+<]
            call @putchar(i8 %12)
            enable next block when we return
            <<<<<<<<<<<<<#caller/%call_term_for_1
            +
            putchar intrinsic
            >>>>>>>>>>>>>>.
            [-]
        <<<<<<<<<<<<<<<]
        >#B:%call_term_for_1
        [
            -
            store i32*** %3_ i32**** %4_ align 8
            resolve alloca addr storing pointer value in temp address
            l1 <
            d0/33/34 <<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m34/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            <<++++++++++++
            <<<<<<<<<<<<<<<<<<<<[-]
            m32/12 >>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>]
            %13 = load i32**** %4_ align 8
            d12/21/32 <<<<<<<<<<<<<<<<<<<<[->>>>>>>>>+>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<]
            m32/12 >>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>]
            %14 = load i32*** %13_ align 8
            #train_tmp
            >#train_ret
            >#train_ptr
            
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/36/37 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m36/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m36/38 <<<<[->>+<<]
            >>>>+
            <<<<<<<<<<<<<<<<<<<[
                -
                >>>>>>>>>>>>>>>>+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<<<<<<<<<<<]
            >>>>>>>>>>>>>>>>>>>-
            <<#subnu_to
            [
                if pos
                m38/34 [-<<<<+>>>>]
                <<<<++++++++++++++++++++++++++++++++
            >>>>]
            <[
                if neg
                <<<++++++++++++++++++++++++++++++++
                >>>[
                    -
                    <<<-
                >>>]
            ]
            drive left! choo choo
            <<<[
                m33/32 <[-<+>]
                m34/33 >[-<+>]
                
                m31/34 <<<[->>>+<<<]
                l1 <
                >>>-
                <+
            >]
            get our bag
            d31/32/34 <<<[->+>>+<<<]
            m32/31 >[-<+>]
            >[
                m35/32 >>[-<<<+>>>]
                m34/35 <[->+<]
                m33/34 <[->+<]
                r1 >
                -
            ]
            m34/22 >[-<<<<<<<<<<<<+>>>>>>>>>>>>]
            %15 = load i32** %14_ align 8
            <<#train_tmp
            >#train_ret
            >#train_ptr
            
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/36/37 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m36/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m36/38 <<<<[->>+<<]
            >>>>+
            <<<<<<<<<<<<<<<<<<[
                -
                >>>>>>>>>>>>>>>+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<<<<<<<<<<]
            >>>>>>>>>>>>>>>>>>-
            <<#subnu_to
            [
                if pos
                m38/34 [-<<<<+>>>>]
                <<<<++++++++++++++++++++++++++++++++
            >>>>]
            <[
                if neg
                <<<++++++++++++++++++++++++++++++++
                >>>[
                    -
                    <<<-
                >>>]
            ]
            drive left! choo choo
            <<<[
                m33/32 <[-<+>]
                m34/33 >[-<+>]
                
                m31/34 <<<[->>>+<<<]
                l1 <
                >>>-
                <+
            >]
            get our bag
            d31/32/34 <<<[->+>>+<<<]
            m32/31 >[-<+>]
            >[
                m35/32 >>[-<<<+>>>]
                m34/35 <[->+<]
                m33/34 <[->+<]
                r1 >
                -
            ]
            m34/23 >[-<<<<<<<<<<<+>>>>>>>>>>>]
            %16 = load i32* %15_ align 4
            <<#train_tmp
            >#train_ret
            >#train_ptr
            
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/36/37 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m36/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m36/38 <<<<[->>+<<]
            >>>>+
            <<<<<<<<<<<<<<<<<[
                -
                >>>>>>>>>>>>>>+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<<<<<<<<<]
            >>>>>>>>>>>>>>>>>-
            <<#subnu_to
            [
                if pos
                m38/34 [-<<<<+>>>>]
                <<<<++++++++++++++++++++++++++++++++
            >>>>]
            <[
                if neg
                <<<++++++++++++++++++++++++++++++++
                >>>[
                    -
                    <<<-
                >>>]
            ]
            drive left! choo choo
            <<<[
                m33/32 <[-<+>]
                m34/33 >[-<+>]
                
                m31/34 <<<[->>>+<<<]
                l1 <
                >>>-
                <+
            >]
            get our bag
            d31/32/34 <<<[->+>>+<<<]
            m32/31 >[-<+>]
            >[
                m35/32 >>[-<<<+>>>]
                m34/35 <[->+<]
                m33/34 <[->+<]
                r1 >
                -
            ]
            m34/24 >[-<<<<<<<<<<+>>>>>>>>>>]
            %17 = trunc i32 %16 to i8
            m24/25 <<<<<<<<<<[->+<]
            call @putchar(i8 %17)
            enable next block when we return
            <<<<<<<<<<<<<<<<<#caller/%call_term_for_2
            +
            putchar intrinsic
            >>>>>>>>>>>>>>>>>>.
            [-]
        <<<<<<<<<<<<<<<<<<<]
        >#B:%call_term_for_2
        [
            -
            store i32**** %4_ i32***** %5_ align 8
            resolve alloca addr storing pointer value in temp address
            l1 <
            d0/33/34 <<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m34/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            <<+++++++++++++
            <<<<<<<<<<<<<<<<<<<[-]
            m32/13 >>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>]
            %18 = load i32***** %5_ align 8
            d13/26/32 <<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>+>>>>>>+<<<<<<<<<<<<<<<<<<<]
            m32/13 >>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>]
            %19 = load i32**** %18_ align 8
            #train_tmp
            >#train_ret
            >#train_ptr
            
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/36/37 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m36/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m36/38 <<<<[->>+<<]
            >>>>+
            <<<<<<<<<<<<<<[
                -
                >>>>>>>>>>>+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<<<<<<]
            >>>>>>>>>>>>>>-
            <<#subnu_to
            [
                if pos
                m38/34 [-<<<<+>>>>]
                <<<<++++++++++++++++++++++++++++++++
            >>>>]
            <[
                if neg
                <<<++++++++++++++++++++++++++++++++
                >>>[
                    -
                    <<<-
                >>>]
            ]
            drive left! choo choo
            <<<[
                m33/32 <[-<+>]
                m34/33 >[-<+>]
                
                m31/34 <<<[->>>+<<<]
                l1 <
                >>>-
                <+
            >]
            get our bag
            d31/32/34 <<<[->+>>+<<<]
            m32/31 >[-<+>]
            >[
                m35/32 >>[-<<<+>>>]
                m34/35 <[->+<]
                m33/34 <[->+<]
                r1 >
                -
            ]
            m34/27 >[-<<<<<<<+>>>>>>>]
            %20 = load i32*** %19_ align 8
            <<#train_tmp
            >#train_ret
            >#train_ptr
            
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/36/37 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m36/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m36/38 <<<<[->>+<<]
            >>>>+
            <<<<<<<<<<<<<[
                -
                >>>>>>>>>>+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<<<<<]
            >>>>>>>>>>>>>-
            <<#subnu_to
            [
                if pos
                m38/34 [-<<<<+>>>>]
                <<<<++++++++++++++++++++++++++++++++
            >>>>]
            <[
                if neg
                <<<++++++++++++++++++++++++++++++++
                >>>[
                    -
                    <<<-
                >>>]
            ]
            drive left! choo choo
            <<<[
                m33/32 <[-<+>]
                m34/33 >[-<+>]
                
                m31/34 <<<[->>>+<<<]
                l1 <
                >>>-
                <+
            >]
            get our bag
            d31/32/34 <<<[->+>>+<<<]
            m32/31 >[-<+>]
            >[
                m35/32 >>[-<<<+>>>]
                m34/35 <[->+<]
                m33/34 <[->+<]
                r1 >
                -
            ]
            m34/28 >[-<<<<<<+>>>>>>]
            %21 = load i32** %20_ align 8
            <<#train_tmp
            >#train_ret
            >#train_ptr
            
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/36/37 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m36/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m36/38 <<<<[->>+<<]
            >>>>+
            <<<<<<<<<<<<[
                -
                >>>>>>>>>+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<<<<]
            >>>>>>>>>>>>-
            <<#subnu_to
            [
                if pos
                m38/34 [-<<<<+>>>>]
                <<<<++++++++++++++++++++++++++++++++
            >>>>]
            <[
                if neg
                <<<++++++++++++++++++++++++++++++++
                >>>[
                    -
                    <<<-
                >>>]
            ]
            drive left! choo choo
            <<<[
                m33/32 <[-<+>]
                m34/33 >[-<+>]
                
                m31/34 <<<[->>>+<<<]
                l1 <
                >>>-
                <+
            >]
            get our bag
            d31/32/34 <<<[->+>>+<<<]
            m32/31 >[-<+>]
            >[
                m35/32 >>[-<<<+>>>]
                m34/35 <[->+<]
                m33/34 <[->+<]
                r1 >
                -
            ]
            m34/29 >[-<<<<<+>>>>>]
            %22 = load i32* %21_ align 4
            <<#train_tmp
            >#train_ret
            >#train_ptr
            
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/36/37 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m36/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m36/38 <<<<[->>+<<]
            >>>>+
            <<<<<<<<<<<[
                -
                >>>>>>>>+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<<<]
            >>>>>>>>>>>-
            <<#subnu_to
            [
                if pos
                m38/34 [-<<<<+>>>>]
                <<<<++++++++++++++++++++++++++++++++
            >>>>]
            <[
                if neg
                <<<++++++++++++++++++++++++++++++++
                >>>[
                    -
                    <<<-
                >>>]
            ]
            drive left! choo choo
            <<<[
                m33/32 <[-<+>]
                m34/33 >[-<+>]
                
                m31/34 <<<[->>>+<<<]
                l1 <
                >>>-
                <+
            >]
            get our bag
            d31/32/34 <<<[->+>>+<<<]
            m32/31 >[-<+>]
            >[
                m35/32 >>[-<<<+>>>]
                m34/35 <[->+<]
                m33/34 <[->+<]
                r1 >
                -
            ]
            m34/30 >[-<<<<+>>>>]
            %23 = trunc i32 %22 to i8
            m30/31 <<<<[->+<]
            call @putchar(i8 %23)
            enable next block when we return
            <<<<<<<<<<<<<<<<<<<<<<#caller/%call_term_for_3
            +
            putchar intrinsic
            >>>>>>>>>>>>>>>>>>>>>>>.
            [-]
        <<<<<<<<<<<<<<<<<<<<<<<<]
        >#B:%call_term_for_3
        [
            -
            ret i32 0
            zero all function allocs
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            <<<<<<<<<<<<<-
            #dead_frame
            >-
            l1 <
            <[-]
            r1 >
            l5 <<<<<
        >>>>>>>>]
    <<<<<<<]
<]
