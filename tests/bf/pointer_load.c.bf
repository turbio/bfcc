r4 >>>>
++++
r1 >
runtime init:
#===TOP_FRAME
+
>#main
+
>#main/b0
+
<<[
    >#main
    [
        >>#main/RET_LANDING_PAD
        [
            <<<-
            #dead_frame
            >-
            <#dead_fn_pad/main
            >>>-
            l26 <<<<<<<<<<<<<<<<<<<<<<<<<<
        ]
        <#B:main/%call_never_first_formain
        [
            -
            br label %0
            >>#B:main/%0
            +
        <<]
        >>#B:main/%0
        [
            -
            %1 = alloca i32_ align 4
            >>>>>#alloca_%1
            %2 = alloca i32*_ align 8
            >#alloca_%2
            %3 = alloca i32**_ align 8
            >#alloca_%3
            %4 = alloca i32***_ align 8
            >#alloca_%4
            %5 = alloca i32****_ align 8
            >#alloca_%5
            store i32 112_ i32* %1_ align 4
            store sitch: alloca Some(9)
            grab the value we're storing
            op_to_reg storing const value in temp address
            >#constop_112
            ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            and the destination
            op_to_reg giving known register address
            <<<<<[-]
            m14/9 >>>>>[-<<<<<+>>>>>]
            store i32* %1_ i32** %2_ align 8
            store sitch: alloca Some(10)
            grab the value we're storing
            op_to_reg storing pointer value in temp address
            >#tmp_allocptr_%1
            l1 <
            d0/16/15 <<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>+<+<<<<<<<<<<<<<<<]
            m15/0 >>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>]
            r1 >
            ++++++++++
            and the destination
            op_to_reg giving known register address
            <<<<<[-]
            m15/10 >>>>>[-<<<<<+>>>>>]
            %6 = load i32** %2_ align 8
            >>>>>>>>>>>>>>>>>>>>>#load_thru_%2_to_%6
            op_to_reg giving known register address
            <<<<<<<<<<<<<<<<<<<<<<#tmp0_for_load
            d10/14/36 <<<<[->>>>+>>>>>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m14/10 >>>>[-<<<<+>>>>]
            %7 = load i32* %6_ align 4
            >>#train_tmp
            >#train_ret
            >#train_ptr
            
            <<<#stackptr
            <#stackptr_tmp
            l1 <
            d0/15/16 <<<<<<<<<<<<<<[->>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<]
            m15/0 >>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>]
            r1 >
            >>>>#ptr_underflow
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m15/20 <<<<<<<[->>>>>+<<<<<]
            >>>>>>>+
            >>>>>>>>>>>>>>[
                -
                <<<<<<<<<<<<<<<<<+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            >>>>>>>>>>>>>>>>]
            <<<<<<<<<<<<<<-
            <<#subnu_to
            [
                m20/18 [-<<+>>]
                <<++++++++++++++++
            >>]
            <[
                <++++++++++++++++
                >[
                    -
                    <-
                >]
            ]
            drive left! choo choo
            <[
                m17/16 <[-<+>]
                m18/17 >[-<+>]
                
                m15/18 <<<[->>>+<<<]
                l1 <
                >>>-
                <+
            >]
            get our bag
            d15/16/18 <<<[->+>>+<<<]
            m16/15 >[-<+>]
            >[
                m19/16 >>[-<<<+>>>]
                m18/19 <[->+<]
                m17/18 <[->+<]
                r1 >
                -
            ]
            m18/37 >[->>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<]
            %8 = trunc i32 %7 to i8
            op_to_reg giving known register address
            >>>>>>>>>>>>>>>>>>>>#%8_trunc_i32_%7
            m37/38 <[->+<]
            call @putchar(i8 %8)
            enable next
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<#main/%call_term_for_0
            +
            putchar intrinsic
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>.
            [-]
        <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
        >#B:main/%call_term_for_0
        [
            -
            store i32** %2_ i32*** %3_ align 8
            store sitch: alloca Some(11)
            grab the value we're storing
            op_to_reg storing pointer value in temp address
            >>>>>>>>>#tmp_allocptr_%2
            l1 <
            d0/15/16 <<<<<<<<<<<<<<[->>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<]
            m16/0 >>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>]
            r1 >
            <<+++++++++++
            and the destination
            op_to_reg giving known register address
            <<<[-]
            m14/11 >>>[-<<<+>>>]
            %9 = load i32*** %3_ align 8
            >>>>>>>>>>>>>>>>>>>>>>>>>#load_thru_%3_to_%9
            op_to_reg giving known register address
            <<<<<<<<<<<<<<<<<<<<<<<<<#tmp0_for_load
            d11/14/39 <<<[->>>+>>>>>>>>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m14/11 >>>[-<<<+>>>]
            %10 = load i32** %9_ align 8
            #train_tmp
            >#train_ret
            >#train_ptr
            
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/18/19 <<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<]
            m18/0 >>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >>>>#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m18/23 <<<<<<<[->>>>>+<<<<<]
            >>>>>>>+
            >>>>>>>>>>>>>>[
                -
                <<<<<<<<<<<<<<<<<<<<+
                >>>>[
                    -
                    <<<<-
                    r1 >
                >>>>]
                r1 >
                [
                    l1 <
                ]
                l1 <
            >>>>>>>>>>>>>>>>]
            <<<<<<<<<<<<<<-
            <<#subnu_to
            [
                m23/16 [-<<<<<<<+>>>>>>>]
                <<<<<<<++++++++++++++
            >>>>>>>]
            <<<<[
                <<<++++++++++++++
                >>>[
                    -
                    <<<-
                >>>]
            ]
            drive left! choo choo
            <<<[
                m15/14 <[-<+>]
                m16/15 >[-<+>]
                
                m13/16 <<<[->>>+<<<]
                l1 <
                >>>-
                <+
            >]
            get our bag
            d13/14/16 <<<[->+>>+<<<]
            m14/13 >[-<+>]
            >[
                m17/14 >>[-<<<+>>>]
                m16/17 <[->+<]
                m15/16 <[->+<]
                r1 >
                -
            ]
            m16/40 >[->>>>>>>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<]
            %11 = load i32* %10_ align 4
            <<#train_tmp
            >#train_ret
            >#train_ptr
            
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/18/19 <<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<]
            m18/0 >>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m18/20 <<<<[->>+<<]
            >>>>+
            >>>>>>>>>>>>>>>>>>[
                -
                <<<<<<<<<<<<<<<<<<<<<+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            >>>>>>>>>>>>>>>>>>>>]
            <<<<<<<<<<<<<<<<<<-
            <<#subnu_to
            [
                m20/16 [-<<<<+>>>>]
                <<<<++++++++++++++
            >>>>]
            <[
                <<<++++++++++++++
                >>>[
                    -
                    <<<-
                >>>]
            ]
            drive left! choo choo
            <<<[
                m15/14 <[-<+>]
                m16/15 >[-<+>]
                
                m13/16 <<<[->>>+<<<]
                l1 <
                >>>-
                <+
            >]
            get our bag
            d13/14/16 <<<[->+>>+<<<]
            m14/13 >[-<+>]
            >[
                m17/14 >>[-<<<+>>>]
                m16/17 <[->+<]
                m15/16 <[->+<]
                r1 >
                -
            ]
            m16/41 >[->>>>>>>>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<<]
            %12 = trunc i32 %11 to i8
            op_to_reg giving known register address
            >>>>>>>>>>>>>>>>>>>>>>>>>>#%12_trunc_i32_%11
            m41/42 <[->+<]
            call @putchar(i8 %12)
            enable next
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<#main/%call_term_for_1
            +
            putchar intrinsic
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>.
            [-]
        <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
        >#B:main/%call_term_for_1
        [
            -
            store i32*** %3_ i32**** %4_ align 8
            store sitch: alloca Some(12)
            grab the value we're storing
            op_to_reg storing pointer value in temp address
            >>>>>>>>#tmp_allocptr_%3
            l1 <
            d0/15/16 <<<<<<<<<<<<<<[->>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<]
            m16/0 >>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>]
            r1 >
            <<++++++++++++
            and the destination
            op_to_reg giving known register address
            <<[-]
            m14/12 >>[-<<+>>]
            %13 = load i32**** %4_ align 8
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>#load_thru_%4_to_%13
            op_to_reg giving known register address
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<#tmp0_for_load
            d12/14/43 <<[->>+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m14/12 >>[-<<+>>]
            %14 = load i32*** %13_ align 8
            #train_tmp
            >#train_ret
            >#train_ptr
            
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/18/19 <<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<]
            m18/0 >>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m18/20 <<<<[->>+<<]
            >>>>+
            >>>>>>>>>>>>>>>>>>>>>[
                -
                <<<<<<<<<<<<<<<<<<<<<<<<+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            >>>>>>>>>>>>>>>>>>>>>>>]
            <<<<<<<<<<<<<<<<<<<<<-
            <<#subnu_to
            [
                m20/16 [-<<<<+>>>>]
                <<<<++++++++++++++
            >>>>]
            <[
                <<<++++++++++++++
                >>>[
                    -
                    <<<-
                >>>]
            ]
            drive left! choo choo
            <<<[
                m15/14 <[-<+>]
                m16/15 >[-<+>]
                
                m13/16 <<<[->>>+<<<]
                l1 <
                >>>-
                <+
            >]
            get our bag
            d13/14/16 <<<[->+>>+<<<]
            m14/13 >[-<+>]
            >[
                m17/14 >>[-<<<+>>>]
                m16/17 <[->+<]
                m15/16 <[->+<]
                r1 >
                -
            ]
            m16/44 >[->>>>>>>>>>>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            %15 = load i32** %14_ align 8
            <<#train_tmp
            >#train_ret
            >#train_ptr
            
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/18/19 <<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<]
            m18/0 >>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m18/20 <<<<[->>+<<]
            >>>>+
            >>>>>>>>>>>>>>>>>>>>>>[
                -
                <<<<<<<<<<<<<<<<<<<<<<<<<+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            >>>>>>>>>>>>>>>>>>>>>>>>]
            <<<<<<<<<<<<<<<<<<<<<<-
            <<#subnu_to
            [
                m20/16 [-<<<<+>>>>]
                <<<<++++++++++++++
            >>>>]
            <[
                <<<++++++++++++++
                >>>[
                    -
                    <<<-
                >>>]
            ]
            drive left! choo choo
            <<<[
                m15/14 <[-<+>]
                m16/15 >[-<+>]
                
                m13/16 <<<[->>>+<<<]
                l1 <
                >>>-
                <+
            >]
            get our bag
            d13/14/16 <<<[->+>>+<<<]
            m14/13 >[-<+>]
            >[
                m17/14 >>[-<<<+>>>]
                m16/17 <[->+<]
                m15/16 <[->+<]
                r1 >
                -
            ]
            m16/45 >[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            %16 = load i32* %15_ align 4
            <<#train_tmp
            >#train_ret
            >#train_ptr
            
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/18/19 <<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<]
            m18/0 >>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m18/20 <<<<[->>+<<]
            >>>>+
            >>>>>>>>>>>>>>>>>>>>>>>[
                -
                <<<<<<<<<<<<<<<<<<<<<<<<<<+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            >>>>>>>>>>>>>>>>>>>>>>>>>]
            <<<<<<<<<<<<<<<<<<<<<<<-
            <<#subnu_to
            [
                m20/16 [-<<<<+>>>>]
                <<<<++++++++++++++
            >>>>]
            <[
                <<<++++++++++++++
                >>>[
                    -
                    <<<-
                >>>]
            ]
            drive left! choo choo
            <<<[
                m15/14 <[-<+>]
                m16/15 >[-<+>]
                
                m13/16 <<<[->>>+<<<]
                l1 <
                >>>-
                <+
            >]
            get our bag
            d13/14/16 <<<[->+>>+<<<]
            m14/13 >[-<+>]
            >[
                m17/14 >>[-<<<+>>>]
                m16/17 <[->+<]
                m15/16 <[->+<]
                r1 >
                -
            ]
            m16/46 >[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            %17 = trunc i32 %16 to i8
            op_to_reg giving known register address
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#%17_trunc_i32_%16
            m46/47 <[->+<]
            call @putchar(i8 %17)
            enable next
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<#main/%call_term_for_2
            +
            putchar intrinsic
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>.
            [-]
        <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
        >#B:main/%call_term_for_2
        [
            -
            store i32**** %4_ i32***** %5_ align 8
            store sitch: alloca Some(13)
            grab the value we're storing
            op_to_reg storing pointer value in temp address
            >>>>>>>#tmp_allocptr_%4
            l1 <
            d0/15/16 <<<<<<<<<<<<<<[->>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<]
            m16/0 >>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>]
            r1 >
            <<+++++++++++++
            and the destination
            op_to_reg giving known register address
            <[-]
            m14/13 >[-<+>]
            %18 = load i32***** %5_ align 8
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#load_thru_%5_to_%18
            op_to_reg giving known register address
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<#tmp0_for_load
            d13/14/48 <[->+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m14/13 >[-<+>]
            %19 = load i32**** %18_ align 8
            #train_tmp
            >#train_ret
            >#train_ptr
            
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/18/19 <<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<]
            m18/0 >>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m18/20 <<<<[->>+<<]
            >>>>+
            >>>>>>>>>>>>>>>>>>>>>>>>>>[
                -
                <<<<<<<<<<<<<<<<<<<<<<<<<<<<<+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            <<<<<<<<<<<<<<<<<<<<<<<<<<-
            <<#subnu_to
            [
                m20/16 [-<<<<+>>>>]
                <<<<++++++++++++++
            >>>>]
            <[
                <<<++++++++++++++
                >>>[
                    -
                    <<<-
                >>>]
            ]
            drive left! choo choo
            <<<[
                m15/14 <[-<+>]
                m16/15 >[-<+>]
                
                m13/16 <<<[->>>+<<<]
                l1 <
                >>>-
                <+
            >]
            get our bag
            d13/14/16 <<<[->+>>+<<<]
            m14/13 >[-<+>]
            >[
                m17/14 >>[-<<<+>>>]
                m16/17 <[->+<]
                m15/16 <[->+<]
                r1 >
                -
            ]
            m16/49 >[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            %20 = load i32*** %19_ align 8
            <<#train_tmp
            >#train_ret
            >#train_ptr
            
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/18/19 <<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<]
            m18/0 >>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m18/20 <<<<[->>+<<]
            >>>>+
            >>>>>>>>>>>>>>>>>>>>>>>>>>>[
                -
                <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            <<<<<<<<<<<<<<<<<<<<<<<<<<<-
            <<#subnu_to
            [
                m20/16 [-<<<<+>>>>]
                <<<<++++++++++++++
            >>>>]
            <[
                <<<++++++++++++++
                >>>[
                    -
                    <<<-
                >>>]
            ]
            drive left! choo choo
            <<<[
                m15/14 <[-<+>]
                m16/15 >[-<+>]
                
                m13/16 <<<[->>>+<<<]
                l1 <
                >>>-
                <+
            >]
            get our bag
            d13/14/16 <<<[->+>>+<<<]
            m14/13 >[-<+>]
            >[
                m17/14 >>[-<<<+>>>]
                m16/17 <[->+<]
                m15/16 <[->+<]
                r1 >
                -
            ]
            m16/50 >[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            %21 = load i32** %20_ align 8
            <<#train_tmp
            >#train_ret
            >#train_ptr
            
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/18/19 <<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<]
            m18/0 >>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m18/20 <<<<[->>+<<]
            >>>>+
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>[
                -
                <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<-
            <<#subnu_to
            [
                m20/16 [-<<<<+>>>>]
                <<<<++++++++++++++
            >>>>]
            <[
                <<<++++++++++++++
                >>>[
                    -
                    <<<-
                >>>]
            ]
            drive left! choo choo
            <<<[
                m15/14 <[-<+>]
                m16/15 >[-<+>]
                
                m13/16 <<<[->>>+<<<]
                l1 <
                >>>-
                <+
            >]
            get our bag
            d13/14/16 <<<[->+>>+<<<]
            m14/13 >[-<+>]
            >[
                m17/14 >>[-<<<+>>>]
                m16/17 <[->+<]
                m15/16 <[->+<]
                r1 >
                -
            ]
            m16/51 >[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            %22 = load i32* %21_ align 4
            <<#train_tmp
            >#train_ret
            >#train_ptr
            
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/18/19 <<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<]
            m18/0 >>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m18/20 <<<<[->>+<<]
            >>>>+
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>[
                -
                <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<-
            <<#subnu_to
            [
                m20/16 [-<<<<+>>>>]
                <<<<++++++++++++++
            >>>>]
            <[
                <<<++++++++++++++
                >>>[
                    -
                    <<<-
                >>>]
            ]
            drive left! choo choo
            <<<[
                m15/14 <[-<+>]
                m16/15 >[-<+>]
                
                m13/16 <<<[->>>+<<<]
                l1 <
                >>>-
                <+
            >]
            get our bag
            d13/14/16 <<<[->+>>+<<<]
            m14/13 >[-<+>]
            >[
                m17/14 >>[-<<<+>>>]
                m16/17 <[->+<]
                m15/16 <[->+<]
                r1 >
                -
            ]
            m16/52 >[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            %23 = trunc i32 %22 to i8
            op_to_reg giving known register address
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#%23_trunc_i32_%22
            m52/53 <[->+<]
            call @putchar(i8 %23)
            enable next
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<#main/%call_term_for_3
            +
            putchar intrinsic
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>.
            [-]
        <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
        >#B:main/%call_term_for_3
        [
            -
            ret i32 0
            zero all function allocs
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            <<<<<<<<<<<<<-
            #dead_frame
            >-
            l1 <
            <[-]
            r1 >
            l5 <<<<<
        >>>>>>>>]
    <<<<<<<]
<]
