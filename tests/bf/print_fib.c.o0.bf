r5 >>>>>
+++++
r1 >
runtime init:
#===TOP_FRAME
+
>>#main
+
>#main/b0
+
<<<[
    >#printi
    [
        >>>#printi/RET_LANDING_PAD
        [
            <<<<-
            #dead_frame
            >-
            <#dead_fn_pad/printi
            >>>>-
            l42 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
        ]
        <<<<#mainloop_printi
        >#F:printi
        >#F:main
        >#B:%1
        >#B:%ret_lading_pad
        >#B:%4
        >#B:%5
        >#B:%8
        >#B:%13
        >#B:%call_term_for_4
        >#B:%18
        >#B:%21
        >#alloc_%2
        >#alloc_%3
        >#%6_F
        >#%7_F
        >#%9_F
        >#%10_F
        >#%11_F
        >#%12_F
        >#%14_F
        >#%15_F
        >#%16_F
        >#%17_F
        >#%19_F
        >#%20_F
        >#%0_F
        <<<<<<<<<<<<<<<<<<<<<<<[
            -
            copy up args
            >>>>>>>>>>>>>>>>>>>>>>>#arg_%0
            l2 <<
            m0/28 <<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            r2 >>
            %2 = alloca i32_ align 4
            %3 = alloca i32_ align 4
            store i32 %0_ i32* %2_ align 4
            op_to_reg storing pointer value in temp address
            >>>>>>>>>>>>>>>>>>>>>>>>>>>#tmp_allocptr_%2
            >#tmp_allocptr_tru_%2
            l1 <
            d0/28/29 <<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m29/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            <<+++++++++++++
            store sitch: alloca Some(12)
            store sitch: from LocalOperand { name: Number(0)_ ty: TypeRef(IntegerType { bits: 32 }) }
            >>#train_tmp
            >#train_ret
            >#train_ptr
            >#train_cargo
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/34/35 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m34/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m34/36 <<<<[->>+<<]
            >>>>+
            <<<<<<<<<<<[
                -
                >>>>>>>>+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<<<]
            >>>>>>>>>>>-
            <<#subnu_to
            [
                if pos
                m36/31 [-<<<<<+>>>>>]
                <<<<<+++++++++++++++++++++++++++++
            >>>>>]
            <[
                if neg
                <<<<+++++++++++++++++++++++++++++
                >>>>[
                    -
                    <<<<-
                >>>>]
            ]
            m26/32 <<<<<<<<<[->>>>>>+<<<<<<]
            drive left! choo choo
            >>>>>[
                m30/29 <[-<+>]
                m31/30 >[-<+>]
                m32/31 >[-<+>]
                m28/32 <<<<[->>>>+<<<<]
                l1 <
                >>>-
                <+
            >]
            <<<[-]
            m32/28 >>>>[-<<<<+>>>>]
            <<[
                m33/29 >>>[-<<<<+>>>>]
                
                m30/31 <<<[->+<]
                r1 >
                -
            ]
            br label %4
            <<<<<<<<<<<<<<<<<<<<<<<<<+
        <<]
        >>[
            -
            store i32 0_ i32* %3_ align 4
            op_to_reg storing const value in temp address
            >>>>>>>>>>>>>>>>>>>>>>#constop_0
            
            op_to_reg storing pointer value in temp address
            >#tmp_allocptr_%3
            >#tmp_allocptr_tru_%3
            l1 <
            d0/29/30 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m30/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            <<++++++++++++++
            store sitch: alloca Some(13)
            store sitch: from ConstantOperand(ConstantRef(Int { bits: 32_ value: 0 }))
            >>#train_tmp
            >#train_ret
            >#train_ptr
            >#train_cargo
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/35/36 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m35/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >>>#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m35/39 <<<<<<[->>>>+<<<<]
            >>>>>>+
            <<<<<<<<<<<<<[
                -
                >>>>>>>>+
                >>>[
                    -
                    <<<-
                    r1 >
                >>>]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<<<<<]
            >>>>>>>>>>>>>-
            <<#subnu_to
            [
                if pos
                m39/32 [-<<<<<<<+>>>>>>>]
                <<<<<<<++++++++++++++++++++++++++++++
            >>>>>>>]
            <<<[
                if neg
                <<<<++++++++++++++++++++++++++++++
                >>>>[
                    -
                    <<<<-
                >>>>]
            ]
            m27/33 <<<<<<<<<[->>>>>>+<<<<<<]
            drive left! choo choo
            >>>>>[
                m31/30 <[-<+>]
                m32/31 >[-<+>]
                m33/32 >[-<+>]
                m29/33 <<<<[->>>>+<<<<]
                l1 <
                >>>-
                <+
            >]
            <<<[-]
            m33/29 >>>>[-<<<<+>>>>]
            <<[
                m34/30 >>>[-<<<<+>>>>]
                
                m31/32 <<<[->+<]
                r1 >
                -
            ]
            br label %5
            <<<<<<<<<<<<<<<<<<<<<<<<<+
        <]
        >[
            -
            %6 = load i32* %2_ align 4
            op_to_reg storing pointer value in temp address
            >>>>>>>>>>>>>>>>>>>>>#tmp_allocptr_%2
            >#tmp_allocptr_tru_%2
            l1 <
            d0/28/29 <<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m29/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            <<+++++++++++++
            >>#train_tmp
            >#train_ret
            >#train_ptr
            
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/33/34 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m33/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m33/35 <<<<[->>+<<]
            >>>>+
            <<<<<<<<<<[
                -
                >>>>>>>+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<<]
            >>>>>>>>>>-
            <<#subnu_to
            [
                if pos
                m35/31 [-<<<<+>>>>]
                <<<<+++++++++++++++++++++++++++++
            >>>>]
            <[
                if neg
                <<<+++++++++++++++++++++++++++++
                >>>[
                    -
                    <<<-
                >>>]
            ]
            drive left! choo choo
            <<<[
                m30/29 <[-<+>]
                m31/30 >[-<+>]
                
                m28/31 <<<[->>>+<<<]
                l1 <
                >>>-
                <+
            >]
            get our bag
            d28/29/31 <<<[->+>>+<<<]
            m29/28 >[-<+>]
            >[
                m32/29 >>[-<<<+>>>]
                m31/32 <[->+<]
                m30/31 <[->+<]
                r1 >
                -
            ]
            m31/14 >[-<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>]
            %7 = icmp sgt i32 %6_ i32 10
            op_to_reg storing const value in temp address
            <<<<#constop_10
            ++++++++++
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m14/28 <<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>+<<<<<<<<<<<<<<]
            >>>>>>>>>>>>>>>>+
            <<<[
                -
                
                >[
                    -
                    
                    r1 >
                ]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <]
            >>>-
            <<[
                [-]
                <<<<<<<<<<<<<+
            >>>>>>>>>>>>>]
            br i1 %7_ label %8_ label %13
            <<<<<<<<<<<<<<<<<<<<<<<<+
            >>>>>>>>>>>[
                -
                <<<<<<<<<<<-
                >>>+
                #B:printi/8_true
            >>>>>>>>]
            <<<<<<<<<<<[
                -
                >>>>+
                #B:printi/13_false
            <<<<]
        >>]
        >[
            -
            %9 = load i32* %2_ align 4
            op_to_reg storing pointer value in temp address
            >>>>>>>>>>>>>>>>>>>>#tmp_allocptr_%2
            >#tmp_allocptr_tru_%2
            l1 <
            d0/28/29 <<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m29/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            <<+++++++++++++
            >>#train_tmp
            >#train_ret
            >#train_ptr
            
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/33/34 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m33/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m33/35 <<<<[->>+<<]
            >>>>+
            <<<<<<<<<<[
                -
                >>>>>>>+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<<]
            >>>>>>>>>>-
            <<#subnu_to
            [
                if pos
                m35/31 [-<<<<+>>>>]
                <<<<+++++++++++++++++++++++++++++
            >>>>]
            <[
                if neg
                <<<+++++++++++++++++++++++++++++
                >>>[
                    -
                    <<<-
                >>>]
            ]
            drive left! choo choo
            <<<[
                m30/29 <[-<+>]
                m31/30 >[-<+>]
                
                m28/31 <<<[->>>+<<<]
                l1 <
                >>>-
                <+
            >]
            get our bag
            d28/29/31 <<<[->+>>+<<<]
            m29/28 >[-<+>]
            >[
                m32/29 >>[-<<<+>>>]
                m31/32 <[->+<]
                m30/31 <[->+<]
                r1 >
                -
            ]
            m31/16 >[-<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>]
            %10 = sub i32 %9_ i32 10
            op_to_reg storing const value in temp address
            <<<<#constop_10
            ++++++++++
            m16/17 <<<<<<<<<<<[->+<]
            >>>>>>>>>>>[
                -
                <<<<<<<<<<-
            >>>>>>>>>>]
            store i32 %10_ i32* %2_ align 4
            op_to_reg storing pointer value in temp address
            #tmp_allocptr_%2
            >#tmp_allocptr_tru_%2
            l1 <
            d0/28/29 <<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m29/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            <<+++++++++++++
            store sitch: alloca Some(12)
            store sitch: from LocalOperand { name: Number(10)_ ty: TypeRef(IntegerType { bits: 32 }) }
            >>#train_tmp
            >#train_ret
            >#train_ptr
            >#train_cargo
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/34/35 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m34/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m34/36 <<<<[->>+<<]
            >>>>+
            <<<<<<<<<<<[
                -
                >>>>>>>>+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<<<]
            >>>>>>>>>>>-
            <<#subnu_to
            [
                if pos
                m36/31 [-<<<<<+>>>>>]
                <<<<<+++++++++++++++++++++++++++++
            >>>>>]
            <[
                if neg
                <<<<+++++++++++++++++++++++++++++
                >>>>[
                    -
                    <<<<-
                >>>>]
            ]
            m17/32 <<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<]
            drive left! choo choo
            >>>>>>>>>>>>>>[
                m30/29 <[-<+>]
                m31/30 >[-<+>]
                m32/31 >[-<+>]
                m28/32 <<<<[->>>>+<<<<]
                l1 <
                >>>-
                <+
            >]
            <<<[-]
            m32/28 >>>>[-<<<<+>>>>]
            <<[
                m33/29 >>>[-<<<<+>>>>]
                
                m30/31 <<<[->+<]
                r1 >
                -
            ]
            %11 = load i32* %3_ align 4
            op_to_reg storing pointer value in temp address
            <<<#tmp_allocptr_%3
            >#tmp_allocptr_tru_%3
            l1 <
            d0/28/29 <<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m29/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            <<++++++++++++++
            >>#train_tmp
            >#train_ret
            >#train_ptr
            
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/33/34 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m33/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m33/35 <<<<[->>+<<]
            >>>>+
            <<<<<<<<<<[
                -
                >>>>>>>+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<<]
            >>>>>>>>>>-
            <<#subnu_to
            [
                if pos
                m35/31 [-<<<<+>>>>]
                <<<<+++++++++++++++++++++++++++++
            >>>>]
            <[
                if neg
                <<<+++++++++++++++++++++++++++++
                >>>[
                    -
                    <<<-
                >>>]
            ]
            drive left! choo choo
            <<<[
                m30/29 <[-<+>]
                m31/30 >[-<+>]
                
                m28/31 <<<[->>>+<<<]
                l1 <
                >>>-
                <+
            >]
            get our bag
            d28/29/31 <<<[->+>>+<<<]
            m29/28 >[-<+>]
            >[
                m32/29 >>[-<<<+>>>]
                m31/32 <[->+<]
                m30/31 <[->+<]
                r1 >
                -
            ]
            m31/18 >[-<<<<<<<<<<<<<+>>>>>>>>>>>>>]
            %12 = add i32 %11_ i32 1
            op_to_reg storing const value in temp address
            <<<<#constop_1
            +
            m18/19 <<<<<<<<<[->+<]
            >>>>>>>>>[
                -
                <<<<<<<<+
            >>>>>>>>]
            store i32 %12_ i32* %3_ align 4
            op_to_reg storing pointer value in temp address
            #tmp_allocptr_%3
            >#tmp_allocptr_tru_%3
            l1 <
            d0/28/29 <<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m29/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            <<++++++++++++++
            store sitch: alloca Some(13)
            store sitch: from LocalOperand { name: Number(12)_ ty: TypeRef(IntegerType { bits: 32 }) }
            >>#train_tmp
            >#train_ret
            >#train_ptr
            >#train_cargo
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/34/35 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m34/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m34/36 <<<<[->>+<<]
            >>>>+
            <<<<<<<<<<<[
                -
                >>>>>>>>+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<<<]
            >>>>>>>>>>>-
            <<#subnu_to
            [
                if pos
                m36/31 [-<<<<<+>>>>>]
                <<<<<+++++++++++++++++++++++++++++
            >>>>>]
            <[
                if neg
                <<<<+++++++++++++++++++++++++++++
                >>>>[
                    -
                    <<<<-
                >>>>]
            ]
            m19/32 <<<<<<<<<<<<<<<<[->>>>>>>>>>>>>+<<<<<<<<<<<<<]
            drive left! choo choo
            >>>>>>>>>>>>[
                m30/29 <[-<+>]
                m31/30 >[-<+>]
                m32/31 >[-<+>]
                m28/32 <<<<[->>>>+<<<<]
                l1 <
                >>>-
                <+
            >]
            <<<[-]
            m32/28 >>>>[-<<<<+>>>>]
            <<[
                m33/29 >>>[-<<<<+>>>>]
                
                m30/31 <<<[->+<]
                r1 >
                -
            ]
            br label %5
            <<<<<<<<<<<<<<<<<<<<<<<<+
        >]
        >[
            -
            %14 = load i32* %2_ align 4
            op_to_reg storing pointer value in temp address
            >>>>>>>>>>>>>>>>>>>#tmp_allocptr_%2
            >#tmp_allocptr_tru_%2
            l1 <
            d0/28/29 <<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m29/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            <<+++++++++++++
            >>#train_tmp
            >#train_ret
            >#train_ptr
            
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/33/34 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m33/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m33/35 <<<<[->>+<<]
            >>>>+
            <<<<<<<<<<[
                -
                >>>>>>>+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<<]
            >>>>>>>>>>-
            <<#subnu_to
            [
                if pos
                m35/31 [-<<<<+>>>>]
                <<<<+++++++++++++++++++++++++++++
            >>>>]
            <[
                if neg
                <<<+++++++++++++++++++++++++++++
                >>>[
                    -
                    <<<-
                >>>]
            ]
            drive left! choo choo
            <<<[
                m30/29 <[-<+>]
                m31/30 >[-<+>]
                
                m28/31 <<<[->>>+<<<]
                l1 <
                >>>-
                <+
            >]
            get our bag
            d28/29/31 <<<[->+>>+<<<]
            m29/28 >[-<+>]
            >[
                m32/29 >>[-<<<+>>>]
                m31/32 <[->+<]
                m30/31 <[->+<]
                r1 >
                -
            ]
            m31/20 >[-<<<<<<<<<<<+>>>>>>>>>>>]
            %15 = add i32 48_ i32 %14
            op_to_reg storing const value in temp address
            <<<<#constop_48
            ++++++++++++++++++++++++++++++++++++++++++++++++
            m27/21 [-<<<<<<+>>>>>>]
            <<<<<<<[
                -
                >+
            <]
            %16 = trunc i32 %15 to i8
            m21/22 >[->+<]
            call @putchar(i8 %16)
            enable next block when we return
            <<<<<<<<<<<<#caller/%call_term_for_4
            +
            putchar intrinsic
            >>>>>>>>>>>>>.
            [-]
        <<<<<<<<<<<<<<]
        >[
            -
            %17 = load i32* %3_ align 4
            op_to_reg storing pointer value in temp address
            >>>>>>>>>>>>>>>>>>#tmp_allocptr_%3
            >#tmp_allocptr_tru_%3
            l1 <
            d0/28/29 <<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m29/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            <<++++++++++++++
            >>#train_tmp
            >#train_ret
            >#train_ptr
            
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/33/34 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m33/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m33/35 <<<<[->>+<<]
            >>>>+
            <<<<<<<<<<[
                -
                >>>>>>>+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<<]
            >>>>>>>>>>-
            <<#subnu_to
            [
                if pos
                m35/31 [-<<<<+>>>>]
                <<<<+++++++++++++++++++++++++++++
            >>>>]
            <[
                if neg
                <<<+++++++++++++++++++++++++++++
                >>>[
                    -
                    <<<-
                >>>]
            ]
            drive left! choo choo
            <<<[
                m30/29 <[-<+>]
                m31/30 >[-<+>]
                
                m28/31 <<<[->>>+<<<]
                l1 <
                >>>-
                <+
            >]
            get our bag
            d28/29/31 <<<[->+>>+<<<]
            m29/28 >[-<+>]
            >[
                m32/29 >>[-<<<+>>>]
                m31/32 <[->+<]
                m30/31 <[->+<]
                r1 >
                -
            ]
            m31/23 >[-<<<<<<<<+>>>>>>>>]
            store i32 %17_ i32* %2_ align 4
            op_to_reg storing pointer value in temp address
            <<<<#tmp_allocptr_%2
            >#tmp_allocptr_tru_%2
            l1 <
            d0/28/29 <<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m29/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            <<+++++++++++++
            store sitch: alloca Some(12)
            store sitch: from LocalOperand { name: Number(17)_ ty: TypeRef(IntegerType { bits: 32 }) }
            >>#train_tmp
            >#train_ret
            >#train_ptr
            >#train_cargo
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/34/35 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m34/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m34/36 <<<<[->>+<<]
            >>>>+
            <<<<<<<<<<<[
                -
                >>>>>>>>+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<<<]
            >>>>>>>>>>>-
            <<#subnu_to
            [
                if pos
                m36/31 [-<<<<<+>>>>>]
                <<<<<+++++++++++++++++++++++++++++
            >>>>>]
            <[
                if neg
                <<<<+++++++++++++++++++++++++++++
                >>>>[
                    -
                    <<<<-
                >>>>]
            ]
            m23/32 <<<<<<<<<<<<[->>>>>>>>>+<<<<<<<<<]
            drive left! choo choo
            >>>>>>>>[
                m30/29 <[-<+>]
                m31/30 >[-<+>]
                m32/31 >[-<+>]
                m28/32 <<<<[->>>>+<<<<]
                l1 <
                >>>-
                <+
            >]
            <<<[-]
            m32/28 >>>>[-<<<<+>>>>]
            <<[
                m33/29 >>>[-<<<<+>>>>]
                
                m30/31 <<<[->+<]
                r1 >
                -
            ]
            br label %18
            <<<<<<<<<<<<<<<<<<<<+
        <]
        >[
            -
            %19 = load i32* %3_ align 4
            op_to_reg storing pointer value in temp address
            >>>>>>>>>>>>>>>>>#tmp_allocptr_%3
            >#tmp_allocptr_tru_%3
            l1 <
            d0/28/29 <<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m29/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            <<++++++++++++++
            >>#train_tmp
            >#train_ret
            >#train_ptr
            
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/33/34 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m33/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m33/35 <<<<[->>+<<]
            >>>>+
            <<<<<<<<<<[
                -
                >>>>>>>+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<<]
            >>>>>>>>>>-
            <<#subnu_to
            [
                if pos
                m35/31 [-<<<<+>>>>]
                <<<<+++++++++++++++++++++++++++++
            >>>>]
            <[
                if neg
                <<<+++++++++++++++++++++++++++++
                >>>[
                    -
                    <<<-
                >>>]
            ]
            drive left! choo choo
            <<<[
                m30/29 <[-<+>]
                m31/30 >[-<+>]
                
                m28/31 <<<[->>>+<<<]
                l1 <
                >>>-
                <+
            >]
            get our bag
            d28/29/31 <<<[->+>>+<<<]
            m29/28 >[-<+>]
            >[
                m32/29 >>[-<<<+>>>]
                m31/32 <[->+<]
                m30/31 <[->+<]
                r1 >
                -
            ]
            m31/24 >[-<<<<<<<+>>>>>>>]
            %20 = icmp ne i32 %19_ i32 0
            op_to_reg storing const value in temp address
            <<<<#constop_0
            
            >>#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m24/29 <<<<<<<[->>>>>+<<<<<]
            >>>>>>>+
            <<<<[
                -
                >+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<]
            >>>>-
            <<[
                [-]
                <<<<+
            >>>>]
            <[
                [-]
                <<<+
            >>>]
            br i1 %20_ label %4_ label %21
            <<<<<<<<<<<<<<<<<<<<<<<<+
            >>>>>>>>>>>>>>>>>>>>>[
                -
                <<<<<<<<<<<<<<<<<<<<<-
                >+
                #B:printi/4_true
            >>>>>>>>>>>>>>>>>>>>]
            <<<<<<<<<<<<<<<<<<<<<[
                -
                >>>>>>>+
                #B:printi/21_false
            <<<<<<<]
        >>>>>>]
        >[
            -
            ret void
            zero all function allocs
            >[-]
            >[-]
            <<<<<<<<<<<<<-
            #dead_frame
            >-
            l1 <
            <[-]
            r1 >
            l7 <<<<<<<
        >>>>>>>>>>>]
    <<<<<<<<<<]
    >#main
    [
        >>#main/RET_LANDING_PAD
        [
            <<<<-
            #dead_frame
            >>-
            <<#dead_fn_pad/main
            >>>>-
            l57 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
        ]
        <<<<#mainloop_main
        >#F:printi
        >#F:main
        >#B:%0
        >#B:%ret_lading_pad
        >#B:%7
        >#B:%12
        >#B:%call_term_for_2
        >#B:%20
        >#B:%call_term_for_4
        >#B:%21
        >#B:%30
        >#B:%33
        >#alloc_%1
        >#alloc_%2
        >#alloc_%3
        >#alloc_%4
        >#alloc_%5
        >#alloc_%6
        >#%8_F
        >#%9_F
        >#%10_F
        >#%11_F
        >#%13_F
        >#%14_F
        >#%15_F
        >#%16_F
        >#%17_F
        >#%18_F
        >#%19_F
        >#%22_F
        >#%23_F
        >#%24_F
        >#%25_F
        >#%26_F
        >#%27_F
        >#%28_F
        >#%29_F
        >#%31_F
        >#%32_F
        >#%34_F
        <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[
            -
            copy up args
            %1 = alloca i32_ align 4
            %2 = alloca i8_ align 1
            %3 = alloca i8_ align 1
            %4 = alloca i32_ align 4
            %5 = alloca i8_ align 1
            %6 = alloca i8_ align 1
            store i32 0_ i32* %1_ align 4
            op_to_reg storing const value in temp address
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#constop_0
            
            op_to_reg storing pointer value in temp address
            >#tmp_allocptr_%1
            >#tmp_allocptr_tru_%1
            l1 <
            d0/43/44 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m44/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            <<++++++++++++++
            store sitch: alloca Some(13)
            store sitch: from ConstantOperand(ConstantRef(Int { bits: 32_ value: 0 }))
            >>#train_tmp
            >#train_ret
            >#train_ptr
            >#train_cargo
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/49/50 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m49/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m49/51 <<<<[->>+<<]
            >>>>+
            <<<<<<<<<<<[
                -
                >>>>>>>>+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<<<]
            >>>>>>>>>>>-
            <<#subnu_to
            [
                if pos
                m51/46 [-<<<<<+>>>>>]
                <<<<<++++++++++++++++++++++++++++++++++++++++++++
            >>>>>]
            <[
                if neg
                <<<<++++++++++++++++++++++++++++++++++++++++++++
                >>>>[
                    -
                    <<<<-
                >>>>]
            ]
            m41/47 <<<<<<<<<[->>>>>>+<<<<<<]
            drive left! choo choo
            >>>>>[
                m45/44 <[-<+>]
                m46/45 >[-<+>]
                m47/46 >[-<+>]
                m43/47 <<<<[->>>>+<<<<]
                l1 <
                >>>-
                <+
            >]
            <<<[-]
            m47/43 >>>>[-<<<<+>>>>]
            <<[
                m48/44 >>>[-<<<<+>>>>]
                
                m45/46 <<<[->+<]
                r1 >
                -
            ]
            store i8 1_ i8* %2_ align 1
            op_to_reg storing const value in temp address
            <<<<#constop_1
            +
            op_to_reg storing pointer value in temp address
            >#tmp_allocptr_%2
            >#tmp_allocptr_tru_%2
            l1 <
            d0/43/44 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m44/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            <<+++++++++++++++
            store sitch: alloca Some(14)
            store sitch: from ConstantOperand(ConstantRef(Int { bits: 8_ value: 1 }))
            >>#train_tmp
            >#train_ret
            >#train_ptr
            >#train_cargo
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/49/50 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m49/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >>>>#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m49/54 <<<<<<<[->>>>>+<<<<<]
            >>>>>>>+
            <<<<<<<<<<<<<<[
                -
                >>>>>>>>+
                >>>>[
                    -
                    <<<<-
                    r1 >
                >>>>]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<<<<<<]
            >>>>>>>>>>>>>>-
            <<#subnu_to
            [
                if pos
                m54/46 [-<<<<<<<<+>>>>>>>>]
                <<<<<<<<++++++++++++++++++++++++++++++++++++++++++++
            >>>>>>>>]
            <<<<[
                if neg
                <<<<++++++++++++++++++++++++++++++++++++++++++++
                >>>>[
                    -
                    <<<<-
                >>>>]
            ]
            m41/47 <<<<<<<<<[->>>>>>+<<<<<<]
            drive left! choo choo
            >>>>>[
                m45/44 <[-<+>]
                m46/45 >[-<+>]
                m47/46 >[-<+>]
                m43/47 <<<<[->>>>+<<<<]
                l1 <
                >>>-
                <+
            >]
            <<<[-]
            m47/43 >>>>[-<<<<+>>>>]
            <<[
                m48/44 >>>[-<<<<+>>>>]
                
                m45/46 <<<[->+<]
                r1 >
                -
            ]
            store i8 0_ i8* %3_ align 1
            op_to_reg storing const value in temp address
            <<<<#constop_0
            
            op_to_reg storing pointer value in temp address
            >#tmp_allocptr_%3
            >#tmp_allocptr_tru_%3
            l1 <
            d0/43/44 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m44/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            <<++++++++++++++++
            store sitch: alloca Some(15)
            store sitch: from ConstantOperand(ConstantRef(Int { bits: 8_ value: 0 }))
            >>#train_tmp
            >#train_ret
            >#train_ptr
            >#train_cargo
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/49/50 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m49/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m49/51 <<<<[->>+<<]
            >>>>+
            <<<<<<<<<<<[
                -
                >>>>>>>>+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<<<]
            >>>>>>>>>>>-
            <<#subnu_to
            [
                if pos
                m51/46 [-<<<<<+>>>>>]
                <<<<<++++++++++++++++++++++++++++++++++++++++++++
            >>>>>]
            <[
                if neg
                <<<<++++++++++++++++++++++++++++++++++++++++++++
                >>>>[
                    -
                    <<<<-
                >>>>]
            ]
            m41/47 <<<<<<<<<[->>>>>>+<<<<<<]
            drive left! choo choo
            >>>>>[
                m45/44 <[-<+>]
                m46/45 >[-<+>]
                m47/46 >[-<+>]
                m43/47 <<<<[->>>>+<<<<]
                l1 <
                >>>-
                <+
            >]
            <<<[-]
            m47/43 >>>>[-<<<<+>>>>]
            <<[
                m48/44 >>>[-<<<<+>>>>]
                
                m45/46 <<<[->+<]
                r1 >
                -
            ]
            store i32 10_ i32* %4_ align 4
            op_to_reg storing const value in temp address
            <<<<#constop_10
            ++++++++++
            op_to_reg storing pointer value in temp address
            >#tmp_allocptr_%4
            >#tmp_allocptr_tru_%4
            l1 <
            d0/43/44 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m44/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            <<+++++++++++++++++
            store sitch: alloca Some(16)
            store sitch: from ConstantOperand(ConstantRef(Int { bits: 32_ value: 10 }))
            >>#train_tmp
            >#train_ret
            >#train_ptr
            >#train_cargo
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/49/50 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m49/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m49/51 <<<<[->>+<<]
            >>>>+
            <<<<<<<<<<<[
                -
                >>>>>>>>+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<<<]
            >>>>>>>>>>>-
            <<#subnu_to
            [
                if pos
                m51/46 [-<<<<<+>>>>>]
                <<<<<++++++++++++++++++++++++++++++++++++++++++++
            >>>>>]
            <[
                if neg
                <<<<++++++++++++++++++++++++++++++++++++++++++++
                >>>>[
                    -
                    <<<<-
                >>>>]
            ]
            m41/47 <<<<<<<<<[->>>>>>+<<<<<<]
            drive left! choo choo
            >>>>>[
                m45/44 <[-<+>]
                m46/45 >[-<+>]
                m47/46 >[-<+>]
                m43/47 <<<<[->>>>+<<<<]
                l1 <
                >>>-
                <+
            >]
            <<<[-]
            m47/43 >>>>[-<<<<+>>>>]
            <<[
                m48/44 >>>[-<<<<+>>>>]
                
                m45/46 <<<[->+<]
                r1 >
                -
            ]
            store i8 0_ i8* %5_ align 1
            op_to_reg storing const value in temp address
            <<<<#constop_0
            
            op_to_reg storing pointer value in temp address
            >#tmp_allocptr_%5
            >#tmp_allocptr_tru_%5
            l1 <
            d0/43/44 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m44/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            <<++++++++++++++++++
            store sitch: alloca Some(17)
            store sitch: from ConstantOperand(ConstantRef(Int { bits: 8_ value: 0 }))
            >>#train_tmp
            >#train_ret
            >#train_ptr
            >#train_cargo
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/49/50 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m49/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m49/51 <<<<[->>+<<]
            >>>>+
            <<<<<<<<<<<[
                -
                >>>>>>>>+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<<<]
            >>>>>>>>>>>-
            <<#subnu_to
            [
                if pos
                m51/46 [-<<<<<+>>>>>]
                <<<<<++++++++++++++++++++++++++++++++++++++++++++
            >>>>>]
            <[
                if neg
                <<<<++++++++++++++++++++++++++++++++++++++++++++
                >>>>[
                    -
                    <<<<-
                >>>>]
            ]
            m41/47 <<<<<<<<<[->>>>>>+<<<<<<]
            drive left! choo choo
            >>>>>[
                m45/44 <[-<+>]
                m46/45 >[-<+>]
                m47/46 >[-<+>]
                m43/47 <<<<[->>>>+<<<<]
                l1 <
                >>>-
                <+
            >]
            <<<[-]
            m47/43 >>>>[-<<<<+>>>>]
            <<[
                m48/44 >>>[-<<<<+>>>>]
                
                m45/46 <<<[->+<]
                r1 >
                -
            ]
            br label %7
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+
        <<]
        >>[
            -
            %8 = load i8* %5_ align 1
            op_to_reg storing pointer value in temp address
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#tmp_allocptr_%5
            >#tmp_allocptr_tru_%5
            l1 <
            d0/42/43 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m43/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            <<++++++++++++++++++
            >>#train_tmp
            >#train_ret
            >#train_ptr
            
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/47/48 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m47/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m47/49 <<<<[->>+<<]
            >>>>+
            <<<<<<<<<<[
                -
                >>>>>>>+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<<]
            >>>>>>>>>>-
            <<#subnu_to
            [
                if pos
                m49/45 [-<<<<+>>>>]
                <<<<+++++++++++++++++++++++++++++++++++++++++++
            >>>>]
            <[
                if neg
                <<<+++++++++++++++++++++++++++++++++++++++++++
                >>>[
                    -
                    <<<-
                >>>]
            ]
            drive left! choo choo
            <<<[
                m44/43 <[-<+>]
                m45/44 >[-<+>]
                
                m42/45 <<<[->>>+<<<]
                l1 <
                >>>-
                <+
            >]
            get our bag
            d42/43/45 <<<[->+>>+<<<]
            m43/42 >[-<+>]
            >[
                m46/43 >>[-<<<+>>>]
                m45/46 <[->+<]
                m44/45 <[->+<]
                r1 >
                -
            ]
            m45/19 >[-<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>]
            %9 = zext i8 %8 to i32
            m19/20 <<<<<<<<<<<<<<<<<<<<<<<<<<[->+<]
            %10 = load i32* %4_ align 4
            op_to_reg storing pointer value in temp address
            >>>>>>>>>>>>>>>>>>>>>>#tmp_allocptr_%4
            >#tmp_allocptr_tru_%4
            l1 <
            d0/42/43 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m43/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            <<+++++++++++++++++
            >>#train_tmp
            >#train_ret
            >#train_ptr
            
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/47/48 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m47/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m47/49 <<<<[->>+<<]
            >>>>+
            <<<<<<<<<<[
                -
                >>>>>>>+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<<]
            >>>>>>>>>>-
            <<#subnu_to
            [
                if pos
                m49/45 [-<<<<+>>>>]
                <<<<+++++++++++++++++++++++++++++++++++++++++++
            >>>>]
            <[
                if neg
                <<<+++++++++++++++++++++++++++++++++++++++++++
                >>>[
                    -
                    <<<-
                >>>]
            ]
            drive left! choo choo
            <<<[
                m44/43 <[-<+>]
                m45/44 >[-<+>]
                
                m42/45 <<<[->>>+<<<]
                l1 <
                >>>-
                <+
            >]
            get our bag
            d42/43/45 <<<[->+>>+<<<]
            m43/42 >[-<+>]
            >[
                m46/43 >>[-<<<+>>>]
                m45/46 <[->+<]
                m44/45 <[->+<]
                r1 >
                -
            ]
            m45/21 >[-<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>]
            %11 = icmp slt i32 %9_ i32 %10
            <<<<#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m21/41 <<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<]
            >>>>>>>>>>>>>>>>>>>>>>+
            <<<<<<<<<<<<<<<<<<<<<<<[
                -
                
                >>>>>>>>>>>>>>>>>>>>>[
                    -
                    
                    r1 >
                ]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<<<<<<<<<<<<<<<]
            >>>>>>>>>>>>>>>>>>>>>>>-
            <<[
                [-]
                <<<<<<<<<<<<<<<<<<<+
            >>>>>>>>>>>>>>>>>>>]
            br i1 %11_ label %12_ label %33
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+
            >>>>>>>>>>>>>>>>>>[
                -
                <<<<<<<<<<<<<<<<<<-
                >>+
                #B:main/12_true
            >>>>>>>>>>>>>>>>]
            <<<<<<<<<<<<<<<<<<[
                -
                >>>>>>>>+
                #B:main/33_false
            <<<<<<<<]
        >]
        >[
            -
            %13 = load i8* %2_ align 1
            op_to_reg storing pointer value in temp address
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#tmp_allocptr_%2
            >#tmp_allocptr_tru_%2
            l1 <
            d0/42/43 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m43/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            <<+++++++++++++++
            >>#train_tmp
            >#train_ret
            >#train_ptr
            
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/47/48 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m47/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m47/49 <<<<[->>+<<]
            >>>>+
            <<<<<<<<<<[
                -
                >>>>>>>+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<<]
            >>>>>>>>>>-
            <<#subnu_to
            [
                if pos
                m49/45 [-<<<<+>>>>]
                <<<<+++++++++++++++++++++++++++++++++++++++++++
            >>>>]
            <[
                if neg
                <<<+++++++++++++++++++++++++++++++++++++++++++
                >>>[
                    -
                    <<<-
                >>>]
            ]
            drive left! choo choo
            <<<[
                m44/43 <[-<+>]
                m45/44 >[-<+>]
                
                m42/45 <<<[->>>+<<<]
                l1 <
                >>>-
                <+
            >]
            get our bag
            d42/43/45 <<<[->+>>+<<<]
            m43/42 >[-<+>]
            >[
                m46/43 >>[-<<<+>>>]
                m45/46 <[->+<]
                m44/45 <[->+<]
                r1 >
                -
            ]
            m45/23 >[-<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>]
            %14 = zext i8 %13 to i32
            m23/24 <<<<<<<<<<<<<<<<<<<<<<[->+<]
            call @printi(i32 %14)
            enable next block when we return
            <<<<<<<<<<<<<<<<#caller/%call_term_for_2
            +
            stack_width 57
            ret_pad_width 4
            copy up arg 0
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#arg_0
            m24/62 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            give callee a stack pointer
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#stack_ptr
            ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            l1 <
            d0/64/65 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m65/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            r57 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<#JUMP_PAD
            +
            >>#caller
            +
            >>#caller/jump_pad_blk
            +
            r7 >>>>>>>
            <<<<#===FRAME_printi
            +
            >#printi
            +
            >>#printi/b0
            +
        >>>]
        >[
            -
            %15 = load i8* %5_ align 1
            op_to_reg storing pointer value in temp address
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#tmp_allocptr_%5
            >#tmp_allocptr_tru_%5
            l1 <
            d0/42/43 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m43/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            <<++++++++++++++++++
            >>#train_tmp
            >#train_ret
            >#train_ptr
            
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/47/48 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m47/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m47/49 <<<<[->>+<<]
            >>>>+
            <<<<<<<<<<[
                -
                >>>>>>>+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<<]
            >>>>>>>>>>-
            <<#subnu_to
            [
                if pos
                m49/45 [-<<<<+>>>>]
                <<<<+++++++++++++++++++++++++++++++++++++++++++
            >>>>]
            <[
                if neg
                <<<+++++++++++++++++++++++++++++++++++++++++++
                >>>[
                    -
                    <<<-
                >>>]
            ]
            drive left! choo choo
            <<<[
                m44/43 <[-<+>]
                m45/44 >[-<+>]
                
                m42/45 <<<[->>>+<<<]
                l1 <
                >>>-
                <+
            >]
            get our bag
            d42/43/45 <<<[->+>>+<<<]
            m43/42 >[-<+>]
            >[
                m46/43 >>[-<<<+>>>]
                m45/46 <[->+<]
                m44/45 <[->+<]
                r1 >
                -
            ]
            m45/25 >[-<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>]
            %16 = zext i8 %15 to i32
            m25/26 <<<<<<<<<<<<<<<<<<<<[->+<]
            %17 = load i32* %4_ align 4
            op_to_reg storing pointer value in temp address
            >>>>>>>>>>>>>>>>#tmp_allocptr_%4
            >#tmp_allocptr_tru_%4
            l1 <
            d0/42/43 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m43/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            <<+++++++++++++++++
            >>#train_tmp
            >#train_ret
            >#train_ptr
            
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/47/48 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m47/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m47/49 <<<<[->>+<<]
            >>>>+
            <<<<<<<<<<[
                -
                >>>>>>>+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<<]
            >>>>>>>>>>-
            <<#subnu_to
            [
                if pos
                m49/45 [-<<<<+>>>>]
                <<<<+++++++++++++++++++++++++++++++++++++++++++
            >>>>]
            <[
                if neg
                <<<+++++++++++++++++++++++++++++++++++++++++++
                >>>[
                    -
                    <<<-
                >>>]
            ]
            drive left! choo choo
            <<<[
                m44/43 <[-<+>]
                m45/44 >[-<+>]
                
                m42/45 <<<[->>>+<<<]
                l1 <
                >>>-
                <+
            >]
            get our bag
            d42/43/45 <<<[->+>>+<<<]
            m43/42 >[-<+>]
            >[
                m46/43 >>[-<<<+>>>]
                m45/46 <[->+<]
                m44/45 <[->+<]
                r1 >
                -
            ]
            m45/27 >[-<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>]
            %18 = sub i32 %17_ i32 1
            op_to_reg storing const value in temp address
            <<<<#constop_1
            +
            m27/28 <<<<<<<<<<<<<<[->+<]
            >>>>>>>>>>>>>>[
                -
                <<<<<<<<<<<<<-
            >>>>>>>>>>>>>]
            %19 = icmp slt i32 %16_ i32 %18
            #subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m28/41 <<<<<<<<<<<<<<<[->>>>>>>>>>>>>+<<<<<<<<<<<<<]
            >>>>>>>>>>>>>>>+
            <<<<<<<<<<<<<<<<<[
                -
                
                >>>>>>>>>>>>>>>[
                    -
                    
                    r1 >
                ]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<<<<<<<<<]
            >>>>>>>>>>>>>>>>>-
            <<[
                [-]
                <<<<<<<<<<<<+
            >>>>>>>>>>>>]
            br i1 %19_ label %20_ label %21
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+
            >>>>>>>>>>>>>>>>>>>>>>>>>[
                -
                <<<<<<<<<<<<<<<<<<<<<<<<<-
                >>>>+
                #B:main/20_true
            >>>>>>>>>>>>>>>>>>>>>]
            <<<<<<<<<<<<<<<<<<<<<<<<<[
                -
                >>>>>>+
                #B:main/21_false
            <<<<<<]
        >>>]
        >[
            -
            call @putchar(i8 32)
            op_to_reg storing const value in temp address
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#constop_32
            ++++++++++++++++++++++++++++++++
            enable next block when we return
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<#caller/%call_term_for_4
            +
            putchar intrinsic
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>.
            [-]
        <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
        >[
            -
            br label %21
            >+
        <]
        >[
            -
            %22 = load i8* %3_ align 1
            op_to_reg storing pointer value in temp address
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#tmp_allocptr_%3
            >#tmp_allocptr_tru_%3
            l1 <
            d0/42/43 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m43/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            <<++++++++++++++++
            >>#train_tmp
            >#train_ret
            >#train_ptr
            
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/47/48 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m47/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m47/49 <<<<[->>+<<]
            >>>>+
            <<<<<<<<<<[
                -
                >>>>>>>+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<<]
            >>>>>>>>>>-
            <<#subnu_to
            [
                if pos
                m49/45 [-<<<<+>>>>]
                <<<<+++++++++++++++++++++++++++++++++++++++++++
            >>>>]
            <[
                if neg
                <<<+++++++++++++++++++++++++++++++++++++++++++
                >>>[
                    -
                    <<<-
                >>>]
            ]
            drive left! choo choo
            <<<[
                m44/43 <[-<+>]
                m45/44 >[-<+>]
                
                m42/45 <<<[->>>+<<<]
                l1 <
                >>>-
                <+
            >]
            get our bag
            d42/43/45 <<<[->+>>+<<<]
            m43/42 >[-<+>]
            >[
                m46/43 >>[-<<<+>>>]
                m45/46 <[->+<]
                m44/45 <[->+<]
                r1 >
                -
            ]
            m45/30 >[-<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>]
            store i8 %22_ i8* %6_ align 1
            op_to_reg storing pointer value in temp address
            <<<<#tmp_allocptr_%6
            >#tmp_allocptr_tru_%6
            l1 <
            d0/42/43 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m43/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            <<+++++++++++++++++++
            store sitch: alloca Some(18)
            store sitch: from LocalOperand { name: Number(22)_ ty: TypeRef(IntegerType { bits: 8 }) }
            >>#train_tmp
            >#train_ret
            >#train_ptr
            >#train_cargo
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/48/49 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m48/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m48/50 <<<<[->>+<<]
            >>>>+
            <<<<<<<<<<<[
                -
                >>>>>>>>+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<<<]
            >>>>>>>>>>>-
            <<#subnu_to
            [
                if pos
                m50/45 [-<<<<<+>>>>>]
                <<<<<+++++++++++++++++++++++++++++++++++++++++++
            >>>>>]
            <[
                if neg
                <<<<+++++++++++++++++++++++++++++++++++++++++++
                >>>>[
                    -
                    <<<<-
                >>>>]
            ]
            m30/46 <<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<]
            drive left! choo choo
            >>>>>>>>>>>>>>>[
                m44/43 <[-<+>]
                m45/44 >[-<+>]
                m46/45 >[-<+>]
                m42/46 <<<<[->>>>+<<<<]
                l1 <
                >>>-
                <+
            >]
            <<<[-]
            m46/42 >>>>[-<<<<+>>>>]
            <<[
                m47/43 >>>[-<<<<+>>>>]
                
                m44/45 <<<[->+<]
                r1 >
                -
            ]
            %23 = load i8* %2_ align 1
            op_to_reg storing pointer value in temp address
            <<<#tmp_allocptr_%2
            >#tmp_allocptr_tru_%2
            l1 <
            d0/42/43 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m43/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            <<+++++++++++++++
            >>#train_tmp
            >#train_ret
            >#train_ptr
            
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/47/48 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m47/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m47/49 <<<<[->>+<<]
            >>>>+
            <<<<<<<<<<[
                -
                >>>>>>>+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<<]
            >>>>>>>>>>-
            <<#subnu_to
            [
                if pos
                m49/45 [-<<<<+>>>>]
                <<<<+++++++++++++++++++++++++++++++++++++++++++
            >>>>]
            <[
                if neg
                <<<+++++++++++++++++++++++++++++++++++++++++++
                >>>[
                    -
                    <<<-
                >>>]
            ]
            drive left! choo choo
            <<<[
                m44/43 <[-<+>]
                m45/44 >[-<+>]
                
                m42/45 <<<[->>>+<<<]
                l1 <
                >>>-
                <+
            >]
            get our bag
            d42/43/45 <<<[->+>>+<<<]
            m43/42 >[-<+>]
            >[
                m46/43 >>[-<<<+>>>]
                m45/46 <[->+<]
                m44/45 <[->+<]
                r1 >
                -
            ]
            m45/31 >[-<<<<<<<<<<<<<<+>>>>>>>>>>>>>>]
            store i8 %23_ i8* %3_ align 1
            op_to_reg storing pointer value in temp address
            <<<<#tmp_allocptr_%3
            >#tmp_allocptr_tru_%3
            l1 <
            d0/42/43 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m43/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            <<++++++++++++++++
            store sitch: alloca Some(15)
            store sitch: from LocalOperand { name: Number(23)_ ty: TypeRef(IntegerType { bits: 8 }) }
            >>#train_tmp
            >#train_ret
            >#train_ptr
            >#train_cargo
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/48/49 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m48/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m48/50 <<<<[->>+<<]
            >>>>+
            <<<<<<<<<<<[
                -
                >>>>>>>>+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<<<]
            >>>>>>>>>>>-
            <<#subnu_to
            [
                if pos
                m50/45 [-<<<<<+>>>>>]
                <<<<<+++++++++++++++++++++++++++++++++++++++++++
            >>>>>]
            <[
                if neg
                <<<<+++++++++++++++++++++++++++++++++++++++++++
                >>>>[
                    -
                    <<<<-
                >>>>]
            ]
            m31/46 <<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<]
            drive left! choo choo
            >>>>>>>>>>>>>>[
                m44/43 <[-<+>]
                m45/44 >[-<+>]
                m46/45 >[-<+>]
                m42/46 <<<<[->>>>+<<<<]
                l1 <
                >>>-
                <+
            >]
            <<<[-]
            m46/42 >>>>[-<<<<+>>>>]
            <<[
                m47/43 >>>[-<<<<+>>>>]
                
                m44/45 <<<[->+<]
                r1 >
                -
            ]
            %24 = load i8* %6_ align 1
            op_to_reg storing pointer value in temp address
            <<<#tmp_allocptr_%6
            >#tmp_allocptr_tru_%6
            l1 <
            d0/42/43 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m43/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            <<+++++++++++++++++++
            >>#train_tmp
            >#train_ret
            >#train_ptr
            
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/47/48 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m47/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m47/49 <<<<[->>+<<]
            >>>>+
            <<<<<<<<<<[
                -
                >>>>>>>+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<<]
            >>>>>>>>>>-
            <<#subnu_to
            [
                if pos
                m49/45 [-<<<<+>>>>]
                <<<<+++++++++++++++++++++++++++++++++++++++++++
            >>>>]
            <[
                if neg
                <<<+++++++++++++++++++++++++++++++++++++++++++
                >>>[
                    -
                    <<<-
                >>>]
            ]
            drive left! choo choo
            <<<[
                m44/43 <[-<+>]
                m45/44 >[-<+>]
                
                m42/45 <<<[->>>+<<<]
                l1 <
                >>>-
                <+
            >]
            get our bag
            d42/43/45 <<<[->+>>+<<<]
            m43/42 >[-<+>]
            >[
                m46/43 >>[-<<<+>>>]
                m45/46 <[->+<]
                m44/45 <[->+<]
                r1 >
                -
            ]
            m45/32 >[-<<<<<<<<<<<<<+>>>>>>>>>>>>>]
            %25 = zext i8 %24 to i32
            m32/33 <<<<<<<<<<<<<[->+<]
            %26 = load i8* %2_ align 1
            op_to_reg storing pointer value in temp address
            >>>>>>>>>#tmp_allocptr_%2
            >#tmp_allocptr_tru_%2
            l1 <
            d0/42/43 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m43/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            <<+++++++++++++++
            >>#train_tmp
            >#train_ret
            >#train_ptr
            
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/47/48 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m47/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m47/49 <<<<[->>+<<]
            >>>>+
            <<<<<<<<<<[
                -
                >>>>>>>+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<<]
            >>>>>>>>>>-
            <<#subnu_to
            [
                if pos
                m49/45 [-<<<<+>>>>]
                <<<<+++++++++++++++++++++++++++++++++++++++++++
            >>>>]
            <[
                if neg
                <<<+++++++++++++++++++++++++++++++++++++++++++
                >>>[
                    -
                    <<<-
                >>>]
            ]
            drive left! choo choo
            <<<[
                m44/43 <[-<+>]
                m45/44 >[-<+>]
                
                m42/45 <<<[->>>+<<<]
                l1 <
                >>>-
                <+
            >]
            get our bag
            d42/43/45 <<<[->+>>+<<<]
            m43/42 >[-<+>]
            >[
                m46/43 >>[-<<<+>>>]
                m45/46 <[->+<]
                m44/45 <[->+<]
                r1 >
                -
            ]
            m45/34 >[-<<<<<<<<<<<+>>>>>>>>>>>]
            %27 = zext i8 %26 to i32
            m34/35 <<<<<<<<<<<[->+<]
            %28 = add i32 %27_ i32 %25
            m35/36 >[->+<]
            <<[
                -
                >>>+
            <<<]
            %29 = trunc i32 %28 to i8
            m36/37 >>>[->+<]
            store i8 %29_ i8* %2_ align 1
            op_to_reg storing pointer value in temp address
            >>>>>#tmp_allocptr_%2
            >#tmp_allocptr_tru_%2
            l1 <
            d0/42/43 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m43/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            <<+++++++++++++++
            store sitch: alloca Some(14)
            store sitch: from LocalOperand { name: Number(29)_ ty: TypeRef(IntegerType { bits: 8 }) }
            >>#train_tmp
            >#train_ret
            >#train_ptr
            >#train_cargo
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/48/49 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m48/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m48/50 <<<<[->>+<<]
            >>>>+
            <<<<<<<<<<<[
                -
                >>>>>>>>+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<<<]
            >>>>>>>>>>>-
            <<#subnu_to
            [
                if pos
                m50/45 [-<<<<<+>>>>>]
                <<<<<+++++++++++++++++++++++++++++++++++++++++++
            >>>>>]
            <[
                if neg
                <<<<+++++++++++++++++++++++++++++++++++++++++++
                >>>>[
                    -
                    <<<<-
                >>>>]
            ]
            m37/46 <<<<<<<<<<<<[->>>>>>>>>+<<<<<<<<<]
            drive left! choo choo
            >>>>>>>>[
                m44/43 <[-<+>]
                m45/44 >[-<+>]
                m46/45 >[-<+>]
                m42/46 <<<<[->>>>+<<<<]
                l1 <
                >>>-
                <+
            >]
            <<<[-]
            m46/42 >>>>[-<<<<+>>>>]
            <<[
                m47/43 >>>[-<<<<+>>>>]
                
                m44/45 <<<[->+<]
                r1 >
                -
            ]
            br label %30
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+
        <]
        >[
            -
            %31 = load i8* %5_ align 1
            op_to_reg storing pointer value in temp address
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#tmp_allocptr_%5
            >#tmp_allocptr_tru_%5
            l1 <
            d0/42/43 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m43/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            <<++++++++++++++++++
            >>#train_tmp
            >#train_ret
            >#train_ptr
            
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/47/48 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m47/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m47/49 <<<<[->>+<<]
            >>>>+
            <<<<<<<<<<[
                -
                >>>>>>>+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<<]
            >>>>>>>>>>-
            <<#subnu_to
            [
                if pos
                m49/45 [-<<<<+>>>>]
                <<<<+++++++++++++++++++++++++++++++++++++++++++
            >>>>]
            <[
                if neg
                <<<+++++++++++++++++++++++++++++++++++++++++++
                >>>[
                    -
                    <<<-
                >>>]
            ]
            drive left! choo choo
            <<<[
                m44/43 <[-<+>]
                m45/44 >[-<+>]
                
                m42/45 <<<[->>>+<<<]
                l1 <
                >>>-
                <+
            >]
            get our bag
            d42/43/45 <<<[->+>>+<<<]
            m43/42 >[-<+>]
            >[
                m46/43 >>[-<<<+>>>]
                m45/46 <[->+<]
                m44/45 <[->+<]
                r1 >
                -
            ]
            m45/38 >[-<<<<<<<+>>>>>>>]
            %32 = add i8 %31_ i8 1
            op_to_reg storing const value in temp address
            <<<<#constop_1
            +
            m38/39 <<<[->+<]
            >>>[
                -
                <<+
            >>]
            store i8 %32_ i8* %5_ align 1
            op_to_reg storing pointer value in temp address
            #tmp_allocptr_%5
            >#tmp_allocptr_tru_%5
            l1 <
            d0/42/43 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m43/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            <<++++++++++++++++++
            store sitch: alloca Some(17)
            store sitch: from LocalOperand { name: Number(32)_ ty: TypeRef(IntegerType { bits: 8 }) }
            >>#train_tmp
            >#train_ret
            >#train_ptr
            >#train_cargo
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/48/49 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m48/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m48/50 <<<<[->>+<<]
            >>>>+
            <<<<<<<<<<<[
                -
                >>>>>>>>+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<<<]
            >>>>>>>>>>>-
            <<#subnu_to
            [
                if pos
                m50/45 [-<<<<<+>>>>>]
                <<<<<+++++++++++++++++++++++++++++++++++++++++++
            >>>>>]
            <[
                if neg
                <<<<+++++++++++++++++++++++++++++++++++++++++++
                >>>>[
                    -
                    <<<<-
                >>>>]
            ]
            m39/46 <<<<<<<<<<[->>>>>>>+<<<<<<<]
            drive left! choo choo
            >>>>>>[
                m44/43 <[-<+>]
                m45/44 >[-<+>]
                m46/45 >[-<+>]
                m42/46 <<<<[->>>>+<<<<]
                l1 <
                >>>-
                <+
            >]
            <<<[-]
            m46/42 >>>>[-<<<<+>>>>]
            <<[
                m47/43 >>>[-<<<<+>>>>]
                
                m44/45 <<<[->+<]
                r1 >
                -
            ]
            br label %7
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+
        >>>>>>]
        >[
            -
            %34 = load i32* %1_ align 4
            op_to_reg storing pointer value in temp address
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>#tmp_allocptr_%1
            >#tmp_allocptr_tru_%1
            l1 <
            d0/42/43 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m43/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            <<++++++++++++++
            >>#train_tmp
            >#train_ret
            >#train_ptr
            
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/47/48 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m47/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m47/49 <<<<[->>+<<]
            >>>>+
            <<<<<<<<<<[
                -
                >>>>>>>+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<<]
            >>>>>>>>>>-
            <<#subnu_to
            [
                if pos
                m49/45 [-<<<<+>>>>]
                <<<<+++++++++++++++++++++++++++++++++++++++++++
            >>>>]
            <[
                if neg
                <<<+++++++++++++++++++++++++++++++++++++++++++
                >>>[
                    -
                    <<<-
                >>>]
            ]
            drive left! choo choo
            <<<[
                m44/43 <[-<+>]
                m45/44 >[-<+>]
                
                m42/45 <<<[->>>+<<<]
                l1 <
                >>>-
                <+
            >]
            get our bag
            d42/43/45 <<<[->+>>+<<<]
            m43/42 >[-<+>]
            >[
                m46/43 >>[-<<<+>>>]
                m45/46 <[->+<]
                m44/45 <[->+<]
                r1 >
                -
            ]
            m45/40 >[-<<<<<+>>>>>]
            ret i32 %34
            zero all function allocs
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            <<<<<<<<<<<<<<<<<<-
            #dead_frame
            >>-
            l1 <
            <<[-]
            r1 >
            l6 <<<<<<
        >>>>>>>>>>>>]
    <<<<<<<<<<]
<<]
