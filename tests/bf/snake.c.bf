r5 >>>>>
+++++
r1 >
runtime init:
#===TOP_FRAME
+
>>#main
+
>#main/b0
+
<<<[
    >#print_game
    [
        >>>#print_game/RET_LANDING_PAD
        [
            <<<<-
            #dead_frame
            >-
            <#dead_fn_pad/print_game
            >>>>-
            l71 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
        ]
        <<<<#mainloop_print_game
        >#F:print_game
        >#F:main
        >#B:%no_b0_call_for_print_game
        >#B:%ret_lading_pad
        >#B:%0
        >#B:%call_term_for_0
        >#B:%call_term_for_1
        >#B:%5
        >#B:%8
        >#B:%call_term_for_4
        >#B:%9
        >#B:%12
        >#B:%call_term_for_7
        >#B:%call_term_for_8
        >#B:%13
        >#B:%16
        >#B:%call_term_for_11
        >#B:%17
        >#B:%20
        >#B:%call_term_for_14
        >#B:%21
        >#B:%24
        >#B:%call_term_for_17
        >#B:%call_term_for_18
        >#B:%25
        >#B:%28
        >#B:%call_term_for_21
        >#B:%29
        >#B:%32
        >#B:%call_term_for_24
        >#B:%33
        >#B:%36
        >#B:%call_term_for_27
        >#B:%call_term_for_28
        >#alloc_%1
        >#alloc_%2
        >#alloc_%3
        >#alloc_%4
        >#R:%6
        >#R:%7
        >#R:%10
        >#R:%11
        >#R:%14
        >#R:%15
        >#R:%18
        >#R:%19
        >#R:%22
        >#R:%23
        >#R:%26
        >#R:%27
        >#R:%30
        >#R:%31
        >#R:%34
        >#R:%35
        <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[
            -
            copy up args
            br label %0
            >>+
        <<]
        >>[
            -
            %1 = alloca i32_ align 4
            %2 = alloca i32_ align 4
            %3 = alloca i32_ align 4
            %4 = alloca i32_ align 4
            call @putchar(i8 10)
            op_to_reg storing const value in temp address
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#constop_10
            ++++++++++
            enable next block when we return
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<#caller/%call_term_for_0
            +
            putchar intrinsic
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>.
            [-]
        <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
        >[
            -
            call @putchar(i8 32)
            op_to_reg storing const value in temp address
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#constop_32
            ++++++++++++++++++++++++++++++++
            enable next block when we return
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<#caller/%call_term_for_1
            +
            putchar intrinsic
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>.
            [-]
        <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
        >[
            -
            store i32 0_ i32* %1_ align 4
            op_to_reg storing const value in temp address
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#constop_0
            
            op_to_reg storing pointer value in temp address
            >>#tmp_allocptr_%1
            <#tmp_allocptr_tru_%1
            l1 <
            d0/58/57 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+<+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m57/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            ++++++++++++++++++++++++++++++++++++
            store sitch: alloca Some(35)
            store sitch: from ConstantOperand(ConstantRef(Int { bits: 32_ value: 0 }))
            >#train_tmp
            >#train_ret
            >#train_ptr
            >#train_cargo
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/63/64 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m63/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m63/65 <<<<[->>+<<]
            >>>>+
            <<<<<<<<<<[
                -
                >>>>>>>+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<<]
            >>>>>>>>>>-
            <<#subnu_to
            [
                if pos
                m65/60 [-<<<<<+>>>>>]
                <<<<<++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            >>>>>]
            <[
                if neg
                <<<<++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                >>>>[
                    -
                    <<<<-
                >>>>]
            ]
            m55/61 <<<<<<<<<[->>>>>>+<<<<<<]
            drive left! choo choo
            >>>>>[
                m59/58 <[-<+>]
                m60/59 >[-<+>]
                m61/60 >[-<+>]
                m57/61 <<<<[->>>>+<<<<]
                l1 <
                >>>-
                <+
            >]
            <<<[-]
            m61/57 >>>>[-<<<<+>>>>]
            <<[
                m62/58 >>>[-<<<<+>>>>]
                
                m59/60 <<<[->+<]
                r1 >
                -
            ]
            br label %5
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+
        <]
        >[
            -
            %6 = load i32* %1_ align 4
            op_to_reg storing pointer value in temp address
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#tmp_allocptr_%1
            >#tmp_allocptr_tru_%1
            l1 <
            d0/56/57 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m57/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            <<++++++++++++++++++++++++++++++++++++
            >>#train_tmp
            >#train_ret
            >#train_ptr
            
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/61/62 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m61/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m61/63 <<<<[->>+<<]
            >>>>+
            <<<<<<<<<<[
                -
                >>>>>>>+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<<]
            >>>>>>>>>>-
            <<#subnu_to
            [
                if pos
                m63/59 [-<<<<+>>>>]
                <<<<+++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            >>>>]
            <[
                if neg
                <<<+++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                >>>[
                    -
                    <<<-
                >>>]
            ]
            drive left! choo choo
            <<<[
                m58/57 <[-<+>]
                m59/58 >[-<+>]
                
                m56/59 <<<[->>>+<<<]
                l1 <
                >>>-
                <+
            >]
            get our bag
            d56/57/59 <<<[->+>>+<<<]
            m57/56 >[-<+>]
            >[
                m60/57 >>[-<<<+>>>]
                m59/60 <[->+<]
                m58/59 <[->+<]
                r1 >
                -
            ]
            m59/39 >[-<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>]
            %7 = icmp slt i32 %6_ i32 14
            op_to_reg storing const value in temp address
            <<<<#constop_14
            ++++++++++++++
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m55/56 <<<[->+<]
            >>>+
            <<<<<<<<<<<<<<<<<<<[
                -
                
                >>>>>>>>>>>>>>>>>[
                    -
                    
                    r1 >
                ]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<<<<<<<<<<<]
            >>>>>>>>>>>>>>>>>>>-
            <<[
                [-]
                <<<<<<<<<<<<<<<<+
            >>>>>>>>>>>>>>>>]
            br i1 %7_ label %8_ label %12
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[
                -
                <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<-
                >>>>>+
                #B:print_game/8_true
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[
                -
                >>>>>>>>+
                #B:print_game/12_false
            <<<<<<<<]
        >>>>]
        >[
            -
            call @putchar(i8 95)
            op_to_reg storing const value in temp address
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#constop_95
            +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            enable next block when we return
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<#caller/%call_term_for_4
            +
            putchar intrinsic
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>.
            [-]
        <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
        >[
            -
            br label %9
            >+
        <]
        >[
            -
            %10 = load i32* %1_ align 4
            op_to_reg storing pointer value in temp address
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#tmp_allocptr_%1
            >#tmp_allocptr_tru_%1
            l1 <
            d0/56/57 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m57/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            <<++++++++++++++++++++++++++++++++++++
            >>#train_tmp
            >#train_ret
            >#train_ptr
            
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/61/62 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m61/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m61/63 <<<<[->>+<<]
            >>>>+
            <<<<<<<<<<[
                -
                >>>>>>>+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<<]
            >>>>>>>>>>-
            <<#subnu_to
            [
                if pos
                m63/59 [-<<<<+>>>>]
                <<<<+++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            >>>>]
            <[
                if neg
                <<<+++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                >>>[
                    -
                    <<<-
                >>>]
            ]
            drive left! choo choo
            <<<[
                m58/57 <[-<+>]
                m59/58 >[-<+>]
                
                m56/59 <<<[->>>+<<<]
                l1 <
                >>>-
                <+
            >]
            get our bag
            d56/57/59 <<<[->+>>+<<<]
            m57/56 >[-<+>]
            >[
                m60/57 >>[-<<<+>>>]
                m59/60 <[->+<]
                m58/59 <[->+<]
                r1 >
                -
            ]
            m59/41 >[-<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>]
            %11 = add i32 %10_ i32 1
            op_to_reg storing const value in temp address
            <<<<#constop_1
            +
            m41/42 <<<<<<<<<<<<<<[->+<]
            >>>>>>>>>>>>>>[
                -
                <<<<<<<<<<<<<+
            >>>>>>>>>>>>>]
            store i32 %11_ i32* %1_ align 4
            op_to_reg storing pointer value in temp address
            #tmp_allocptr_%1
            >#tmp_allocptr_tru_%1
            l1 <
            d0/56/57 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m57/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            <<++++++++++++++++++++++++++++++++++++
            store sitch: alloca Some(35)
            store sitch: from LocalOperand { name: Number(11)_ ty: TypeRef(IntegerType { bits: 32 }) }
            >>#train_tmp
            >#train_ret
            >#train_ptr
            >#train_cargo
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/62/63 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m62/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m62/64 <<<<[->>+<<]
            >>>>+
            <<<<<<<<<<<[
                -
                >>>>>>>>+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<<<]
            >>>>>>>>>>>-
            <<#subnu_to
            [
                if pos
                m64/59 [-<<<<<+>>>>>]
                <<<<<+++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            >>>>>]
            <[
                if neg
                <<<<+++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                >>>>[
                    -
                    <<<<-
                >>>>]
            ]
            m42/60 <<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<]
            drive left! choo choo
            >>>>>>>>>>>>>>>>>[
                m58/57 <[-<+>]
                m59/58 >[-<+>]
                m60/59 >[-<+>]
                m56/60 <<<<[->>>>+<<<<]
                l1 <
                >>>-
                <+
            >]
            <<<[-]
            m60/56 >>>>[-<<<<+>>>>]
            <<[
                m61/57 >>>[-<<<<+>>>>]
                
                m58/59 <<<[->+<]
                r1 >
                -
            ]
            br label %5
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+
        >>>]
        >[
            -
            call @putchar(i8 32)
            op_to_reg storing const value in temp address
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#constop_32
            ++++++++++++++++++++++++++++++++
            enable next block when we return
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<#caller/%call_term_for_7
            +
            putchar intrinsic
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>.
            [-]
        <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
        >[
            -
            call @putchar(i8 10)
            op_to_reg storing const value in temp address
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#constop_10
            ++++++++++
            enable next block when we return
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<#caller/%call_term_for_8
            +
            putchar intrinsic
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>.
            [-]
        <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
        >[
            -
            store i32 0_ i32* %2_ align 4
            op_to_reg storing const value in temp address
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#constop_0
            
            op_to_reg storing pointer value in temp address
            >#tmp_allocptr_%2
            >#tmp_allocptr_tru_%2
            l1 <
            d0/57/58 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m58/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            <<+++++++++++++++++++++++++++++++++++++
            store sitch: alloca Some(36)
            store sitch: from ConstantOperand(ConstantRef(Int { bits: 32_ value: 0 }))
            >>#train_tmp
            >#train_ret
            >#train_ptr
            >#train_cargo
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/63/64 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m63/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >>>>#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m63/68 <<<<<<<[->>>>>+<<<<<]
            >>>>>>>+
            <<<<<<<<<<<<<<[
                -
                >>>>>>>>+
                >>>>[
                    -
                    <<<<-
                    r1 >
                >>>>]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<<<<<<]
            >>>>>>>>>>>>>>-
            <<#subnu_to
            [
                if pos
                m68/60 [-<<<<<<<<+>>>>>>>>]
                <<<<<<<<++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            >>>>>>>>]
            <<<<[
                if neg
                <<<<++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                >>>>[
                    -
                    <<<<-
                >>>>]
            ]
            m55/61 <<<<<<<<<[->>>>>>+<<<<<<]
            drive left! choo choo
            >>>>>[
                m59/58 <[-<+>]
                m60/59 >[-<+>]
                m61/60 >[-<+>]
                m57/61 <<<<[->>>>+<<<<]
                l1 <
                >>>-
                <+
            >]
            <<<[-]
            m61/57 >>>>[-<<<<+>>>>]
            <<[
                m62/58 >>>[-<<<<+>>>>]
                
                m59/60 <<<[->+<]
                r1 >
                -
            ]
            br label %13
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+
        <]
        >[
            -
            %14 = load i32* %2_ align 4
            op_to_reg storing pointer value in temp address
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#tmp_allocptr_%2
            >#tmp_allocptr_tru_%2
            l1 <
            d0/56/57 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m57/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            <<+++++++++++++++++++++++++++++++++++++
            >>#train_tmp
            >#train_ret
            >#train_ptr
            
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/61/62 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m61/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m61/63 <<<<[->>+<<]
            >>>>+
            <<<<<<<<<<[
                -
                >>>>>>>+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<<]
            >>>>>>>>>>-
            <<#subnu_to
            [
                if pos
                m63/59 [-<<<<+>>>>]
                <<<<+++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            >>>>]
            <[
                if neg
                <<<+++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                >>>[
                    -
                    <<<-
                >>>]
            ]
            drive left! choo choo
            <<<[
                m58/57 <[-<+>]
                m59/58 >[-<+>]
                
                m56/59 <<<[->>>+<<<]
                l1 <
                >>>-
                <+
            >]
            get our bag
            d56/57/59 <<<[->+>>+<<<]
            m57/56 >[-<+>]
            >[
                m60/57 >>[-<<<+>>>]
                m59/60 <[->+<]
                m58/59 <[->+<]
                r1 >
                -
            ]
            m59/43 >[-<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>]
            %15 = icmp slt i32 %14_ i32 16
            op_to_reg storing const value in temp address
            <<<<#constop_16
            ++++++++++++++++
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m55/56 <<<[->+<]
            >>>+
            <<<<<<<<<<<<<<<[
                -
                
                >>>>>>>>>>>>>[
                    -
                    
                    r1 >
                ]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<<<<<<<]
            >>>>>>>>>>>>>>>-
            <<[
                [-]
                <<<<<<<<<<<<+
            >>>>>>>>>>>>]
            br i1 %15_ label %16_ label %28
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[
                -
                <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<-
                >>>>>>>>>>>>+
                #B:print_game/16_true
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[
                -
                >>>>>>>>>>>>>>>>>>>>>>+
                #B:print_game/28_false
            <<<<<<<<<<<<<<<<<<<<<<]
        >>>>>>>>>>>]
        >[
            -
            call @putchar(i8 124)
            op_to_reg storing const value in temp address
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#constop_124
            ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            enable next block when we return
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<#caller/%call_term_for_11
            +
            putchar intrinsic
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>.
            [-]
        <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
        >[
            -
            store i32 0_ i32* %3_ align 4
            op_to_reg storing const value in temp address
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#constop_0
            
            op_to_reg storing pointer value in temp address
            >#tmp_allocptr_%3
            >#tmp_allocptr_tru_%3
            l1 <
            d0/57/58 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m58/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            <<++++++++++++++++++++++++++++++++++++++
            store sitch: alloca Some(37)
            store sitch: from ConstantOperand(ConstantRef(Int { bits: 32_ value: 0 }))
            >>#train_tmp
            >#train_ret
            >#train_ptr
            >#train_cargo
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/63/64 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m63/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m63/65 <<<<[->>+<<]
            >>>>+
            <<<<<<<<<<<[
                -
                >>>>>>>>+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<<<]
            >>>>>>>>>>>-
            <<#subnu_to
            [
                if pos
                m65/60 [-<<<<<+>>>>>]
                <<<<<++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            >>>>>]
            <[
                if neg
                <<<<++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                >>>>[
                    -
                    <<<<-
                >>>>]
            ]
            m55/61 <<<<<<<<<[->>>>>>+<<<<<<]
            drive left! choo choo
            >>>>>[
                m59/58 <[-<+>]
                m60/59 >[-<+>]
                m61/60 >[-<+>]
                m57/61 <<<<[->>>>+<<<<]
                l1 <
                >>>-
                <+
            >]
            <<<[-]
            m61/57 >>>>[-<<<<+>>>>]
            <<[
                m62/58 >>>[-<<<<+>>>>]
                
                m59/60 <<<[->+<]
                r1 >
                -
            ]
            br label %17
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+
        <]
        >[
            -
            %18 = load i32* %3_ align 4
            op_to_reg storing pointer value in temp address
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#tmp_allocptr_%3
            >#tmp_allocptr_tru_%3
            l1 <
            d0/56/57 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m57/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            <<++++++++++++++++++++++++++++++++++++++
            >>#train_tmp
            >#train_ret
            >#train_ptr
            
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/61/62 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m61/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m61/63 <<<<[->>+<<]
            >>>>+
            <<<<<<<<<<[
                -
                >>>>>>>+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<<]
            >>>>>>>>>>-
            <<#subnu_to
            [
                if pos
                m63/59 [-<<<<+>>>>]
                <<<<+++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            >>>>]
            <[
                if neg
                <<<+++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                >>>[
                    -
                    <<<-
                >>>]
            ]
            drive left! choo choo
            <<<[
                m58/57 <[-<+>]
                m59/58 >[-<+>]
                
                m56/59 <<<[->>>+<<<]
                l1 <
                >>>-
                <+
            >]
            get our bag
            d56/57/59 <<<[->+>>+<<<]
            m57/56 >[-<+>]
            >[
                m60/57 >>[-<<<+>>>]
                m59/60 <[->+<]
                m58/59 <[->+<]
                r1 >
                -
            ]
            m59/45 >[-<<<<<<<<<<<<<<+>>>>>>>>>>>>>>]
            %19 = icmp slt i32 %18_ i32 14
            op_to_reg storing const value in temp address
            <<<<#constop_14
            ++++++++++++++
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m55/56 <<<[->+<]
            >>>+
            <<<<<<<<<<<<<[
                -
                
                >>>>>>>>>>>[
                    -
                    
                    r1 >
                ]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<<<<<]
            >>>>>>>>>>>>>-
            <<[
                [-]
                <<<<<<<<<<+
            >>>>>>>>>>]
            br i1 %19_ label %20_ label %24
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[
                -
                <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<-
                >>>>>>>>>>>>>>>+
                #B:print_game/20_true
            >>>>>>>>>>>>>>>>>>>>>>>>>>>]
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[
                -
                >>>>>>>>>>>>>>>>>>+
                #B:print_game/24_false
            <<<<<<<<<<<<<<<<<<]
        >>>>>>>>>>>>>>]
        >[
            -
            call @putchar(i8 46)
            op_to_reg storing const value in temp address
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#constop_46
            ++++++++++++++++++++++++++++++++++++++++++++++
            enable next block when we return
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<#caller/%call_term_for_14
            +
            putchar intrinsic
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>.
            [-]
        <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
        >[
            -
            br label %21
            >+
        <]
        >[
            -
            %22 = load i32* %3_ align 4
            op_to_reg storing pointer value in temp address
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#tmp_allocptr_%3
            >#tmp_allocptr_tru_%3
            l1 <
            d0/56/57 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m57/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            <<++++++++++++++++++++++++++++++++++++++
            >>#train_tmp
            >#train_ret
            >#train_ptr
            
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/61/62 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m61/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m61/63 <<<<[->>+<<]
            >>>>+
            <<<<<<<<<<[
                -
                >>>>>>>+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<<]
            >>>>>>>>>>-
            <<#subnu_to
            [
                if pos
                m63/59 [-<<<<+>>>>]
                <<<<+++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            >>>>]
            <[
                if neg
                <<<+++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                >>>[
                    -
                    <<<-
                >>>]
            ]
            drive left! choo choo
            <<<[
                m58/57 <[-<+>]
                m59/58 >[-<+>]
                
                m56/59 <<<[->>>+<<<]
                l1 <
                >>>-
                <+
            >]
            get our bag
            d56/57/59 <<<[->+>>+<<<]
            m57/56 >[-<+>]
            >[
                m60/57 >>[-<<<+>>>]
                m59/60 <[->+<]
                m58/59 <[->+<]
                r1 >
                -
            ]
            m59/47 >[-<<<<<<<<<<<<+>>>>>>>>>>>>]
            %23 = add i32 %22_ i32 1
            op_to_reg storing const value in temp address
            <<<<#constop_1
            +
            m47/48 <<<<<<<<[->+<]
            >>>>>>>>[
                -
                <<<<<<<+
            >>>>>>>]
            store i32 %23_ i32* %3_ align 4
            op_to_reg storing pointer value in temp address
            #tmp_allocptr_%3
            >#tmp_allocptr_tru_%3
            l1 <
            d0/56/57 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m57/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            <<++++++++++++++++++++++++++++++++++++++
            store sitch: alloca Some(37)
            store sitch: from LocalOperand { name: Number(23)_ ty: TypeRef(IntegerType { bits: 32 }) }
            >>#train_tmp
            >#train_ret
            >#train_ptr
            >#train_cargo
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/62/63 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m62/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m62/64 <<<<[->>+<<]
            >>>>+
            <<<<<<<<<<<[
                -
                >>>>>>>>+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<<<]
            >>>>>>>>>>>-
            <<#subnu_to
            [
                if pos
                m64/59 [-<<<<<+>>>>>]
                <<<<<+++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            >>>>>]
            <[
                if neg
                <<<<+++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                >>>>[
                    -
                    <<<<-
                >>>>]
            ]
            m48/60 <<<<<<<<<<<<<<<[->>>>>>>>>>>>+<<<<<<<<<<<<]
            drive left! choo choo
            >>>>>>>>>>>[
                m58/57 <[-<+>]
                m59/58 >[-<+>]
                m60/59 >[-<+>]
                m56/60 <<<<[->>>>+<<<<]
                l1 <
                >>>-
                <+
            >]
            <<<[-]
            m60/56 >>>>[-<<<<+>>>>]
            <<[
                m61/57 >>>[-<<<<+>>>>]
                
                m58/59 <<<[->+<]
                r1 >
                -
            ]
            br label %17
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+
        >>>]
        >[
            -
            call @putchar(i8 124)
            op_to_reg storing const value in temp address
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#constop_124
            ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            enable next block when we return
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<#caller/%call_term_for_17
            +
            putchar intrinsic
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>.
            [-]
        <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
        >[
            -
            call @putchar(i8 10)
            op_to_reg storing const value in temp address
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#constop_10
            ++++++++++
            enable next block when we return
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<#caller/%call_term_for_18
            +
            putchar intrinsic
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>.
            [-]
        <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
        >[
            -
            br label %25
            >+
        <]
        >[
            -
            %26 = load i32* %2_ align 4
            op_to_reg storing pointer value in temp address
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#tmp_allocptr_%2
            >#tmp_allocptr_tru_%2
            l1 <
            d0/56/57 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m57/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            <<+++++++++++++++++++++++++++++++++++++
            >>#train_tmp
            >#train_ret
            >#train_ptr
            
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/61/62 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m61/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m61/63 <<<<[->>+<<]
            >>>>+
            <<<<<<<<<<[
                -
                >>>>>>>+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<<]
            >>>>>>>>>>-
            <<#subnu_to
            [
                if pos
                m63/59 [-<<<<+>>>>]
                <<<<+++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            >>>>]
            <[
                if neg
                <<<+++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                >>>[
                    -
                    <<<-
                >>>]
            ]
            drive left! choo choo
            <<<[
                m58/57 <[-<+>]
                m59/58 >[-<+>]
                
                m56/59 <<<[->>>+<<<]
                l1 <
                >>>-
                <+
            >]
            get our bag
            d56/57/59 <<<[->+>>+<<<]
            m57/56 >[-<+>]
            >[
                m60/57 >>[-<<<+>>>]
                m59/60 <[->+<]
                m58/59 <[->+<]
                r1 >
                -
            ]
            m59/49 >[-<<<<<<<<<<+>>>>>>>>>>]
            %27 = add i32 %26_ i32 1
            op_to_reg storing const value in temp address
            <<<<#constop_1
            +
            m49/50 <<<<<<[->+<]
            >>>>>>[
                -
                <<<<<+
            >>>>>]
            store i32 %27_ i32* %2_ align 4
            op_to_reg storing pointer value in temp address
            #tmp_allocptr_%2
            >#tmp_allocptr_tru_%2
            l1 <
            d0/56/57 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m57/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            <<+++++++++++++++++++++++++++++++++++++
            store sitch: alloca Some(36)
            store sitch: from LocalOperand { name: Number(27)_ ty: TypeRef(IntegerType { bits: 32 }) }
            >>#train_tmp
            >#train_ret
            >#train_ptr
            >#train_cargo
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/62/63 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m62/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m62/64 <<<<[->>+<<]
            >>>>+
            <<<<<<<<<<<[
                -
                >>>>>>>>+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<<<]
            >>>>>>>>>>>-
            <<#subnu_to
            [
                if pos
                m64/59 [-<<<<<+>>>>>]
                <<<<<+++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            >>>>>]
            <[
                if neg
                <<<<+++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                >>>>[
                    -
                    <<<<-
                >>>>]
            ]
            m50/60 <<<<<<<<<<<<<[->>>>>>>>>>+<<<<<<<<<<]
            drive left! choo choo
            >>>>>>>>>[
                m58/57 <[-<+>]
                m59/58 >[-<+>]
                m60/59 >[-<+>]
                m56/60 <<<<[->>>>+<<<<]
                l1 <
                >>>-
                <+
            >]
            <<<[-]
            m60/56 >>>>[-<<<<+>>>>]
            <<[
                m61/57 >>>[-<<<<+>>>>]
                
                m58/59 <<<[->+<]
                r1 >
                -
            ]
            br label %13
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+
        >>>>>>>>>>]
        >[
            -
            call @putchar(i8 39)
            op_to_reg storing const value in temp address
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>#constop_39
            +++++++++++++++++++++++++++++++++++++++
            enable next block when we return
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<#caller/%call_term_for_21
            +
            putchar intrinsic
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>.
            [-]
        <<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
        >[
            -
            store i32 0_ i32* %4_ align 4
            op_to_reg storing const value in temp address
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>#constop_0
            
            op_to_reg storing pointer value in temp address
            >#tmp_allocptr_%4
            >#tmp_allocptr_tru_%4
            l1 <
            d0/57/58 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m58/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            <<+++++++++++++++++++++++++++++++++++++++
            store sitch: alloca Some(38)
            store sitch: from ConstantOperand(ConstantRef(Int { bits: 32_ value: 0 }))
            >>#train_tmp
            >#train_ret
            >#train_ptr
            >#train_cargo
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/63/64 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m63/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m63/65 <<<<[->>+<<]
            >>>>+
            <<<<<<<<<<<[
                -
                >>>>>>>>+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<<<]
            >>>>>>>>>>>-
            <<#subnu_to
            [
                if pos
                m65/60 [-<<<<<+>>>>>]
                <<<<<++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            >>>>>]
            <[
                if neg
                <<<<++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                >>>>[
                    -
                    <<<<-
                >>>>]
            ]
            m55/61 <<<<<<<<<[->>>>>>+<<<<<<]
            drive left! choo choo
            >>>>>[
                m59/58 <[-<+>]
                m60/59 >[-<+>]
                m61/60 >[-<+>]
                m57/61 <<<<[->>>>+<<<<]
                l1 <
                >>>-
                <+
            >]
            <<<[-]
            m61/57 >>>>[-<<<<+>>>>]
            <<[
                m62/58 >>>[-<<<<+>>>>]
                
                m59/60 <<<[->+<]
                r1 >
                -
            ]
            br label %29
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+
        <]
        >[
            -
            %30 = load i32* %4_ align 4
            op_to_reg storing pointer value in temp address
            >>>>>>>>>>>>>>>>>>>>>>>>>>>#tmp_allocptr_%4
            >#tmp_allocptr_tru_%4
            l1 <
            d0/56/57 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m57/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            <<+++++++++++++++++++++++++++++++++++++++
            >>#train_tmp
            >#train_ret
            >#train_ptr
            
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/61/62 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m61/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m61/63 <<<<[->>+<<]
            >>>>+
            <<<<<<<<<<[
                -
                >>>>>>>+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<<]
            >>>>>>>>>>-
            <<#subnu_to
            [
                if pos
                m63/59 [-<<<<+>>>>]
                <<<<+++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            >>>>]
            <[
                if neg
                <<<+++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                >>>[
                    -
                    <<<-
                >>>]
            ]
            drive left! choo choo
            <<<[
                m58/57 <[-<+>]
                m59/58 >[-<+>]
                
                m56/59 <<<[->>>+<<<]
                l1 <
                >>>-
                <+
            >]
            get our bag
            d56/57/59 <<<[->+>>+<<<]
            m57/56 >[-<+>]
            >[
                m60/57 >>[-<<<+>>>]
                m59/60 <[->+<]
                m58/59 <[->+<]
                r1 >
                -
            ]
            m59/51 >[-<<<<<<<<+>>>>>>>>]
            %31 = icmp slt i32 %30_ i32 14
            op_to_reg storing const value in temp address
            <<<<#constop_14
            ++++++++++++++
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m55/56 <<<[->+<]
            >>>+
            <<<<<<<[
                -
                
                >>>>>[
                    -
                    
                    r1 >
                ]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<]
            >>>>>>>-
            <<[
                [-]
                <<<<+
            >>>>]
            br i1 %31_ label %32_ label %36
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[
                -
                <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<-
                >>>>>>>>>>>>>>>>>>>>>>>>>+
                #B:print_game/32_true
            >>>>>>>>>>>>>>>>>>>>>>>]
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[
                -
                >>>>>>>>>>>>>>>>>>>>>>>>>>>>+
                #B:print_game/36_false
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<]
        >>>>>>>>>>>>>>>>>>>>>>>>]
        >[
            -
            call @putchar(i8 45)
            op_to_reg storing const value in temp address
            >>>>>>>>>>>>>>>>>>>>>>>>>>#constop_45
            +++++++++++++++++++++++++++++++++++++++++++++
            enable next block when we return
            <<<<<<<<<<<<<<<<<<<<<<<<<#caller/%call_term_for_24
            +
            putchar intrinsic
            >>>>>>>>>>>>>>>>>>>>>>>>>.
            [-]
        <<<<<<<<<<<<<<<<<<<<<<<<<<]
        >[
            -
            br label %33
            >+
        <]
        >[
            -
            %34 = load i32* %4_ align 4
            op_to_reg storing pointer value in temp address
            >>>>>>>>>>>>>>>>>>>>>>>>#tmp_allocptr_%4
            >#tmp_allocptr_tru_%4
            l1 <
            d0/56/57 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m57/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            <<+++++++++++++++++++++++++++++++++++++++
            >>#train_tmp
            >#train_ret
            >#train_ptr
            
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/61/62 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m61/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m61/63 <<<<[->>+<<]
            >>>>+
            <<<<<<<<<<[
                -
                >>>>>>>+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<<]
            >>>>>>>>>>-
            <<#subnu_to
            [
                if pos
                m63/59 [-<<<<+>>>>]
                <<<<+++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            >>>>]
            <[
                if neg
                <<<+++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                >>>[
                    -
                    <<<-
                >>>]
            ]
            drive left! choo choo
            <<<[
                m58/57 <[-<+>]
                m59/58 >[-<+>]
                
                m56/59 <<<[->>>+<<<]
                l1 <
                >>>-
                <+
            >]
            get our bag
            d56/57/59 <<<[->+>>+<<<]
            m57/56 >[-<+>]
            >[
                m60/57 >>[-<<<+>>>]
                m59/60 <[->+<]
                m58/59 <[->+<]
                r1 >
                -
            ]
            m59/53 >[-<<<<<<+>>>>>>]
            %35 = add i32 %34_ i32 1
            op_to_reg storing const value in temp address
            <<<<#constop_1
            +
            m53/54 <<[->+<]
            >>[
                -
                <+
            >]
            store i32 %35_ i32* %4_ align 4
            op_to_reg storing pointer value in temp address
            #tmp_allocptr_%4
            >#tmp_allocptr_tru_%4
            l1 <
            d0/56/57 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m57/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            <<+++++++++++++++++++++++++++++++++++++++
            store sitch: alloca Some(38)
            store sitch: from LocalOperand { name: Number(35)_ ty: TypeRef(IntegerType { bits: 32 }) }
            >>#train_tmp
            >#train_ret
            >#train_ptr
            >#train_cargo
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/62/63 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m62/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m62/64 <<<<[->>+<<]
            >>>>+
            <<<<<<<<<<<[
                -
                >>>>>>>>+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<<<]
            >>>>>>>>>>>-
            <<#subnu_to
            [
                if pos
                m64/59 [-<<<<<+>>>>>]
                <<<<<+++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            >>>>>]
            <[
                if neg
                <<<<+++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                >>>>[
                    -
                    <<<<-
                >>>>]
            ]
            m54/60 <<<<<<<<<[->>>>>>+<<<<<<]
            drive left! choo choo
            >>>>>[
                m58/57 <[-<+>]
                m59/58 >[-<+>]
                m60/59 >[-<+>]
                m56/60 <<<<[->>>>+<<<<]
                l1 <
                >>>-
                <+
            >]
            <<<[-]
            m60/56 >>>>[-<<<<+>>>>]
            <<[
                m61/57 >>>[-<<<<+>>>>]
                
                m58/59 <<<[->+<]
                r1 >
                -
            ]
            br label %29
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+
        >>>]
        >[
            -
            call @putchar(i8 39)
            op_to_reg storing const value in temp address
            >>>>>>>>>>>>>>>>>>>>>>>#constop_39
            +++++++++++++++++++++++++++++++++++++++
            enable next block when we return
            <<<<<<<<<<<<<<<<<<<<<<#caller/%call_term_for_27
            +
            putchar intrinsic
            >>>>>>>>>>>>>>>>>>>>>>.
            [-]
        <<<<<<<<<<<<<<<<<<<<<<<]
        >[
            -
            call @putchar(i8 10)
            op_to_reg storing const value in temp address
            >>>>>>>>>>>>>>>>>>>>>>#constop_10
            ++++++++++
            enable next block when we return
            <<<<<<<<<<<<<<<<<<<<<#caller/%call_term_for_28
            +
            putchar intrinsic
            >>>>>>>>>>>>>>>>>>>>>.
            [-]
        <<<<<<<<<<<<<<<<<<<<<<]
        >[
            -
            ret void
            zero all function allocs
            >[-]
            >[-]
            >[-]
            >[-]
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<-
            #dead_frame
            >-
            l1 <
            <[-]
            r1 >
            l6 <<<<<<
        >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
    >#main
    [
        >>#main/RET_LANDING_PAD
        [
            <<<<-
            #dead_frame
            >>-
            <<#dead_fn_pad/main
            >>>>-
            l7 <<<<<<<
        ]
        <<<<#mainloop_main
        >#F:print_game
        >#F:main
        >#B:%no_b0_call_for_main
        >#B:%ret_lading_pad
        >#B:%0
        >#B:%call_term_for_0
        <<<[
            -
            copy up args
            br label %0
            >>+
        <<]
        >>[
            -
            call @print_game()
            enable next block when we return
            >#caller/%call_term_for_0
            +
            stack_width 7
            ret_pad_width 4
            give callee a stack pointer
            >>>>>>#stack_ptr
            ++++++++++++++
            l1 <
            d0/13/14 <<<<<<<<<<<<[->>>>>>>>>>>>>+>+<<<<<<<<<<<<<<]
            m14/0 >>>>>>>>>>>>>>[-<<<<<<<<<<<<<<+>>>>>>>>>>>>>>]
            r1 >
            r7 >>>>>>>
            <<<<<<<<<<<<<<#JUMP_PAD
            +
            >>#caller
            +
            >>#caller/jump_pad_blk
            +
            r6 >>>>>>
            <<<<#===FRAME_print_game
            +
            >#print_game
            +
            >>#print_game/b0
            +
        >>]
        >[
            -
            ret void
            zero all function allocs
            <<<<<<-
            #dead_frame
            >>-
            l1 <
            <<[-]
            r1 >
            l6 <<<<<<
        >>>>>>]
    <<<<]
<<]
