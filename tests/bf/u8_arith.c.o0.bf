r6 >>>>>>
++++++
r1 >
runtime init:
#===TOP_FRAME
+
>>>#main
+
>#main/b0
+
<<<<[
    >#add
    [
        >>>>#B:%ret_lading_pad
        [
            <<<<<-
            #dead_frame
            >-
            <#dead_fn_pad/add
            >>>>>-
            l21 <<<<<<<<<<<<<<<<<<<<<
        ]
        <<<<<#mainloop_add
        >#F:add
        >#F:sub
        >#F:main
        >#B:%no_block0_call_for_add
        >#B:%ret_lading_pad
        >#B:%2
        >#B:%call_term_for_0
        >#alloc_%3
        >#alloc_%4
        >#%5_=_load_i32*_%3__align_4(mult)
        >#%6_=_add_i32_65__i32_%5(mult)
        >#%7_=_load_i32*_%4__align_4(mult)
        >#%8_=_add_i32_%6__i32_%7(mult)
        >#%9_=_trunc_i32_%8_to_i8(mult)
        >#%0
        >#%1
        <<<<<<<<<<<<#B:%no_block0_call_for_add
        [
            -
            copy up args
            >>>>>>>>>>>#arg_%0
            l2 <<
            m0/17 <<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<]
            r2 >>
            >>>>>>>>>>>>>>>>#arg_%1
            l3 <<<
            m0/19 <<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<]
            r3 >>>
            br label %2
            >>>>>>+
        <<]
        >>#B:%2
        [
            -
            %3 = alloca i32_ align 4
            %4 = alloca i32_ align 4
            store i32 %0_ i32* %3_ align 4
            >>[-]
            m15/8 >>>>>>>[-<<<<<<<+>>>>>>>]
            store i32 %1_ i32* %4_ align 4
            <<<<<<[-]
            m16/9 >>>>>>>[-<<<<<<<+>>>>>>>]
            %5 = load i32* %3_ align 4
            <<<<<<[-]
            d8/10/17 <<[->>+>>>>>>>+<<<<<<<<<]
            m17/8 >>>>>>>>>[-<<<<<<<<<+>>>>>>>>>]
            %6 = add i32 65_ i32 %5
            <<<<<<[-]
            op_to_reg storing const value in temp address
            >>>>>>>#constop_65
            +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            d10/17/19 <<<<<<<<[->>>>>>>+>>+<<<<<<<<<]
            m17/10 >>>>>>>[-<<<<<<<+>>>>>>>]
            m18/11 >[-<<<<<<<+>>>>>>>]
            >[
                -
                <<<<<<<<+
            >>>>>>>>]
            %7 = load i32* %4_ align 4
            <<<<<<<[-]
            d9/12/17 <<<[->>>+>>>>>+<<<<<<<<]
            m17/9 >>>>>>>>[-<<<<<<<<+>>>>>>>>]
            %8 = add i32 %6_ i32 %7
            <<<<[-]
            d11/17/18 <<[->>>>>>+>+<<<<<<<]
            m17/11 >>>>>>[-<<<<<<+>>>>>>]
            d12/20/19 <<<<<[->>>>>>>>+<+<<<<<<<]
            m20/12 >>>>>>>>[-<<<<<<<<+>>>>>>>>]
            m18/13 <<[-<<<<<+>>>>>]
            >[
                -
                <<<<<<+
            >>>>>>]
            %9 = trunc i32 %8 to i8
            <<<<<[-]
            d13/17/18 <[->>>>+>+<<<<<]
            m17/13 >>>>[-<<<<+>>>>]
            m18/14 >[-<<<<+>>>>]
            call @putchar(i8 %9)
            enable next block when we return
            <<<<<<<<<<<#caller/%call_term_for_0
            +
            putchar intrinsic
            d14/17/18 >>>>>>>[->>>+>+<<<<]
            m17/14 >>>[-<<<+>>>]
            >.
            [-]
        <<<<<<<<<<<<]
        >#B:%call_term_for_0
        [
            -
            ret void
            zero all function allocs
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            <<<<<<<<<<<<<<-
            #dead_frame
            >-
            l1 <
            <[-]
            r1 >
            l9 <<<<<<<<<
        >>>>>>>]
    <<<<<<]
    >#sub
    [
        >>>#B:%ret_lading_pad
        [
            <<<<<-
            #dead_frame
            >>-
            <<#dead_fn_pad/sub
            >>>>>-
            l21 <<<<<<<<<<<<<<<<<<<<<
        ]
        <<<<<#mainloop_sub
        >#F:add
        >#F:sub
        >#F:main
        >#B:%no_block0_call_for_sub
        >#B:%ret_lading_pad
        >#B:%2
        >#B:%call_term_for_0
        >#alloc_%3
        >#alloc_%4
        >#%5_=_load_i32*_%3__align_4(mult)
        >#%6_=_add_i32_65__i32_%5(mult)
        >#%7_=_load_i32*_%4__align_4(mult)
        >#%8_=_sub_i32_%6__i32_%7(mult)
        >#%9_=_trunc_i32_%8_to_i8(mult)
        >#%0
        >#%1
        <<<<<<<<<<<<#B:%no_block0_call_for_sub
        [
            -
            copy up args
            >>>>>>>>>>>#arg_%0
            l2 <<
            m0/17 <<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<]
            r2 >>
            >>>>>>>>>>>>>>>>#arg_%1
            l3 <<<
            m0/19 <<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<]
            r3 >>>
            br label %2
            >>>>>>+
        <<]
        >>#B:%2
        [
            -
            %3 = alloca i32_ align 4
            %4 = alloca i32_ align 4
            store i32 %0_ i32* %3_ align 4
            >>[-]
            m15/8 >>>>>>>[-<<<<<<<+>>>>>>>]
            store i32 %1_ i32* %4_ align 4
            <<<<<<[-]
            m16/9 >>>>>>>[-<<<<<<<+>>>>>>>]
            %5 = load i32* %3_ align 4
            <<<<<<[-]
            d8/10/17 <<[->>+>>>>>>>+<<<<<<<<<]
            m17/8 >>>>>>>>>[-<<<<<<<<<+>>>>>>>>>]
            %6 = add i32 65_ i32 %5
            <<<<<<[-]
            op_to_reg storing const value in temp address
            >>>>>>>#constop_65
            +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            d10/17/19 <<<<<<<<[->>>>>>>+>>+<<<<<<<<<]
            m17/10 >>>>>>>[-<<<<<<<+>>>>>>>]
            m18/11 >[-<<<<<<<+>>>>>>>]
            >[
                -
                <<<<<<<<+
            >>>>>>>>]
            %7 = load i32* %4_ align 4
            <<<<<<<[-]
            d9/12/17 <<<[->>>+>>>>>+<<<<<<<<]
            m17/9 >>>>>>>>[-<<<<<<<<+>>>>>>>>]
            %8 = sub i32 %6_ i32 %7
            <<<<[-]
            d11/17/18 <<[->>>>>>+>+<<<<<<<]
            m17/11 >>>>>>[-<<<<<<+>>>>>>]
            d12/20/19 <<<<<[->>>>>>>>+<+<<<<<<<]
            m20/12 >>>>>>>>[-<<<<<<<<+>>>>>>>>]
            m18/13 <<[-<<<<<+>>>>>]
            >[
                -
                <<<<<<-
            >>>>>>]
            %9 = trunc i32 %8 to i8
            <<<<<[-]
            d13/17/18 <[->>>>+>+<<<<<]
            m17/13 >>>>[-<<<<+>>>>]
            m18/14 >[-<<<<+>>>>]
            call @putchar(i8 %9)
            enable next block when we return
            <<<<<<<<<<<#caller/%call_term_for_0
            +
            putchar intrinsic
            d14/17/18 >>>>>>>[->>>+>+<<<<]
            m17/14 >>>[-<<<+>>>]
            >.
            [-]
        <<<<<<<<<<<<]
        >#B:%call_term_for_0
        [
            -
            ret void
            zero all function allocs
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            <<<<<<<<<<<<<<-
            #dead_frame
            >>-
            l1 <
            <<[-]
            r1 >
            l9 <<<<<<<<<
        >>>>>>>]
    <<<<<]
    >#main
    [
        >>#B:%ret_lading_pad
        [
            <<<<<-
            #dead_frame
            >>>-
            <<<#dead_fn_pad/main
            >>>>>-
            l57 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
        ]
        <<<<<#mainloop_main
        >#F:add
        >#F:sub
        >#F:main
        >#B:%0
        >#B:%ret_lading_pad
        >#B:%5
        >#B:%8
        >#B:%9
        >#B:%12
        >#B:%call_term_for_4
        >#B:%15
        >#B:%18
        >#B:%19
        >#B:%22
        >#B:%23
        >#B:%26
        >#B:%27
        >#B:%30
        >#B:%call_term_for_13
        >#B:%33
        >#B:%36
        >#B:%37
        >#B:%40
        >#alloc_%1
        >#alloc_%2
        >#alloc_%3
        >#alloc_%4
        >#%6_=_load_i32*_%1__align_4(mult)
        >#%7_=_icmp_slt_i32_%6__i32_16(mult)
        >#%10_=_load_i32*_%2__align_4(mult)
        >#%11_=_icmp_slt_i32_%10__i32_16(mult)
        >#%13_=_load_i32*_%1__align_4(mult)
        >#%14_=_load_i32*_%2__align_4(mult)
        >#%16_=_load_i32*_%2__align_4(mult)
        >#%17_=_add_i32_%16__i32_1(mult)
        >#%20_=_load_i32*_%1__align_4(mult)
        >#%21_=_add_i32_%20__i32_1(mult)
        >#%24_=_load_i32*_%3__align_4(mult)
        >#%25_=_icmp_slt_i32_%24__i32_16(mult)
        >#%28_=_load_i32*_%4__align_4(mult)
        >#%29_=_icmp_slt_i32_%28__i32_16(mult)
        >#%31_=_load_i32*_%3__align_4(mult)
        >#%32_=_load_i32*_%4__align_4(mult)
        >#%34_=_load_i32*_%4__align_4(mult)
        >#%35_=_add_i32_%34__i32_1(mult)
        >#%38_=_load_i32*_%3__align_4(mult)
        >#%39_=_add_i32_%38__i32_1(mult)
        <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<#B:%0
        [
            -
            copy up args
            %1 = alloca i32_ align 4
            %2 = alloca i32_ align 4
            %3 = alloca i32_ align 4
            %4 = alloca i32_ align 4
            store i32 0_ i32* %1_ align 4
            op_to_reg storing const value in temp address
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#constop_0
            
            <<<<<<<<<<<<<<<<<<<<<<<<[-]
            m48/24 >>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>]
            br label %5
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+
        <<]
        >>#B:%5
        [
            -
            %6 = load i32* %1_ align 4
            >>>>>>>>>>>>>>>>>>>>>>[-]
            d24/28/49 <<<<[->>>>+>>>>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<<]
            m49/24 >>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>]
            %7 = icmp slt i32 %6_ i32 16
            <<<<<<<<<<<<<<<<<<<<[-]
            d28/48/50 <[->>>>>>>>>>>>>>>>>>>>+>>+<<<<<<<<<<<<<<<<<<<<<<]
            m48/28 >>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>]
            op_to_reg storing const value in temp address
            >#constop_16
            ++++++++++++++++
            >>#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m49/51 <<<<[->>+<<]
            >>>>+
            <<<[
                -
                
                >[
                    -
                    
                    r1 >
                ]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <]
            >>>-
            <<[
                [-]
                <<<<<<<<<<<<<<<<<<<<<<+
            >>>>>>>>>>>>>>>>>>>>>>]
            br i1 %7_ label %8_ label %22
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+
            >>>>>>>>>>>>>>>>>>>>>>>>[
                -
                <<<<<<<<<<<<<<<<<<<<<<<<-
                >>+
                #B:main/8_true
            >>>>>>>>>>>>>>>>>>>>>>]
            <<<<<<<<<<<<<<<<<<<<<<<<[
                -
                >>>>>>>>>+
                #B:main/22_false
            <<<<<<<<<]
        >]
        >#B:%8
        [
            -
            store i32 0_ i32* %2_ align 4
            op_to_reg storing const value in temp address
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#constop_0
            
            <<<<<<<<<<<<<<<<<<<<<<<[-]
            m48/25 >>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>]
            br label %9
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+
        <]
        >#B:%9
        [
            -
            %10 = load i32* %2_ align 4
            >>>>>>>>>>>>>>>>>>>>>>[-]
            d25/30/48 <<<<<[->>>>>+>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<]
            m48/25 >>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>]
            %11 = icmp slt i32 %10_ i32 16
            <<<<<<<<<<<<<<<<<[-]
            d30/48/49 <[->>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<]
            m48/30 >>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>]
            op_to_reg storing const value in temp address
            >>#constop_16
            ++++++++++++++++
            >>>>#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m50/54 <<<<<<[->>>>+<<<<]
            >>>>>>+
            <<<<<<<[
                -
                
                >>>>>[
                    -
                    
                    r1 >
                ]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<]
            >>>>>>>-
            <<[
                [-]
                <<<<<<<<<<<<<<<<<<<<<<<+
            >>>>>>>>>>>>>>>>>>>>>>>]
            br i1 %11_ label %12_ label %18
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+
            >>>>>>>>>>>>>>>>>>>>>>>>>>[
                -
                <<<<<<<<<<<<<<<<<<<<<<<<<<-
                >>>>+
                #B:main/12_true
            >>>>>>>>>>>>>>>>>>>>>>]
            <<<<<<<<<<<<<<<<<<<<<<<<<<[
                -
                >>>>>>>+
                #B:main/18_false
            <<<<<<<]
        >>>]
        >#B:%12
        [
            -
            %13 = load i32* %1_ align 4
            >>>>>>>>>>>>>>>>>>>>>>>[-]
            d24/32/48 <<<<<<<<[->>>>>>>>+>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<]
            m48/24 >>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>]
            %14 = load i32* %2_ align 4
            <<<<<<<<<<<<<<<[-]
            d25/33/48 <<<<<<<<[->>>>>>>>+>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<]
            m48/25 >>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>]
            call @add(i32 %13_ i32 %14)
            enable next block when we return
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<#caller/%call_term_for_4
            +
            stack_width 57
            ret_pad_width 5
            copy up arg 0
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#arg_0
            d32/48/49 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<]
            m48/32 >>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>]
            m49/64 >[->>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<]
            copy up arg 1
            >>>>>>>>>>>>>>#arg_1
            d33/50/51 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<]
            m50/33 >>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>]
            m51/63 >[->>>>>>>>>>>>+<<<<<<<<<<<<]
            give callee a stack pointer
            >>>>>>>>>>>>>>#stack_ptr
            +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            l1 <
            d0/66/67 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m67/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            r57 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<#JUMP_PAD
            +
            >>>#caller
            +
            >>#caller/jump_pad_blk
            +
            r9 >>>>>>>>>
            <<<<<#===FRAME_add
            +
            >#add
            +
            >>>#add/b0
            +
        >>>>>]
        >#B:%call_term_for_4
        [
            -
            br label %15
            >+
        <]
        >#B:%15
        [
            -
            %16 = load i32* %2_ align 4
            >>>>>>>>>>>>>>>>>>>>>>>[-]
            d25/34/48 <<<<<<<<<[->>>>>>>>>+>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<]
            m48/25 >>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>]
            %17 = add i32 %16_ i32 1
            <<<<<<<<<<<<<[-]
            d34/48/49 <[->>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<]
            m48/34 >>>>>>>>>>>>>>[-<<<<<<<<<<<<<<+>>>>>>>>>>>>>>]
            op_to_reg storing const value in temp address
            >>#constop_1
            +
            m49/35 <[-<<<<<<<<<<<<<<+>>>>>>>>>>>>>>]
            >[
                -
                <<<<<<<<<<<<<<<+
            >>>>>>>>>>>>>>>]
            store i32 %17_ i32* %2_ align 4
            d35/48/49 <<<<<<<<<<<<<<<[->>>>>>>>>>>>>+>+<<<<<<<<<<<<<<]
            m48/35 >>>>>>>>>>>>>[-<<<<<<<<<<<<<+>>>>>>>>>>>>>]
            <<<<<<<<<<<<<<<<<<<<<<<[-]
            m49/25 >>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>]
            br label %9
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+
        >>>]
        >#B:%18
        [
            -
            br label %19
            >+
        <]
        >#B:%19
        [
            -
            %20 = load i32* %1_ align 4
            >>>>>>>>>>>>>>>>>>>>>>>[-]
            d24/36/48 <<<<<<<<<<<<[->>>>>>>>>>>>+>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<]
            m48/24 >>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>]
            %21 = add i32 %20_ i32 1
            <<<<<<<<<<<[-]
            d36/48/49 <[->>>>>>>>>>>>+>+<<<<<<<<<<<<<]
            m48/36 >>>>>>>>>>>>[-<<<<<<<<<<<<+>>>>>>>>>>>>]
            op_to_reg storing const value in temp address
            >>#constop_1
            +
            m49/37 <[-<<<<<<<<<<<<+>>>>>>>>>>>>]
            >[
                -
                <<<<<<<<<<<<<+
            >>>>>>>>>>>>>]
            store i32 %21_ i32* %1_ align 4
            d37/48/49 <<<<<<<<<<<<<[->>>>>>>>>>>+>+<<<<<<<<<<<<]
            m48/37 >>>>>>>>>>>[-<<<<<<<<<<<+>>>>>>>>>>>]
            <<<<<<<<<<<<<<<<<<<<<<<<[-]
            m49/24 >>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>]
            br label %5
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+
        >>>>>>>]
        >#B:%22
        [
            -
            store i32 0_ i32* %3_ align 4
            op_to_reg storing const value in temp address
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#constop_0
            
            <<<<<<<<<<<<<<<<<<<<<<[-]
            m48/26 >>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>]
            br label %23
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+
        <]
        >#B:%23
        [
            -
            %24 = load i32* %3_ align 4
            >>>>>>>>>>>>>>>>>>>>>>>[-]
            d26/38/48 <<<<<<<<<<<<[->>>>>>>>>>>>+>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<]
            m48/26 >>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>]
            %25 = icmp slt i32 %24_ i32 16
            <<<<<<<<<[-]
            d38/48/49 <[->>>>>>>>>>+>+<<<<<<<<<<<]
            m48/38 >>>>>>>>>>[-<<<<<<<<<<+>>>>>>>>>>]
            op_to_reg storing const value in temp address
            >>#constop_16
            ++++++++++++++++
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m50/51 <<<[->+<]
            >>>+
            <<<<[
                -
                
                >>[
                    -
                    
                    r1 >
                ]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<]
            >>>>-
            <<[
                [-]
                <<<<<<<<<<<<+
            >>>>>>>>>>>>]
            br i1 %25_ label %26_ label %40
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[
                -
                <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<-
                >>>>>>>>>>>+
                #B:main/26_true
            >>>>>>>>>>>>>>>>>>>>>>>]
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[
                -
                >>>>>>>>>>>>>>>>>>+
                #B:main/40_false
            <<<<<<<<<<<<<<<<<<]
        >>>>>>>>>>]
        >#B:%26
        [
            -
            store i32 0_ i32* %4_ align 4
            op_to_reg storing const value in temp address
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#constop_0
            
            <<<<<<<<<<<<<<<<<<<<<[-]
            m48/27 >>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>]
            br label %27
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+
        <]
        >#B:%27
        [
            -
            %28 = load i32* %4_ align 4
            >>>>>>>>>>>>>>>>>>>>>>>[-]
            d27/40/48 <<<<<<<<<<<<<[->>>>>>>>>>>>>+>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<]
            m48/27 >>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>]
            %29 = icmp slt i32 %28_ i32 16
            <<<<<<<[-]
            d40/48/49 <[->>>>>>>>+>+<<<<<<<<<]
            m48/40 >>>>>>>>[-<<<<<<<<+>>>>>>>>]
            op_to_reg storing const value in temp address
            >>#constop_16
            ++++++++++++++++
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m50/51 <<<[->+<]
            >>>+
            <<<<[
                -
                
                >>[
                    -
                    
                    r1 >
                ]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<]
            >>>>-
            <<[
                [-]
                <<<<<<<<<<+
            >>>>>>>>>>]
            br i1 %29_ label %30_ label %36
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[
                -
                <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<-
                >>>>>>>>>>>>>+
                #B:main/30_true
            >>>>>>>>>>>>>>>>>>>>>>>]
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[
                -
                >>>>>>>>>>>>>>>>+
                #B:main/36_false
            <<<<<<<<<<<<<<<<]
        >>>>>>>>>>>>]
        >#B:%30
        [
            -
            %31 = load i32* %3_ align 4
            >>>>>>>>>>>>>>>>>>>>>>>>[-]
            d26/42/48 <<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>+>>>>>>+<<<<<<<<<<<<<<<<<<<<<<]
            m48/26 >>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>]
            %32 = load i32* %4_ align 4
            <<<<<[-]
            d27/43/48 <<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>+>>>>>+<<<<<<<<<<<<<<<<<<<<<]
            m48/27 >>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>]
            call @sub(i32 %31_ i32 %32)
            enable next block when we return
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<#caller/%call_term_for_13
            +
            stack_width 57
            ret_pad_width 5
            copy up arg 0
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#arg_0
            d42/48/49 <<<<<<<<<<<<<<<<<<<<<<[->>>>>>+>+<<<<<<<]
            m48/42 >>>>>>[-<<<<<<+>>>>>>]
            m49/64 >[->>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<]
            copy up arg 1
            >>>>>>>>>>>>>>#arg_1
            d43/50/51 <<<<<<<<<<<<<<<<<<<<[->>>>>>>+>+<<<<<<<<]
            m50/43 >>>>>>>[-<<<<<<<+>>>>>>>]
            m51/63 >[->>>>>>>>>>>>+<<<<<<<<<<<<]
            give callee a stack pointer
            >>>>>>>>>>>>>>#stack_ptr
            +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            l1 <
            d0/66/67 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m67/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            r57 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<#JUMP_PAD
            +
            >>>#caller
            +
            >>#caller/jump_pad_blk
            +
            r9 >>>>>>>>>
            <<<<<#===FRAME_sub
            +
            >>#sub
            +
            >>#sub/b0
            +
        >>>>>>>>>>>>>>]
        >#B:%call_term_for_13
        [
            -
            br label %33
            >+
        <]
        >#B:%33
        [
            -
            %34 = load i32* %4_ align 4
            >>>>>>>>>>>>>>>>>>>>>>>>[-]
            d27/44/48 <<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>+>>>>+<<<<<<<<<<<<<<<<<<<<<]
            m48/27 >>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>]
            %35 = add i32 %34_ i32 1
            <<<[-]
            d44/48/49 <[->>>>+>+<<<<<]
            m48/44 >>>>[-<<<<+>>>>]
            op_to_reg storing const value in temp address
            >>#constop_1
            +
            m49/45 <[-<<<<+>>>>]
            >[
                -
                <<<<<+
            >>>>>]
            store i32 %35_ i32* %4_ align 4
            d45/48/49 <<<<<[->>>+>+<<<<]
            m48/45 >>>[-<<<+>>>]
            <<<<<<<<<<<<<<<<<<<<<[-]
            m49/27 >>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>]
            br label %27
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+
        >>>]
        >#B:%36
        [
            -
            br label %37
            >+
        <]
        >#B:%37
        [
            -
            %38 = load i32* %3_ align 4
            >>>>>>>>>>>>>>>>>>>>>>>>[-]
            d26/46/48 <<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>+>>+<<<<<<<<<<<<<<<<<<<<<<]
            m48/26 >>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>]
            %39 = add i32 %38_ i32 1
            <[-]
            d46/48/49 <[->>+>+<<<]
            m48/46 >>[-<<+>>]
            op_to_reg storing const value in temp address
            >>#constop_1
            +
            m49/47 <[-<<+>>]
            >[
                -
                <<<+
            >>>]
            store i32 %39_ i32* %3_ align 4
            d47/48/49 <<<[->+>+<<]
            m48/47 >[-<+>]
            <<<<<<<<<<<<<<<<<<<<<<[-]
            m49/26 >>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>]
            br label %23
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+
        >>>>>>>]
        >#B:%40
        [
            -
            ret void
            zero all function allocs
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<-
            #dead_frame
            >>>-
            l1 <
            <<<[-]
            r1 >
            l7 <<<<<<<
        >>>>>>>>>>>>>>>>>>>>>>>]
    <<<<<<<<<<<<<<<<<<<<]
<<<]
