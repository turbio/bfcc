r5 >>>>>
+++++
r1 >
runtime init:
#===TOP_FRAME
+
>>#main
+
>#main/b0
+
<<<[
    >#another_stack
    [
        >>>#B:%ret_lading_pad
        [
            <<<<-
            #dead_frame
            >-
            <#dead_fn_pad/another_stack
            >>>>-
            l63 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
        ]
        <<<<#mainloop_another_stack
        >#F:another_stack
        >#F:main
        >#B:%no_block0_call_for_another_stack
        >#B:%ret_lading_pad
        >#B:%0
        >#B:%call_term_for_0
        >#B:%call_term_for_1
        >#B:%call_term_for_2
        >#B:%call_term_for_3
        >#B:%call_term_for_4
        >#alloc_%1
        >#alloc_%2
        >#alloc_%3
        >#alloc_%4
        >#alloc_%5
        >#%6_=_ptrtoint_i32*_%1_to_i8(mult)
        >#%7_=_load_i8*_%2__align_1(mult)
        >#%8_=_zext_i8_%7_to_i32(mult)
        >#%9_=_icmp_sgt_i32_%8__i32_0(mult)
        >#%10_=_zext_i1_%9_to_i32(mult)
        >#%11_=_add_i32_65__i32_%10(mult)
        >#%12_=_trunc_i32_%11_to_i8(mult)
        >#%13_=_ptrtoint_i32*_%1_to_i8(mult)
        >#%14_=_zext_i8_%13_to_i32(mult)
        >#%15_=_load_i8*_%2__align_1(mult)
        >#%16_=_zext_i8_%15_to_i32(mult)
        >#%17_=_icmp_eq_i32_%14__i32_%16(mult)
        >#%18_=_zext_i1_%17_to_i32(mult)
        >#%19_=_add_i32_65__i32_%18(mult)
        >#%20_=_trunc_i32_%19_to_i8(mult)
        >#%21_=_load_i8*_%2__align_1(mult)
        >#%22_=_zext_i8_%21_to_i64(mult)
        >#%23_=_inttoptr_i64_%22_to_i32*(mult)
        >#%24_=_icmp_eq_i32*_%1__i32*_%23(mult)
        >#%25_=_zext_i1_%24_to_i32(mult)
        >#%26_=_add_i32_65__i32_%25(mult)
        >#%27_=_trunc_i32_%26_to_i8(mult)
        >#%28_=_load_i32**_%3__align_8(mult)
        >#%29_=_load_i32*_%28__align_4(mult)
        >#%30_=_load_i32*_%4__align_4(mult)
        >#%31_=_trunc_i32_%30_to_i8(mult)
        >#%32_=_load_i32**_%3__align_8(mult)
        >#%33_=_load_i32**_%3__align_8(mult)
        >#%34_=_load_i32*_%33__align_4(mult)
        >#%35_=_load_i32*_%5__align_4(mult)
        >#%36_=_trunc_i32_%35_to_i8(mult)
        <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<#B:%no_block0_call_for_another_stack
        [
            -
            copy up args
            br label %0
            >>+
        <<]
        >>#B:%0
        [
            -
            %1 = alloca i32_ align 4
            %2 = alloca i8_ align 1
            %3 = alloca i32*_ align 8
            %4 = alloca i32_ align 4
            %5 = alloca i32_ align 4
            store i32 112_ i32* %1_ align 4
            op_to_reg storing const value in temp address
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#constop_112
            ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[-]
            m47/11 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            %6 = ptrtoint i32* %1 to i8
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[-]
            resolve alloca addr storing pointer value in temp address
            l1 <
            d0/49/48 <<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+<+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m48/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            ++++++++++++
            m48/16 [-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            store i8 %6_ i8* %2_ align 1
            d16/47/49 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m47/16 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[-]
            m49/12 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            store i32* %1_ i32** %3_ align 8
            resolve alloca addr storing pointer value in temp address
            l1 <
            d0/48/49 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m49/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            <<++++++++++++
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[-]
            m47/13 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            %7 = load i8* %2_ align 1
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[-]
            d12/17/47 <<<<<[->>>>>+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m47/12 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            %8 = zext i8 %7 to i32
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<[-]
            d17/47/48 <[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m47/17 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            m48/18 >[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            %9 = icmp sgt i32 %8_ i32 0
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<[-]
            d18/47/48 <[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m47/18 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            op_to_reg storing const value in temp address
            >>>#constop_0
            
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m48/51 <<<<<[->>>+<<<]
            >>>>>+
            <<<[
                -
                
                >[
                    -
                    
                    r1 >
                ]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <]
            >>>-
            <<[
                [-]
                <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            %10 = zext i1 %9 to i32
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[-]
            d19/47/48 <[->>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m47/19 >>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            m48/20 >[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            %11 = add i32 65_ i32 %10
            <<<<<<<<<<<<<<<<<<<<<<<<<<<[-]
            op_to_reg storing const value in temp address
            >>>>>>>>>>>>>>>>>>>>>>>>>>#constop_65
            +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            d20/48/49 <<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m48/20 >>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            m47/21 <[-<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>]
            >>[
                -
                <<<<<<<<<<<<<<<<<<<<<<<<<<<<+
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            %12 = trunc i32 %11 to i8
            <<<<<<<<<<<<<<<<<<<<<<<<<<<[-]
            d21/47/48 <[->>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m47/21 >>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>]
            m48/22 >[-<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>]
            call @putchar(i8 %12)
            enable next block when we return
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<#caller/%call_term_for_0
            +
            putchar intrinsic
            d22/47/48 >>>>>>>>>>>>>>>>[->>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m47/22 >>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>]
            >.
            [-]
        <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
        >#B:%call_term_for_0
        [
            -
            %13 = ptrtoint i32* %1 to i8
            >>>>>>>>>>>>>>>>>[-]
            resolve alloca addr storing pointer value in temp address
            l1 <
            d0/48/49 <<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m49/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            <<++++++++++++
            m47/23 [-<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>]
            %14 = zext i8 %13 to i32
            <<<<<<<<<<<<<<<<<<<<<<<[-]
            d23/47/48 <[->>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<]
            m47/23 >>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>]
            m48/24 >[-<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>]
            %15 = load i8* %2_ align 1
            <<<<<<<<<<<<<<<<<<<<<<<[-]
            d12/25/47 <<<<<<<<<<<<<[->>>>>>>>>>>>>+>>>>>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m47/12 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            %16 = zext i8 %15 to i32
            <<<<<<<<<<<<<<<<<<<<<[-]
            d25/47/48 <[->>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<]
            m47/25 >>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>]
            m48/26 >[-<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>]
            %17 = icmp eq i32 %14_ i32 %16
            <<<<<<<<<<<<<<<<<<<<<[-]
            d24/47/48 <<<[->>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<]
            m47/24 >>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>]
            d26/49/50 <<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<]
            m49/26 >>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>]
            >>>>>#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m50/54 <<<<<<[->>>>+<<<<]
            >>>>>>+
            <<<<<<<<[
                -
                >>>+
                >>>[
                    -
                    <<<-
                    r1 >
                >>>]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<]
            >>>>>>>>-
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<+
            >>>>>>>>>>>>>>>>>>>>>>>>>>>[
                [-]
                <<<<<<<<<<<<<<<<<<<<<<<<<<<[-]
            >>>>>>>>>>>>>>>>>>>>>>>>>>>]
            <<<[
                [-]
                <<<<<<<<<<<<<<<<<<<<<<<<[-]
            >>>>>>>>>>>>>>>>>>>>>>>>]
            %18 = zext i1 %17 to i32
            <<<<<<<<<<<<<<<<<<<<<<<[-]
            d27/47/48 <[->>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<]
            m47/27 >>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>]
            m48/28 >[-<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>]
            %19 = add i32 65_ i32 %18
            <<<<<<<<<<<<<<<<<<<[-]
            op_to_reg storing const value in temp address
            >>>>>>>>>>>>>>>>>>#constop_65
            +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            d28/48/49 <<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<]
            m48/28 >>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>]
            m47/29 <[-<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>]
            >>[
                -
                <<<<<<<<<<<<<<<<<<<<+
            >>>>>>>>>>>>>>>>>>>>]
            %20 = trunc i32 %19 to i8
            <<<<<<<<<<<<<<<<<<<[-]
            d29/47/48 <[->>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<]
            m47/29 >>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>]
            m48/30 >[-<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>]
            call @putchar(i8 %20)
            enable next block when we return
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<#caller/%call_term_for_1
            +
            putchar intrinsic
            d30/47/48 >>>>>>>>>>>>>>>>>>>>>>>[->>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<]
            m47/30 >>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>]
            >.
            [-]
        <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
        >#B:%call_term_for_1
        [
            -
            %21 = load i8* %2_ align 1
            >>>>>>>>>>>>>>>>>>>>>>>>[-]
            d12/31/47 <<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>+>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m47/12 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            %22 = zext i8 %21 to i64
            <<<<<<<<<<<<<<<[-]
            d31/47/48 <[->>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<]
            m47/31 >>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>]
            m48/32 >[-<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>]
            %23 = inttoptr i64 %22 to i32*
            <<<<<<<<<<<<<<<[-]
            d32/47/48 <[->>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<]
            m47/32 >>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>]
            m48/33 >[-<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>]
            %24 = icmp eq i32* %1_ i32* %23
            <<<<<<<<<<<<<<[-]
            resolve alloca addr storing pointer value in temp address
            l1 <
            d0/48/49 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m49/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            <<++++++++++++
            d33/49/50 <<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<]
            m49/33 >>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>]
            >>>#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m50/52 <<<<[->>+<<]
            >>>>+
            <<<<<<<[
                -
                >>>>+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<]
            >>>>>>>-
            <<<<<<<<<<<<<<<<<<<<+
            >>>>>>>>>>>>>>>>>>[
                [-]
                <<<<<<<<<<<<<<<<<<[-]
            >>>>>>>>>>>>>>>>>>]
            <[
                [-]
                <<<<<<<<<<<<<<<<<[-]
            >>>>>>>>>>>>>>>>>]
            %25 = zext i1 %24 to i32
            <<<<<<<<<<<<<<<<[-]
            d34/47/48 <[->>>>>>>>>>>>>+>+<<<<<<<<<<<<<<]
            m47/34 >>>>>>>>>>>>>[-<<<<<<<<<<<<<+>>>>>>>>>>>>>]
            m48/35 >[-<<<<<<<<<<<<<+>>>>>>>>>>>>>]
            %26 = add i32 65_ i32 %25
            <<<<<<<<<<<<[-]
            op_to_reg storing const value in temp address
            >>>>>>>>>>>#constop_65
            +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            d35/48/49 <<<<<<<<<<<<[->>>>>>>>>>>>>+>+<<<<<<<<<<<<<<]
            m48/35 >>>>>>>>>>>>>[-<<<<<<<<<<<<<+>>>>>>>>>>>>>]
            m47/36 <[-<<<<<<<<<<<+>>>>>>>>>>>]
            >>[
                -
                <<<<<<<<<<<<<+
            >>>>>>>>>>>>>]
            %27 = trunc i32 %26 to i8
            <<<<<<<<<<<<[-]
            d36/47/48 <[->>>>>>>>>>>+>+<<<<<<<<<<<<]
            m47/36 >>>>>>>>>>>[-<<<<<<<<<<<+>>>>>>>>>>>]
            m48/37 >[-<<<<<<<<<<<+>>>>>>>>>>>]
            call @putchar(i8 %27)
            enable next block when we return
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<#caller/%call_term_for_2
            +
            putchar intrinsic
            d37/47/48 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>[->>>>>>>>>>+>+<<<<<<<<<<<]
            m47/37 >>>>>>>>>>[-<<<<<<<<<<+>>>>>>>>>>]
            >.
            [-]
        <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
        >#B:%call_term_for_2
        [
            -
            %28 = load i32** %3_ align 8
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-]
            d13/38/47 <<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>+>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m47/13 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            %29 = load i32* %28_ align 4
            <<<<<<<<[-]
            d38/47/48 <[->>>>>>>>>+>+<<<<<<<<<<]
            m47/38 >>>>>>>>>[-<<<<<<<<<+>>>>>>>>>]
            >>#train_tmp
            >#train_ret
            >#train_ptr
            
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/53/54 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m53/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >>>#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m53/57 <<<<<<[->>>>+<<<<]
            >>>>>>+
            <<<<<<<<<<<[
                -
                >>>>>>+
                >>>[
                    -
                    <<<-
                    r1 >
                >>>]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<<<]
            >>>>>>>>>>>-
            <<#subnu_to
            [
                if pos
                m57/51 [-<<<<<<+>>>>>>]
                <<<<<<+++++++++++++++++++++++++++++++++++++++++++++++++
            >>>>>>]
            <<<[
                if neg
                <<<+++++++++++++++++++++++++++++++++++++++++++++++++
                >>>[
                    -
                    <<<-
                >>>]
            ]
            drive left! choo choo
            <<<[
                m50/49 <[-<+>]
                m51/50 >[-<+>]
                
                m48/51 <<<[->>>+<<<]
                l1 <
                >>>-
                <+
            >]
            get our bag
            d48/49/51 <<<[->+>>+<<<]
            m49/48 >[-<+>]
            >[
                m52/49 >>[-<<<+>>>]
                m51/52 <[->+<]
                m50/51 <[->+<]
                r1 >
                -
            ]
            m51/39 >[-<<<<<<<<<<<<+>>>>>>>>>>>>]
            store i32 %29_ i32* %4_ align 4
            d39/47/48 <<<<<<<<<<<<[->>>>>>>>+>+<<<<<<<<<]
            m47/39 >>>>>>>>[-<<<<<<<<+>>>>>>>>]
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[-]
            m48/14 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            %30 = load i32* %4_ align 4
            <<<<<<<<[-]
            d14/40/47 <<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>+>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m47/14 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            %31 = trunc i32 %30 to i8
            <<<<<<[-]
            d40/47/48 <[->>>>>>>+>+<<<<<<<<]
            m47/40 >>>>>>>[-<<<<<<<+>>>>>>>]
            m48/41 >[-<<<<<<<+>>>>>>>]
            call @putchar(i8 %31)
            enable next block when we return
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<#caller/%call_term_for_3
            +
            putchar intrinsic
            d41/47/48 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[->>>>>>+>+<<<<<<<]
            m47/41 >>>>>>[-<<<<<<+>>>>>>]
            >.
            [-]
        <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
        >#B:%call_term_for_3
        [
            -
            %32 = load i32** %3_ align 8
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-]
            d13/42/47 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m47/13 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            store i32 97_ i32* %32_ align 4
            op_to_reg storing const value in temp address
            #constop_97
            +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            d42/48/49 <<<<<[->>>>>>+>+<<<<<<<]
            m48/42 >>>>>>[-<<<<<<+>>>>>>]
            >>#train_tmp
            >#train_ret
            >#train_ptr
            >#train_cargo
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/55/56 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m55/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >>>>#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m55/60 <<<<<<<[->>>>>+<<<<<]
            >>>>>>>+
            <<<<<<<<<<<<<[
                -
                >>>>>>>+
                >>>>[
                    -
                    <<<<-
                    r1 >
                >>>>]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<<<<<]
            >>>>>>>>>>>>>-
            <<#subnu_to
            [
                if pos
                m60/52 [-<<<<<<<<+>>>>>>>>]
                <<<<<<<<++++++++++++++++++++++++++++++++++++++++++++++++++
            >>>>>>>>]
            <<<<[
                if neg
                <<<<++++++++++++++++++++++++++++++++++++++++++++++++++
                >>>>[
                    -
                    <<<<-
                >>>>]
            ]
            m47/53 <<<<<<<<<[->>>>>>+<<<<<<]
            drive left! choo choo
            >>>>>[
                m51/50 <[-<+>]
                m52/51 >[-<+>]
                m53/52 >[-<+>]
                m49/53 <<<<[->>>>+<<<<]
                l1 <
                >>>-
                <+
            >]
            <<<[-]
            m53/49 >>>>[-<<<<+>>>>]
            <<[
                m54/50 >>>[-<<<<+>>>>]
                
                m51/52 <<<[->+<]
                r1 >
                -
            ]
            %33 = load i32** %3_ align 8
            <<<<<<<<[-]
            d13/43/47 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>>>>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m47/13 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            %34 = load i32* %33_ align 4
            <<<[-]
            d43/47/48 <[->>>>+>+<<<<<]
            m47/43 >>>>[-<<<<+>>>>]
            >>#train_tmp
            >#train_ret
            >#train_ptr
            
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/53/54 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m53/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m53/55 <<<<[->>+<<]
            >>>>+
            <<<<<<<<<[
                -
                >>>>>>+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<]
            >>>>>>>>>-
            <<#subnu_to
            [
                if pos
                m55/51 [-<<<<+>>>>]
                <<<<+++++++++++++++++++++++++++++++++++++++++++++++++
            >>>>]
            <[
                if neg
                <<<+++++++++++++++++++++++++++++++++++++++++++++++++
                >>>[
                    -
                    <<<-
                >>>]
            ]
            drive left! choo choo
            <<<[
                m50/49 <[-<+>]
                m51/50 >[-<+>]
                
                m48/51 <<<[->>>+<<<]
                l1 <
                >>>-
                <+
            >]
            get our bag
            d48/49/51 <<<[->+>>+<<<]
            m49/48 >[-<+>]
            >[
                m52/49 >>[-<<<+>>>]
                m51/52 <[->+<]
                m50/51 <[->+<]
                r1 >
                -
            ]
            m51/44 >[-<<<<<<<+>>>>>>>]
            store i32 %34_ i32* %5_ align 4
            d44/47/48 <<<<<<<[->>>+>+<<<<]
            m47/44 >>>[-<<<+>>>]
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[-]
            m48/15 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            %35 = load i32* %5_ align 4
            <<<[-]
            d15/45/47 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m47/15 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            %36 = trunc i32 %35 to i8
            <[-]
            d45/47/48 <[->>+>+<<<]
            m47/45 >>[-<<+>>]
            m48/46 >[-<<+>>]
            call @putchar(i8 %36)
            enable next block when we return
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<#caller/%call_term_for_4
            +
            putchar intrinsic
            d46/47/48 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[->+>+<<]
            m47/46 >[-<+>]
            >.
            [-]
        <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
        >#B:%call_term_for_4
        [
            -
            ret void
            zero all function allocs
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<-
            #dead_frame
            >-
            l1 <
            <[-]
            r1 >
            l6 <<<<<<
        >>>>>>>>>>]
    <<<<<<<<<]
    >#main
    [
        >>#B:%ret_lading_pad
        [
            <<<<-
            #dead_frame
            >>-
            <<#dead_fn_pad/main
            >>>>-
            l64 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
        ]
        <<<<#mainloop_main
        >#F:another_stack
        >#F:main
        >#B:%no_block0_call_for_main
        >#B:%ret_lading_pad
        >#B:%0
        >#B:%call_term_for_0
        >#B:%call_term_for_1
        >#B:%call_term_for_2
        >#B:%call_term_for_3
        >#B:%call_term_for_4
        >#B:%call_term_for_5
        >#alloc_%1
        >#alloc_%2
        >#alloc_%3
        >#alloc_%4
        >#alloc_%5
        >#%6_=_ptrtoint_i32*_%1_to_i8(mult)
        >#%7_=_load_i8*_%2__align_1(mult)
        >#%8_=_zext_i8_%7_to_i32(mult)
        >#%9_=_icmp_sgt_i32_%8__i32_0(mult)
        >#%10_=_zext_i1_%9_to_i32(mult)
        >#%11_=_add_i32_65__i32_%10(mult)
        >#%12_=_trunc_i32_%11_to_i8(mult)
        >#%13_=_ptrtoint_i32*_%1_to_i8(mult)
        >#%14_=_zext_i8_%13_to_i32(mult)
        >#%15_=_load_i8*_%2__align_1(mult)
        >#%16_=_zext_i8_%15_to_i32(mult)
        >#%17_=_icmp_eq_i32_%14__i32_%16(mult)
        >#%18_=_zext_i1_%17_to_i32(mult)
        >#%19_=_add_i32_65__i32_%18(mult)
        >#%20_=_trunc_i32_%19_to_i8(mult)
        >#%21_=_load_i8*_%2__align_1(mult)
        >#%22_=_zext_i8_%21_to_i64(mult)
        >#%23_=_inttoptr_i64_%22_to_i32*(mult)
        >#%24_=_icmp_eq_i32*_%1__i32*_%23(mult)
        >#%25_=_zext_i1_%24_to_i32(mult)
        >#%26_=_add_i32_65__i32_%25(mult)
        >#%27_=_trunc_i32_%26_to_i8(mult)
        >#%28_=_load_i32**_%3__align_8(mult)
        >#%29_=_load_i32*_%28__align_4(mult)
        >#%30_=_load_i32*_%4__align_4(mult)
        >#%31_=_trunc_i32_%30_to_i8(mult)
        >#%32_=_load_i32**_%3__align_8(mult)
        >#%33_=_load_i32**_%3__align_8(mult)
        >#%34_=_load_i32*_%33__align_4(mult)
        >#%35_=_load_i32*_%5__align_4(mult)
        >#%36_=_trunc_i32_%35_to_i8(mult)
        <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<#B:%no_block0_call_for_main
        [
            -
            copy up args
            br label %0
            >>+
        <<]
        >>#B:%0
        [
            -
            %1 = alloca i32_ align 4
            %2 = alloca i8_ align 1
            %3 = alloca i32*_ align 8
            %4 = alloca i32_ align 4
            %5 = alloca i32_ align 4
            store i32 112_ i32* %1_ align 4
            op_to_reg storing const value in temp address
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#constop_112
            ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[-]
            m48/12 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            %6 = ptrtoint i32* %1 to i8
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[-]
            resolve alloca addr storing pointer value in temp address
            l1 <
            d0/50/49 <<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+<+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m49/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            +++++++++++++
            m49/17 [-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            store i8 %6_ i8* %2_ align 1
            d17/48/50 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m48/17 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[-]
            m50/13 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            store i32* %1_ i32** %3_ align 8
            resolve alloca addr storing pointer value in temp address
            l1 <
            d0/49/50 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m50/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            <<+++++++++++++
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[-]
            m48/14 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            %7 = load i8* %2_ align 1
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[-]
            d13/18/48 <<<<<[->>>>>+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m48/13 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            %8 = zext i8 %7 to i32
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<[-]
            d18/48/49 <[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m48/18 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            m49/19 >[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            %9 = icmp sgt i32 %8_ i32 0
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<[-]
            d19/48/49 <[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m48/19 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            op_to_reg storing const value in temp address
            >>>#constop_0
            
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m49/52 <<<<<[->>>+<<<]
            >>>>>+
            <<<[
                -
                
                >[
                    -
                    
                    r1 >
                ]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <]
            >>>-
            <<[
                [-]
                <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            %10 = zext i1 %9 to i32
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[-]
            d20/48/49 <[->>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m48/20 >>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            m49/21 >[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            %11 = add i32 65_ i32 %10
            <<<<<<<<<<<<<<<<<<<<<<<<<<<[-]
            op_to_reg storing const value in temp address
            >>>>>>>>>>>>>>>>>>>>>>>>>>#constop_65
            +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            d21/49/50 <<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m49/21 >>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            m48/22 <[-<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>]
            >>[
                -
                <<<<<<<<<<<<<<<<<<<<<<<<<<<<+
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            %12 = trunc i32 %11 to i8
            <<<<<<<<<<<<<<<<<<<<<<<<<<<[-]
            d22/48/49 <[->>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m48/22 >>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>]
            m49/23 >[-<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>]
            call @putchar(i8 %12)
            enable next block when we return
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<#caller/%call_term_for_0
            +
            putchar intrinsic
            d23/48/49 >>>>>>>>>>>>>>>>>[->>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m48/23 >>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>]
            >.
            [-]
        <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
        >#B:%call_term_for_0
        [
            -
            %13 = ptrtoint i32* %1 to i8
            >>>>>>>>>>>>>>>>>>[-]
            resolve alloca addr storing pointer value in temp address
            l1 <
            d0/49/50 <<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m50/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            <<+++++++++++++
            m48/24 [-<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>]
            %14 = zext i8 %13 to i32
            <<<<<<<<<<<<<<<<<<<<<<<[-]
            d24/48/49 <[->>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<]
            m48/24 >>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>]
            m49/25 >[-<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>]
            %15 = load i8* %2_ align 1
            <<<<<<<<<<<<<<<<<<<<<<<[-]
            d13/26/48 <<<<<<<<<<<<<[->>>>>>>>>>>>>+>>>>>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m48/13 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            %16 = zext i8 %15 to i32
            <<<<<<<<<<<<<<<<<<<<<[-]
            d26/48/49 <[->>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<]
            m48/26 >>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>]
            m49/27 >[-<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>]
            %17 = icmp eq i32 %14_ i32 %16
            <<<<<<<<<<<<<<<<<<<<<[-]
            d25/48/49 <<<[->>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<]
            m48/25 >>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>]
            d27/50/51 <<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<]
            m50/27 >>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>]
            >>>>>#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m51/55 <<<<<<[->>>>+<<<<]
            >>>>>>+
            <<<<<<<<[
                -
                >>>+
                >>>[
                    -
                    <<<-
                    r1 >
                >>>]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<]
            >>>>>>>>-
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<+
            >>>>>>>>>>>>>>>>>>>>>>>>>>>[
                [-]
                <<<<<<<<<<<<<<<<<<<<<<<<<<<[-]
            >>>>>>>>>>>>>>>>>>>>>>>>>>>]
            <<<[
                [-]
                <<<<<<<<<<<<<<<<<<<<<<<<[-]
            >>>>>>>>>>>>>>>>>>>>>>>>]
            %18 = zext i1 %17 to i32
            <<<<<<<<<<<<<<<<<<<<<<<[-]
            d28/48/49 <[->>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<]
            m48/28 >>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>]
            m49/29 >[-<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>]
            %19 = add i32 65_ i32 %18
            <<<<<<<<<<<<<<<<<<<[-]
            op_to_reg storing const value in temp address
            >>>>>>>>>>>>>>>>>>#constop_65
            +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            d29/49/50 <<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<]
            m49/29 >>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>]
            m48/30 <[-<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>]
            >>[
                -
                <<<<<<<<<<<<<<<<<<<<+
            >>>>>>>>>>>>>>>>>>>>]
            %20 = trunc i32 %19 to i8
            <<<<<<<<<<<<<<<<<<<[-]
            d30/48/49 <[->>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<]
            m48/30 >>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>]
            m49/31 >[-<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>]
            call @putchar(i8 %20)
            enable next block when we return
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<#caller/%call_term_for_1
            +
            putchar intrinsic
            d31/48/49 >>>>>>>>>>>>>>>>>>>>>>>>[->>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<]
            m48/31 >>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>]
            >.
            [-]
        <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
        >#B:%call_term_for_1
        [
            -
            %21 = load i8* %2_ align 1
            >>>>>>>>>>>>>>>>>>>>>>>>>[-]
            d13/32/48 <<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>+>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m48/13 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            %22 = zext i8 %21 to i64
            <<<<<<<<<<<<<<<[-]
            d32/48/49 <[->>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<]
            m48/32 >>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>]
            m49/33 >[-<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>]
            %23 = inttoptr i64 %22 to i32*
            <<<<<<<<<<<<<<<[-]
            d33/48/49 <[->>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<]
            m48/33 >>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>]
            m49/34 >[-<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>]
            %24 = icmp eq i32* %1_ i32* %23
            <<<<<<<<<<<<<<[-]
            resolve alloca addr storing pointer value in temp address
            l1 <
            d0/49/50 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m50/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            <<+++++++++++++
            d34/50/51 <<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<]
            m50/34 >>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>]
            >>>#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m51/53 <<<<[->>+<<]
            >>>>+
            <<<<<<<[
                -
                >>>>+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<]
            >>>>>>>-
            <<<<<<<<<<<<<<<<<<<<+
            >>>>>>>>>>>>>>>>>>[
                [-]
                <<<<<<<<<<<<<<<<<<[-]
            >>>>>>>>>>>>>>>>>>]
            <[
                [-]
                <<<<<<<<<<<<<<<<<[-]
            >>>>>>>>>>>>>>>>>]
            %25 = zext i1 %24 to i32
            <<<<<<<<<<<<<<<<[-]
            d35/48/49 <[->>>>>>>>>>>>>+>+<<<<<<<<<<<<<<]
            m48/35 >>>>>>>>>>>>>[-<<<<<<<<<<<<<+>>>>>>>>>>>>>]
            m49/36 >[-<<<<<<<<<<<<<+>>>>>>>>>>>>>]
            %26 = add i32 65_ i32 %25
            <<<<<<<<<<<<[-]
            op_to_reg storing const value in temp address
            >>>>>>>>>>>#constop_65
            +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            d36/49/50 <<<<<<<<<<<<[->>>>>>>>>>>>>+>+<<<<<<<<<<<<<<]
            m49/36 >>>>>>>>>>>>>[-<<<<<<<<<<<<<+>>>>>>>>>>>>>]
            m48/37 <[-<<<<<<<<<<<+>>>>>>>>>>>]
            >>[
                -
                <<<<<<<<<<<<<+
            >>>>>>>>>>>>>]
            %27 = trunc i32 %26 to i8
            <<<<<<<<<<<<[-]
            d37/48/49 <[->>>>>>>>>>>+>+<<<<<<<<<<<<]
            m48/37 >>>>>>>>>>>[-<<<<<<<<<<<+>>>>>>>>>>>]
            m49/38 >[-<<<<<<<<<<<+>>>>>>>>>>>]
            call @putchar(i8 %27)
            enable next block when we return
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<#caller/%call_term_for_2
            +
            putchar intrinsic
            d38/48/49 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[->>>>>>>>>>+>+<<<<<<<<<<<]
            m48/38 >>>>>>>>>>[-<<<<<<<<<<+>>>>>>>>>>]
            >.
            [-]
        <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
        >#B:%call_term_for_2
        [
            -
            %28 = load i32** %3_ align 8
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-]
            d14/39/48 <<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>+>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m48/14 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            %29 = load i32* %28_ align 4
            <<<<<<<<[-]
            d39/48/49 <[->>>>>>>>>+>+<<<<<<<<<<]
            m48/39 >>>>>>>>>[-<<<<<<<<<+>>>>>>>>>]
            >>#train_tmp
            >#train_ret
            >#train_ptr
            
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/54/55 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m54/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >>>#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m54/58 <<<<<<[->>>>+<<<<]
            >>>>>>+
            <<<<<<<<<<<[
                -
                >>>>>>+
                >>>[
                    -
                    <<<-
                    r1 >
                >>>]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<<<]
            >>>>>>>>>>>-
            <<#subnu_to
            [
                if pos
                m58/52 [-<<<<<<+>>>>>>]
                <<<<<<++++++++++++++++++++++++++++++++++++++++++++++++++
            >>>>>>]
            <<<[
                if neg
                <<<++++++++++++++++++++++++++++++++++++++++++++++++++
                >>>[
                    -
                    <<<-
                >>>]
            ]
            drive left! choo choo
            <<<[
                m51/50 <[-<+>]
                m52/51 >[-<+>]
                
                m49/52 <<<[->>>+<<<]
                l1 <
                >>>-
                <+
            >]
            get our bag
            d49/50/52 <<<[->+>>+<<<]
            m50/49 >[-<+>]
            >[
                m53/50 >>[-<<<+>>>]
                m52/53 <[->+<]
                m51/52 <[->+<]
                r1 >
                -
            ]
            m52/40 >[-<<<<<<<<<<<<+>>>>>>>>>>>>]
            store i32 %29_ i32* %4_ align 4
            d40/48/49 <<<<<<<<<<<<[->>>>>>>>+>+<<<<<<<<<]
            m48/40 >>>>>>>>[-<<<<<<<<+>>>>>>>>]
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[-]
            m49/15 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            %30 = load i32* %4_ align 4
            <<<<<<<<[-]
            d15/41/48 <<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>+>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m48/15 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            %31 = trunc i32 %30 to i8
            <<<<<<[-]
            d41/48/49 <[->>>>>>>+>+<<<<<<<<]
            m48/41 >>>>>>>[-<<<<<<<+>>>>>>>]
            m49/42 >[-<<<<<<<+>>>>>>>]
            call @putchar(i8 %31)
            enable next block when we return
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<#caller/%call_term_for_3
            +
            putchar intrinsic
            d42/48/49 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[->>>>>>+>+<<<<<<<]
            m48/42 >>>>>>[-<<<<<<+>>>>>>]
            >.
            [-]
        <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
        >#B:%call_term_for_3
        [
            -
            %32 = load i32** %3_ align 8
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-]
            d14/43/48 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m48/14 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            store i32 97_ i32* %32_ align 4
            op_to_reg storing const value in temp address
            #constop_97
            +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            d43/49/50 <<<<<[->>>>>>+>+<<<<<<<]
            m49/43 >>>>>>[-<<<<<<+>>>>>>]
            >>#train_tmp
            >#train_ret
            >#train_ptr
            >#train_cargo
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/56/57 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m56/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >>>>#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m56/61 <<<<<<<[->>>>>+<<<<<]
            >>>>>>>+
            <<<<<<<<<<<<<[
                -
                >>>>>>>+
                >>>>[
                    -
                    <<<<-
                    r1 >
                >>>>]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<<<<<]
            >>>>>>>>>>>>>-
            <<#subnu_to
            [
                if pos
                m61/53 [-<<<<<<<<+>>>>>>>>]
                <<<<<<<<+++++++++++++++++++++++++++++++++++++++++++++++++++
            >>>>>>>>]
            <<<<[
                if neg
                <<<<+++++++++++++++++++++++++++++++++++++++++++++++++++
                >>>>[
                    -
                    <<<<-
                >>>>]
            ]
            m48/54 <<<<<<<<<[->>>>>>+<<<<<<]
            drive left! choo choo
            >>>>>[
                m52/51 <[-<+>]
                m53/52 >[-<+>]
                m54/53 >[-<+>]
                m50/54 <<<<[->>>>+<<<<]
                l1 <
                >>>-
                <+
            >]
            <<<[-]
            m54/50 >>>>[-<<<<+>>>>]
            <<[
                m55/51 >>>[-<<<<+>>>>]
                
                m52/53 <<<[->+<]
                r1 >
                -
            ]
            %33 = load i32** %3_ align 8
            <<<<<<<<[-]
            d14/44/48 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>>>>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m48/14 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            %34 = load i32* %33_ align 4
            <<<[-]
            d44/48/49 <[->>>>+>+<<<<<]
            m48/44 >>>>[-<<<<+>>>>]
            >>#train_tmp
            >#train_ret
            >#train_ptr
            
            >>#stackptr
            <#stackptr_tmp
            l1 <
            d0/54/55 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m54/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            >#ptr_underflow
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            m54/56 <<<<[->>+<<]
            >>>>+
            <<<<<<<<<[
                -
                >>>>>>+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<<]
            >>>>>>>>>-
            <<#subnu_to
            [
                if pos
                m56/52 [-<<<<+>>>>]
                <<<<++++++++++++++++++++++++++++++++++++++++++++++++++
            >>>>]
            <[
                if neg
                <<<++++++++++++++++++++++++++++++++++++++++++++++++++
                >>>[
                    -
                    <<<-
                >>>]
            ]
            drive left! choo choo
            <<<[
                m51/50 <[-<+>]
                m52/51 >[-<+>]
                
                m49/52 <<<[->>>+<<<]
                l1 <
                >>>-
                <+
            >]
            get our bag
            d49/50/52 <<<[->+>>+<<<]
            m50/49 >[-<+>]
            >[
                m53/50 >>[-<<<+>>>]
                m52/53 <[->+<]
                m51/52 <[->+<]
                r1 >
                -
            ]
            m52/45 >[-<<<<<<<+>>>>>>>]
            store i32 %34_ i32* %5_ align 4
            d45/48/49 <<<<<<<[->>>+>+<<<<]
            m48/45 >>>[-<<<+>>>]
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[-]
            m49/16 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            %35 = load i32* %5_ align 4
            <<<[-]
            d16/46/48 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m48/16 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            %36 = trunc i32 %35 to i8
            <[-]
            d46/48/49 <[->>+>+<<<]
            m48/46 >>[-<<+>>]
            m49/47 >[-<<+>>]
            call @putchar(i8 %36)
            enable next block when we return
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<#caller/%call_term_for_4
            +
            putchar intrinsic
            d47/48/49 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[->+>+<<]
            m48/47 >[-<+>]
            >.
            [-]
        <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
        >#B:%call_term_for_4
        [
            -
            call @another_stack()
            enable next block when we return
            >#caller/%call_term_for_5
            +
            stack_width 64
            ret_pad_width 4
            give callee a stack pointer
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#stack_ptr
            +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            l1 <
            d0/70/71 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            m71/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            r64 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<#JUMP_PAD
            +
            >>#caller
            +
            >>#caller/jump_pad_blk
            +
            r6 >>>>>>
            <<<<#===FRAME_another_stack
            +
            >#another_stack
            +
            >>#another_stack/b0
            +
        >>>>>>>]
        >#B:%call_term_for_5
        [
            -
            ret void
            zero all function allocs
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<-
            #dead_frame
            >>-
            l1 <
            <<[-]
            r1 >
            l6 <<<<<<
        >>>>>>>>>>>]
    <<<<<<<<<]
<<]
