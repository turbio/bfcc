r7 >>>>>>>
+++++++
r1 >
runtime init:
#===TOP_FRAME
+
>>>>#main
+
>#main/b0
+
<<<<<[
    >#putstr
    [
        >>>>>#B:%ret_lading_pad
        [
            <<<<<<-
            #dead_frame
            >-
            <#dead_fn_pad/putstr
            >>>>>>-
            l26 <<<<<<<<<<<<<<<<<<<<<<<<<<
        ]
        <<<<<<#mainloop_putstr
        >#F:putstr
        >#F:putdec
        >#F:printi
        >#F:main
        >#B:%1
        >#B:%ret_lading_pad
        >#B:%3
        >#B:%6
        >#B:%call_term_for_2
        >#B:%11
        >#alloc_%2
        >#%4_=_load_i8**_%2__align_8(mult)
        >#%5_=_icmp_ne_i8*_%4__i8*_null(mult)
        >#%7_=_load_i8**_%2__align_8(mult)
        >#%8_=_ptrtoint_i8*_%7_to_i8(mult)
        >#%9_=_load_i8**_%2__align_8(mult)
        >#%10_=_getelementptr_i8*_%9__i32_1(mult)
        >#%0
        <<<<<<<<<<<<<#B:%1
        [
            -
            copy up args
            >>>>>>>>>>>>>#arg_%0
            l2 <<
            mov0/20 <<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<]
            r2 >>
            %2 = alloca i8*_ align 8
            store i8* %0_ i8** %2_ align 8
            >>>>>>>>>>>[-]
            mov18/11 >>>>>>>[-<<<<<<<+>>>>>>>]
            br label %3
            <<<<<<<<<<<+
        <<]
        >>#B:%3
        [
            -
            %4 = load i8** %2_ align 8
            >>>>>[-]
            dup11/12/19 <[->+>>>>>>>+<<<<<<<<]
            mov19/11 >>>>>>>>[-<<<<<<<<+>>>>>>>>]
            %5 = icmp ne i8* %4_ i8* null
            <<<<<<[-]
            dup12/20/19 <[->>>>>>>>+<+<<<<<<<]
            mov20/12 >>>>>>>>[-<<<<<<<<+>>>>>>>>]
            op_to_reg storing const value in temp address
            >#constop_0
            
            >>#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            mov19/23 <<<<<<[->>>>+<<<<]
            >>>>>>+
            <<<<[
                -
                >+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<]
            >>>>-
            <<[
                [-]
                <<<<<<<<<<+
            >>>>>>>>>>]
            <[
                [-]
                <<<<<<<<<+
            >>>>>>>>>]
            br i1 %5_ label %6_ label %11
            <<<<<<<<<<<<<<<<+
            >>>>>>>[
                -
                <<<<<<<-
                >>+
                #B:putstr/6_true
            >>>>>]
            <<<<<<<[
                -
                >>>>+
                #B:putstr/11_false
            <<<<]
        >]
        >#B:%6
        [
            -
            %7 = load i8** %2_ align 8
            >>>>>>[-]
            dup11/14/19 <<<[->>>+>>>>>+<<<<<<<<]
            mov19/11 >>>>>>>>[-<<<<<<<<+>>>>>>>>]
            %8 = ptrtoint i8* %7 to i8
            <<<<[-]
            dup14/19/20 <[->>>>>+>+<<<<<<]
            mov19/14 >>>>>[-<<<<<+>>>>>]
            mov20/15 >[-<<<<<+>>>>>]
            call @putchar(i8 %8)
            enable next block when we return
            <<<<<<<<<<<#caller/%call_term_for_2
            +
            putchar intrinsic
            dup15/19/20 >>>>>>[->>>>+>+<<<<<]
            mov19/15 >>>>[-<<<<+>>>>]
            >.
            [-]
        <<<<<<<<<<<<]
        >#B:%call_term_for_2
        [
            -
            %9 = load i8** %2_ align 8
            >>>>>>>[-]
            dup11/16/19 <<<<<[->>>>>+>>>+<<<<<<<<]
            mov19/11 >>>>>>>>[-<<<<<<<<+>>>>>>>>]
            %10 = getelementptr i8* %9_ i32 1
            <<[-]
            dup16/19/20 <[->>>+>+<<<<]
            mov19/16 >>>[-<<<+>>>]
            op_to_reg storing const value in temp address
            >>#constop_1
            +
            mov20/17 <[-<<<+>>>]
            >[
                -
                <<<<+
            >>>>]
            store i8* %10_ i8** %2_ align 8
            dup17/19/20 <<<<[->>+>+<<<]
            mov19/17 >>[-<<+>>]
            <<<<<<<<[-]
            mov20/11 >>>>>>>>>[-<<<<<<<<<+>>>>>>>>>]
            br label %3
            <<<<<<<<<<<<<+
        >>]
        >#B:%11
        [
            -
            ret void
            zero all function allocs
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            <<<<<<<<<<<<<<<<<-
            #dead_frame
            >-
            l1 <
            <[-]
            r1 >
            l9 <<<<<<<<<
        >>>>>>>>>>]
    <<<<<<<<<]
    >#putdec
    [
        >>>>#B:%ret_lading_pad
        [
            <<<<<<-
            #dead_frame
            >>-
            <<#dead_fn_pad/putdec
            >>>>>>-
            l49 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
        ]
        <<<<<<#mainloop_putdec
        >#F:putstr
        >#F:putdec
        >#F:printi
        >#F:main
        >#B:%1
        >#B:%ret_lading_pad
        >#B:%6
        >#B:%call_term_for_1
        >#B:%7
        >#B:%8
        >#B:%13
        >#B:%16
        >#B:%17
        >#B:%20
        >#B:%call_term_for_8
        >#B:%29
        >#alloc_%2
        >#alloc_%3
        >#%4_=_load_i32*_%2__align_4(mult)
        >#%5_=_icmp_ne_i32_%4__i32_0(mult)
        >#%9_=_load_i32*_%2__align_4(mult)
        >#%10_=_load_i32*_%3__align_4(mult)
        >#%11_=_sdiv_i32_%9__i32_%10(mult)
        >#%12_=_icmp_sgt_i32_%11__i32_10(mult)
        >#%14_=_load_i32*_%3__align_4(mult)
        >#%15_=_mul_i32_%14__i32_10(mult)
        >#%18_=_load_i32*_%3__align_4(mult)
        >#%19_=_icmp_ne_i32_%18__i32_0(mult)
        >#%21_=_load_i32*_%2__align_4(mult)
        >#%22_=_load_i32*_%3__align_4(mult)
        >#%23_=_sdiv_i32_%21__i32_%22(mult)
        >#%24_=_srem_i32_%23__i32_10(mult)
        >#%25_=_add_i32_48__i32_%24(mult)
        >#%26_=_trunc_i32_%25_to_i8(mult)
        >#%27_=_load_i32*_%3__align_4(mult)
        >#%28_=_sdiv_i32_%27__i32_10(mult)
        >#%0
        <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<#B:%1
        [
            -
            copy up args
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#arg_%0
            l2 <<
            mov0/39 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            r2 >>
            %2 = alloca i32_ align 4
            %3 = alloca i32_ align 4
            store i32 %0_ i32* %2_ align 4
            >>>>>>>>>>>>>>>>>[-]
            mov37/17 >>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>]
            %4 = load i32* %2_ align 4
            <<<<<<<<<<<<<<<<<<[-]
            dup17/19/38 <<[->>+>>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<]
            mov38/17 >>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>]
            %5 = icmp ne i32 %4_ i32 0
            <<<<<<<<<<<<<<<<<<[-]
            dup19/39/38 <[->>>>>>>>>>>>>>>>>>>>+<+<<<<<<<<<<<<<<<<<<<]
            mov39/19 >>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>]
            op_to_reg storing const value in temp address
            >#constop_0
            
            >>#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            mov38/42 <<<<<<[->>>>+<<<<]
            >>>>>>+
            <<<<[
                -
                >+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<]
            >>>>-
            <<[
                [-]
                <<<<<<<<<<<<<<<<<<<<<<+
            >>>>>>>>>>>>>>>>>>>>>>]
            <[
                [-]
                <<<<<<<<<<<<<<<<<<<<<+
            >>>>>>>>>>>>>>>>>>>>>]
            br i1 %5_ label %7_ label %6
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+
            >>>>>>>>>>>>>>[
                -
                <<<<<<<<<<<<<<-
                >>>+
                #B:putdec/7_true
            >>>>>>>>>>>]
            <<<<<<<<<<<<<<[
                -
                >+
                #B:putdec/6_false
            <]
        <]
        >>#B:%6
        [
            -
            call @putchar(i8 48)
            enable next block when we return
            >#caller/%call_term_for_1
            +
            putchar intrinsic
            op_to_reg storing const value in temp address
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#constop_48
            ++++++++++++++++++++++++++++++++++++++++++++++++
            .
            [-]
        <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
        >#B:%call_term_for_1
        [
            -
            br label %29
            >>>>>>>>+
        <<<<<<<<]
        >#B:%7
        [
            -
            store i32 1_ i32* %3_ align 4
            op_to_reg storing const value in temp address
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>#constop_1
            +
            <<<<<<<<<<<<<<<<<<<<[-]
            mov38/18 >>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>]
            br label %8
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<+
        <]
        >#B:%8
        [
            -
            %9 = load i32* %2_ align 4
            >>>>>>>>>>>[-]
            dup17/21/38 <<<<[->>>>+>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<]
            mov38/17 >>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>]
            %10 = load i32* %3_ align 4
            <<<<<<<<<<<<<<<<[-]
            dup18/22/38 <<<<[->>>>+>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<]
            mov38/18 >>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>]
            %11 = sdiv i32 %9_ i32 %10
            <<<<<<<<<<<<<<<[-]
            dup21/38/39 <<[->>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<]
            mov38/21 >>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>]
            dup22/40/41 <<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<]
            mov40/22 >>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>]
            dup41/43/45 >[->>+>>+<<<<]
            mov45/41 >>>>[-<<<<+>>>>]
            <<<<<<[
                >>>>>>>#subnu_tmpb
                >#subnu_tmp0
                >#subnu_tmp1
                mov39/46 <<<<<<<<<[->>>>>>>+<<<<<<<]
                >>>>>>>>>+
                <<<<<[
                    -
                    <+
                    >>>>[
                        -
                        <<<<-
                        r1 >
                    >>>>]
                    r1 >
                    [
                        l1 <
                    ]
                    l1 <
                <<<]
                >>>>>-
                <<<<<<<<<<<<<<<<<<<<<<<<<+
                >>>>>>>>>>>>>>>>>>>[
                    [-]
                    <<<<<<<<<<<<<<<<<<<-
                >>>>>>>>>>>>>>>>>>>]
                mov46/39 >>>>[-<<<<<<<+>>>>>>>]
                dup41/43/45 <<<<<[->>+>>+<<<<]
                mov45/41 >>>>[-<<<<+>>>>]
            <<<<<<]
            >>[-]
            >>[-]
            %12 = icmp sgt i32 %11_ i32 10
            <<<<<<<<<<<<<<<<<<<[-]
            dup23/38/39 <[->>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<]
            mov38/23 >>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>]
            op_to_reg storing const value in temp address
            >>#constop_10
            ++++++++++
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            mov39/41 <<<<[->>+<<]
            >>>>+
            <<<[
                -
                
                >[
                    -
                    
                    r1 >
                ]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <]
            >>>-
            <<[
                [-]
                <<<<<<<<<<<<<<<<<+
            >>>>>>>>>>>>>>>>>]
            br i1 %12_ label %13_ label %16
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+
            >>>>>>>>>>>>>>>>>>[
                -
                <<<<<<<<<<<<<<<<<<-
                >>>>>+
                #B:putdec/13_true
            >>>>>>>>>>>>>]
            <<<<<<<<<<<<<<<<<<[
                -
                >>>>>>+
                #B:putdec/16_false
            <<<<<<]
        >>>>]
        >#B:%13
        [
            -
            %14 = load i32* %3_ align 4
            >>>>>>>>>>>>>>[-]
            dup18/25/38 <<<<<<<[->>>>>>>+>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<]
            mov38/18 >>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>]
            %15 = mul i32 %14_ i32 10
            <<<<<<<<<<<<[-]
            dup25/38/39 <[->>>>>>>>>>>>>+>+<<<<<<<<<<<<<<]
            mov38/25 >>>>>>>>>>>>>[-<<<<<<<<<<<<<+>>>>>>>>>>>>>]
            op_to_reg storing const value in temp address
            >>#constop_10
            ++++++++++
            [
                -
                dup39/26/41 <[-<<<<<<<<<<<<<+>>>>>>>>>>>>>>>+<<]
                mov41/39 >>[-<<+>>]
            <]
            <[-]
            store i32 %15_ i32* %3_ align 4
            dup26/38/39 <<<<<<<<<<<<<[->>>>>>>>>>>>+>+<<<<<<<<<<<<<]
            mov38/26 >>>>>>>>>>>>[-<<<<<<<<<<<<+>>>>>>>>>>>>]
            <<<<<<<<<<<<<<<<<<<<[-]
            mov39/18 >>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>]
            br label %8
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<+
        >]
        >#B:%16
        [
            -
            br label %17
            >+
        <]
        >#B:%17
        [
            -
            %18 = load i32* %3_ align 4
            >>>>>>>>>>>>>>[-]
            dup18/27/38 <<<<<<<<<[->>>>>>>>>+>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<]
            mov38/18 >>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>]
            %19 = icmp ne i32 %18_ i32 0
            <<<<<<<<<<[-]
            dup27/38/39 <[->>>>>>>>>>>+>+<<<<<<<<<<<<]
            mov38/27 >>>>>>>>>>>[-<<<<<<<<<<<+>>>>>>>>>>>]
            op_to_reg storing const value in temp address
            >>#constop_0
            
            >>#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            mov39/42 <<<<<[->>>+<<<]
            >>>>>+
            <<<<[
                -
                >+
                >[
                    -
                    <-
                    r1 >
                >]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<]
            >>>>-
            <<[
                [-]
                <<<<<<<<<<<<<<+
            >>>>>>>>>>>>>>]
            <[
                [-]
                <<<<<<<<<<<<<+
            >>>>>>>>>>>>>]
            br i1 %19_ label %20_ label %29
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+
            >>>>>>>>>>>>>>>>>>>>>>[
                -
                <<<<<<<<<<<<<<<<<<<<<<-
                >>>>>>>>+
                #B:putdec/20_true
            >>>>>>>>>>>>>>]
            <<<<<<<<<<<<<<<<<<<<<<[
                -
                >>>>>>>>>>+
                #B:putdec/29_false
            <<<<<<<<<<]
        >>>>>>>]
        >#B:%20
        [
            -
            %21 = load i32* %2_ align 4
            >>>>>>>>>>>>>>>[-]
            dup17/29/38 <<<<<<<<<<<<[->>>>>>>>>>>>+>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<]
            mov38/17 >>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>]
            %22 = load i32* %3_ align 4
            <<<<<<<<[-]
            dup18/30/38 <<<<<<<<<<<<[->>>>>>>>>>>>+>>>>>>>>+<<<<<<<<<<<<<<<<<<<<]
            mov38/18 >>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>]
            %23 = sdiv i32 %21_ i32 %22
            <<<<<<<[-]
            dup29/38/39 <<[->>>>>>>>>+>+<<<<<<<<<<]
            mov38/29 >>>>>>>>>[-<<<<<<<<<+>>>>>>>>>]
            dup30/40/41 <<<<<<<<[->>>>>>>>>>+>+<<<<<<<<<<<]
            mov40/30 >>>>>>>>>>[-<<<<<<<<<<+>>>>>>>>>>]
            dup41/43/44 >[->>+>+<<<]
            mov44/41 >>>[-<<<+>>>]
            <<<<<[
                >>>>>>#subnu_tmpb
                >#subnu_tmp0
                >#subnu_tmp1
                mov39/45 <<<<<<<<[->>>>>>+<<<<<<]
                >>>>>>>>+
                <<<<[
                    -
                    <+
                    >>>[
                        -
                        <<<-
                        r1 >
                    >>>]
                    r1 >
                    [
                        l1 <
                    ]
                    l1 <
                <<]
                >>>>-
                <<<<<<<<<<<<<<<<+
                >>>>>>>>>>>[
                    [-]
                    <<<<<<<<<<<-
                >>>>>>>>>>>]
                mov45/39 >>>[-<<<<<<+>>>>>>]
                dup41/43/44 <<<<[->>+>+<<<]
                mov44/41 >>>[-<<<+>>>]
            <<<<<]
            >>[-]
            >>[-]
            %24 = srem i32 %23_ i32 10
            <<<<<<<<<<<[-]
            dup31/38/39 <[->>>>>>>+>+<<<<<<<<]
            mov38/31 >>>>>>>[-<<<<<<<+>>>>>>>]
            op_to_reg storing const value in temp address
            >>#constop_10
            ++++++++++
            dup40/42/43 [->>+>+<<<]
            mov43/40 >>>[-<<<+>>>]
            <<<<#op0
            >#op1
            >#neg
            <<[
                >>>>>#subnu_tmpb
                >#subnu_tmp0
                >#subnu_tmp1
                mov39/44 <<<<<<<[->>>>>+<<<<<]
                >>>>>>>+
                <<<<[
                    -
                    <+
                    >>>[
                        -
                        <<<-
                        r1 >
                    >>>]
                    r1 >
                    [
                        l1 <
                    ]
                    l1 <
                <<]
                >>>>-
                mov44/39 <<[-<<<<<+>>>>>]
                dup40/42/43 <<<<[->>+>+<<<]
                mov43/40 >>>[-<<<+>>>]
            <<<<]
            >>#neg
            [
                mov42/32 >[-<<<<<<<<<<+>>>>>>>>>>]
                <[
                    -
                    <<<<<<<<<-
                >>>>>>>>>]
            ]
            mov41/32 [-<<<<<<<<<+>>>>>>>>>]
            <[-]
            >>[-]
            %25 = add i32 48_ i32 %24
            <<<<<<<<<[-]
            op_to_reg storing const value in temp address
            >>>>>#constop_48
            ++++++++++++++++++++++++++++++++++++++++++++++++
            dup32/39/40 <<<<<<[->>>>>>>+>+<<<<<<<<]
            mov39/32 >>>>>>>[-<<<<<<<+>>>>>>>]
            mov38/33 <[-<<<<<+>>>>>]
            >>[
                -
                <<<<<<<+
            >>>>>>>]
            %26 = trunc i32 %25 to i8
            <<<<<<[-]
            dup33/38/39 <[->>>>>+>+<<<<<<]
            mov38/33 >>>>>[-<<<<<+>>>>>]
            mov39/34 >[-<<<<<+>>>>>]
            call @putchar(i8 %26)
            enable next block when we return
            <<<<<<<<<<<<<<<<<<<<<<<<#caller/%call_term_for_8
            +
            putchar intrinsic
            dup34/38/39 >>>>>>>>>>>>>>>>>>>[->>>>+>+<<<<<]
            mov38/34 >>>>[-<<<<+>>>>]
            >.
            [-]
        <<<<<<<<<<<<<<<<<<<<<<<<<]
        >#B:%call_term_for_8
        [
            -
            %27 = load i32* %3_ align 4
            >>>>>>>>>>>>>>>>>>>>[-]
            dup18/35/38 <<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>+>>>+<<<<<<<<<<<<<<<<<<<<]
            mov38/18 >>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>]
            %28 = sdiv i32 %27_ i32 10
            <<[-]
            dup35/38/39 <[->>>+>+<<<<]
            mov38/35 >>>[-<<<+>>>]
            op_to_reg storing const value in temp address
            >>#constop_10
            ++++++++++
            dup40/42/43 [->>+>+<<<]
            mov43/40 >>>[-<<<+>>>]
            <<<<[
                >>>>>#subnu_tmpb
                >#subnu_tmp0
                >#subnu_tmp1
                mov39/44 <<<<<<<[->>>>>+<<<<<]
                >>>>>>>+
                <<<<[
                    -
                    <+
                    >>>[
                        -
                        <<<-
                        r1 >
                    >>>]
                    r1 >
                    [
                        l1 <
                    ]
                    l1 <
                <<]
                >>>>-
                <<<<<<<<<<+
                >>>>>[
                    [-]
                    <<<<<-
                >>>>>]
                mov44/39 >>>[-<<<<<+>>>>>]
                dup40/42/43 <<<<[->>+>+<<<]
                mov43/40 >>>[-<<<+>>>]
            <<<<]
            >[-]
            >>[-]
            store i32 %28_ i32* %3_ align 4
            dup36/38/39 <<<<<<[->>+>+<<<]
            mov38/36 >>[-<<+>>]
            <<<<<<<<<<<<<<<<<<<<[-]
            mov39/18 >>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>]
            br label %17
            <<<<<<<<<<<<<<<<<<<<<<<<<<+
        >>]
        >#B:%29
        [
            -
            ret void
            zero all function allocs
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<-
            #dead_frame
            >>-
            l1 <
            <<[-]
            r1 >
            l9 <<<<<<<<<
        >>>>>>>>>>>>>>>>]
    <<<<<<<<<<<<<<]
    >#printi
    [
        >>>#B:%ret_lading_pad
        [
            <<<<<<-
            #dead_frame
            >>>-
            <<<#dead_fn_pad/printi
            >>>>>>-
            l38 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
        ]
        <<<<<<#mainloop_printi
        >#F:putstr
        >#F:putdec
        >#F:printi
        >#F:main
        >#B:%1
        >#B:%ret_lading_pad
        >#B:%4
        >#B:%5
        >#B:%8
        >#B:%13
        >#B:%call_term_for_4
        >#B:%18
        >#B:%21
        >#alloc_%2
        >#alloc_%3
        >#%6_=_load_i32*_%2__align_4(mult)
        >#%7_=_icmp_sgt_i32_%6__i32_10(mult)
        >#%9_=_load_i32*_%2__align_4(mult)
        >#%10_=_sub_i32_%9__i32_10(mult)
        >#%11_=_load_i32*_%3__align_4(mult)
        >#%12_=_add_i32_%11__i32_1(mult)
        >#%14_=_load_i32*_%2__align_4(mult)
        >#%15_=_add_i32_48__i32_%14(mult)
        >#%16_=_trunc_i32_%15_to_i8(mult)
        >#%17_=_load_i32*_%3__align_4(mult)
        >#%19_=_load_i32*_%3__align_4(mult)
        >#%20_=_icmp_ne_i32_%19__i32_0(mult)
        >#%0
        <<<<<<<<<<<<<<<<<<<<<<<#B:%1
        [
            -
            copy up args
            >>>>>>>>>>>>>>>>>>>>>>>#arg_%0
            l2 <<
            mov0/30 <<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            r2 >>
            %2 = alloca i32_ align 4
            %3 = alloca i32_ align 4
            store i32 %0_ i32* %2_ align 4
            >>>>>>>>>>>>>>[-]
            mov28/14 >>>>>>>>>>>>>>[-<<<<<<<<<<<<<<+>>>>>>>>>>>>>>]
            br label %4
            <<<<<<<<<<<<<<<<<<<<<+
        <<]
        >>#B:%4
        [
            -
            store i32 0_ i32* %3_ align 4
            op_to_reg storing const value in temp address
            >>>>>>>>>>>>>>>>>>>>>>#constop_0
            
            <<<<<<<<<<<<<<[-]
            mov29/15 >>>>>>>>>>>>>>[-<<<<<<<<<<<<<<+>>>>>>>>>>>>>>]
            br label %5
            <<<<<<<<<<<<<<<<<<<<<+
        <]
        >#B:%5
        [
            -
            %6 = load i32* %2_ align 4
            >>>>>>>>[-]
            dup14/16/30 <<[->>+>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<]
            mov30/14 >>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>]
            %7 = icmp sgt i32 %6_ i32 10
            <<<<<<<<<<<<<[-]
            dup16/29/31 <[->>>>>>>>>>>>>+>>+<<<<<<<<<<<<<<<]
            mov29/16 >>>>>>>>>>>>>[-<<<<<<<<<<<<<+>>>>>>>>>>>>>]
            op_to_reg storing const value in temp address
            >#constop_10
            ++++++++++
            >>#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            mov31/32 <<<[->+<]
            >>>+
            <<<<[
                -
                
                >>[
                    -
                    
                    r1 >
                ]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<]
            >>>>-
            <<[
                [-]
                <<<<<<<<<<<<<<<+
            >>>>>>>>>>>>>>>]
            br i1 %7_ label %8_ label %13
            <<<<<<<<<<<<<<<<<<<<<<<<<<+
            >>>>>>>>>>>[
                -
                <<<<<<<<<<<-
                >>>+
                #B:printi/8_true
            >>>>>>>>]
            <<<<<<<<<<<[
                -
                >>>>+
                #B:printi/13_false
            <<<<]
        >>]
        >#B:%8
        [
            -
            %9 = load i32* %2_ align 4
            >>>>>>>>>[-]
            dup14/18/29 <<<<[->>>>+>>>>>>>>>>>+<<<<<<<<<<<<<<<]
            mov29/14 >>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>]
            %10 = sub i32 %9_ i32 10
            <<<<<<<<<<[-]
            dup18/29/30 <[->>>>>>>>>>>+>+<<<<<<<<<<<<]
            mov29/18 >>>>>>>>>>>[-<<<<<<<<<<<+>>>>>>>>>>>]
            op_to_reg storing const value in temp address
            >>#constop_10
            ++++++++++
            mov30/19 <[-<<<<<<<<<<<+>>>>>>>>>>>]
            >[
                -
                <<<<<<<<<<<<-
            >>>>>>>>>>>>]
            store i32 %10_ i32* %2_ align 4
            dup19/29/30 <<<<<<<<<<<<[->>>>>>>>>>+>+<<<<<<<<<<<]
            mov29/19 >>>>>>>>>>[-<<<<<<<<<<+>>>>>>>>>>]
            <<<<<<<<<<<<<<<[-]
            mov30/14 >>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>]
            %11 = load i32* %3_ align 4
            <<<<<<<<<<[-]
            dup15/20/29 <<<<<[->>>>>+>>>>>>>>>+<<<<<<<<<<<<<<]
            mov29/15 >>>>>>>>>>>>>>[-<<<<<<<<<<<<<<+>>>>>>>>>>>>>>]
            %12 = add i32 %11_ i32 1
            <<<<<<<<[-]
            dup20/29/30 <[->>>>>>>>>+>+<<<<<<<<<<]
            mov29/20 >>>>>>>>>[-<<<<<<<<<+>>>>>>>>>]
            op_to_reg storing const value in temp address
            >>#constop_1
            +
            mov30/21 <[-<<<<<<<<<+>>>>>>>>>]
            >[
                -
                <<<<<<<<<<+
            >>>>>>>>>>]
            store i32 %12_ i32* %3_ align 4
            dup21/29/30 <<<<<<<<<<[->>>>>>>>+>+<<<<<<<<<]
            mov29/21 >>>>>>>>[-<<<<<<<<+>>>>>>>>]
            <<<<<<<<<<<<<<[-]
            mov30/15 >>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>]
            br label %5
            <<<<<<<<<<<<<<<<<<<<<<+
        >]
        >#B:%13
        [
            -
            %14 = load i32* %2_ align 4
            >>>>>>>>>>>>[-]
            dup14/22/29 <<<<<<<<[->>>>>>>>+>>>>>>>+<<<<<<<<<<<<<<<]
            mov29/14 >>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>]
            %15 = add i32 48_ i32 %14
            <<<<<<[-]
            op_to_reg storing const value in temp address
            >>>>>>#constop_48
            ++++++++++++++++++++++++++++++++++++++++++++++++
            dup22/30/31 <<<<<<<[->>>>>>>>+>+<<<<<<<<<]
            mov30/22 >>>>>>>>[-<<<<<<<<+>>>>>>>>]
            mov29/23 <[-<<<<<<+>>>>>>]
            >>[
                -
                <<<<<<<<+
            >>>>>>>>]
            %16 = trunc i32 %15 to i8
            <<<<<<<[-]
            dup23/29/30 <[->>>>>>+>+<<<<<<<]
            mov29/23 >>>>>>[-<<<<<<+>>>>>>]
            mov30/24 >[-<<<<<<+>>>>>>]
            call @putchar(i8 %16)
            enable next block when we return
            <<<<<<<<<<<<<<<<<<<#caller/%call_term_for_4
            +
            putchar intrinsic
            dup24/29/30 >>>>>>>>>>>>>[->>>>>+>+<<<<<<]
            mov29/24 >>>>>[-<<<<<+>>>>>]
            >.
            [-]
        <<<<<<<<<<<<<<<<<<<<]
        >#B:%call_term_for_4
        [
            -
            %17 = load i32* %3_ align 4
            >>>>>>>>>>>>>>[-]
            dup15/25/29 <<<<<<<<<<[->>>>>>>>>>+>>>>+<<<<<<<<<<<<<<]
            mov29/15 >>>>>>>>>>>>>>[-<<<<<<<<<<<<<<+>>>>>>>>>>>>>>]
            store i32 %17_ i32* %2_ align 4
            dup25/29/30 <<<<[->>>>+>+<<<<<]
            mov29/25 >>>>[-<<<<+>>>>]
            <<<<<<<<<<<<<<<[-]
            mov30/14 >>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>]
            br label %18
            <<<<<<<<<<<<<<<<<<+
        <]
        >#B:%18
        [
            -
            %19 = load i32* %3_ align 4
            >>>>>>>>>>>>>>[-]
            dup15/26/29 <<<<<<<<<<<[->>>>>>>>>>>+>>>+<<<<<<<<<<<<<<]
            mov29/15 >>>>>>>>>>>>>>[-<<<<<<<<<<<<<<+>>>>>>>>>>>>>>]
            %20 = icmp ne i32 %19_ i32 0
            <<[-]
            dup26/29/30 <[->>>+>+<<<<]
            mov29/26 >>>[-<<<+>>>]
            op_to_reg storing const value in temp address
            >>#constop_0
            
            >>>>#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            mov30/35 <<<<<<<[->>>>>+<<<<<]
            >>>>>>>+
            <<<<<<[
                -
                >+
                >>>[
                    -
                    <<<-
                    r1 >
                >>>]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<]
            >>>>>>-
            <<[
                [-]
                <<<<<<<<+
            >>>>>>>>]
            <<<[
                [-]
                <<<<<+
            >>>>>]
            br i1 %20_ label %4_ label %21
            <<<<<<<<<<<<<<<<<<<<<<<<<<+
            >>>>>>>>>>>>>>>>>>>>>[
                -
                <<<<<<<<<<<<<<<<<<<<<-
                >+
                #B:printi/4_true
            >>>>>>>>>>>>>>>>>>>>]
            <<<<<<<<<<<<<<<<<<<<<[
                -
                >>>>>>>+
                #B:printi/21_false
            <<<<<<<]
        >>>>>>]
        >#B:%21
        [
            -
            ret void
            zero all function allocs
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            <<<<<<<<<<<<<<<<<<<<<<<<<<<-
            #dead_frame
            >>>-
            l1 <
            <<<[-]
            r1 >
            l9 <<<<<<<<<
        >>>>>>>>>>>>>]
    <<<<<<<<<<]
    >#main
    [
        >>#B:%ret_lading_pad
        [
            <<<<<<-
            #dead_frame
            >>>>-
            <<<<#dead_fn_pad/main
            >>>>>>-
            l53 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
        ]
        <<<<<<#mainloop_main
        >#F:putstr
        >#F:putdec
        >#F:printi
        >#F:main
        >#B:%0
        >#B:%ret_lading_pad
        >#B:%7
        >#B:%12
        >#B:%call_term_for_2
        >#B:%20
        >#B:%call_term_for_4
        >#B:%21
        >#B:%30
        >#B:%33
        >#alloc_%1
        >#alloc_%2
        >#alloc_%3
        >#alloc_%4
        >#alloc_%5
        >#alloc_%6
        >#%8_=_load_i8*_%5__align_1(mult)
        >#%9_=_zext_i8_%8_to_i32(mult)
        >#%10_=_load_i32*_%4__align_4(mult)
        >#%11_=_icmp_slt_i32_%9__i32_%10(mult)
        >#%13_=_load_i8*_%2__align_1(mult)
        >#%14_=_zext_i8_%13_to_i32(mult)
        >#%15_=_load_i8*_%5__align_1(mult)
        >#%16_=_zext_i8_%15_to_i32(mult)
        >#%17_=_load_i32*_%4__align_4(mult)
        >#%18_=_sub_i32_%17__i32_1(mult)
        >#%19_=_icmp_slt_i32_%16__i32_%18(mult)
        >#%22_=_load_i8*_%3__align_1(mult)
        >#%23_=_load_i8*_%2__align_1(mult)
        >#%24_=_load_i8*_%6__align_1(mult)
        >#%25_=_zext_i8_%24_to_i32(mult)
        >#%26_=_load_i8*_%2__align_1(mult)
        >#%27_=_zext_i8_%26_to_i32(mult)
        >#%28_=_add_i32_%27__i32_%25(mult)
        >#%29_=_trunc_i32_%28_to_i8(mult)
        >#%31_=_load_i8*_%5__align_1(mult)
        >#%32_=_add_i8_%31__i8_1(mult)
        >#%34_=_load_i32*_%1__align_4(mult)
        <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<#B:%0
        [
            -
            copy up args
            %1 = alloca i32_ align 4
            %2 = alloca i8_ align 1
            %3 = alloca i8_ align 1
            %4 = alloca i32_ align 4
            %5 = alloca i8_ align 1
            %6 = alloca i8_ align 1
            store i32 0_ i32* %1_ align 4
            op_to_reg storing const value in temp address
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#constop_0
            
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<[-]
            mov43/15 >>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            store i8 1_ i8* %2_ align 1
            op_to_reg storing const value in temp address
            >#constop_1
            +
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<[-]
            mov44/16 >>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            store i8 0_ i8* %3_ align 1
            op_to_reg storing const value in temp address
            <#constop_0
            
            <<<<<<<<<<<<<<<<<<<<<<<<<<[-]
            mov43/17 >>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>]
            store i32 10_ i32* %4_ align 4
            op_to_reg storing const value in temp address
            #constop_10
            ++++++++++
            <<<<<<<<<<<<<<<<<<<<<<<<<[-]
            mov43/18 >>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>]
            store i8 0_ i8* %5_ align 1
            op_to_reg storing const value in temp address
            #constop_0
            
            <<<<<<<<<<<<<<<<<<<<<<<<[-]
            mov43/19 >>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>]
            br label %7
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+
        <<]
        >>#B:%7
        [
            -
            %8 = load i8* %5_ align 1
            >>>>>>>>>>>>>>[-]
            dup19/21/43 <<[->>+>>>>>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<]
            mov43/19 >>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>]
            %9 = zext i8 %8 to i32
            <<<<<<<<<<<<<<<<<<<<<[-]
            dup21/43/45 <[->>>>>>>>>>>>>>>>>>>>>>+>>+<<<<<<<<<<<<<<<<<<<<<<<<]
            mov43/21 >>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>]
            mov45/22 >>[-<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>]
            %10 = load i32* %4_ align 4
            <<<<<<<<<<<<<<<<<<<<<<[-]
            dup18/23/43 <<<<<[->>>>>+>>>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<<]
            mov43/18 >>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>]
            %11 = icmp slt i32 %9_ i32 %10
            <<<<<<<<<<<<<<<<<<<[-]
            dup22/43/44 <<[->>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<]
            mov43/22 >>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>]
            dup23/46/45 <<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>+<+<<<<<<<<<<<<<<<<<<<<<<]
            mov46/23 >>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>]
            >#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            mov45/47 <<<<[->>+<<]
            >>>>+
            <<<<<[
                -
                
                >>>[
                    -
                    
                    r1 >
                ]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<]
            >>>>>-
            <<[
                [-]
                <<<<<<<<<<<<<<<<<<<<<<<+
            >>>>>>>>>>>>>>>>>>>>>>>]
            br i1 %11_ label %12_ label %33
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+
            >>>>>>>>>>>>>>>>>>[
                -
                <<<<<<<<<<<<<<<<<<-
                >>+
                #B:main/12_true
            >>>>>>>>>>>>>>>>]
            <<<<<<<<<<<<<<<<<<[
                -
                >>>>>>>>+
                #B:main/33_false
            <<<<<<<<]
        >]
        >#B:%12
        [
            -
            %13 = load i8* %2_ align 1
            >>>>>>>>>>>>>>>>>[-]
            dup16/25/43 <<<<<<<<<[->>>>>>>>>+>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            mov43/16 >>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            %14 = zext i8 %13 to i32
            <<<<<<<<<<<<<<<<<[-]
            dup25/43/44 <[->>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<]
            mov43/25 >>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>]
            mov44/26 >[-<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>]
            call @printi(i32 %14)
            enable next block when we return
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<#caller/%call_term_for_2
            +
            stack_width 53
            ret_pad_width 6
            copy up arg 0
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#arg_0
            dup26/43/44 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<]
            mov43/26 >>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>]
            mov44/60 >[->>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<]
            give callee a stack pointer
            >>>>>>>>>>>>>>>>>#stack_ptr
            ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            l1 <
            dup0/62/63 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            mov63/0 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            r1 >
            r53 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<#JUMP_PAD
            +
            >>>>#caller
            +
            >>#caller/jump_pad_blk
            +
            r9 >>>>>>>>>
            <<<<<<#===FRAME_printi
            +
            >>>#printi
            +
            >>#printi/b0
            +
        >>>]
        >#B:%call_term_for_2
        [
            -
            %15 = load i8* %5_ align 1
            >>>>>>>>>>>>>>>>>>[-]
            dup19/27/43 <<<<<<<<[->>>>>>>>+>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<]
            mov43/19 >>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>]
            %16 = zext i8 %15 to i32
            <<<<<<<<<<<<<<<[-]
            dup27/43/44 <[->>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<]
            mov43/27 >>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>]
            mov44/28 >[-<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>]
            %17 = load i32* %4_ align 4
            <<<<<<<<<<<<<<<[-]
            dup18/29/43 <<<<<<<<<<<[->>>>>>>>>>>+>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<<]
            mov43/18 >>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>]
            %18 = sub i32 %17_ i32 1
            <<<<<<<<<<<<<[-]
            dup29/43/44 <[->>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<]
            mov43/29 >>>>>>>>>>>>>>[-<<<<<<<<<<<<<<+>>>>>>>>>>>>>>]
            op_to_reg storing const value in temp address
            >>#constop_1
            +
            mov44/30 <[-<<<<<<<<<<<<<<+>>>>>>>>>>>>>>]
            >[
                -
                <<<<<<<<<<<<<<<-
            >>>>>>>>>>>>>>>]
            %19 = icmp slt i32 %16_ i32 %18
            <<<<<<<<<<<<<<[-]
            dup28/43/44 <<<[->>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<]
            mov43/28 >>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>]
            dup30/45/46 <<<<<<<<<<<<<[->>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<]
            mov45/30 >>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>]
            >>>>>#subnu_tmpb
            >#subnu_tmp0
            >#subnu_tmp1
            mov46/50 <<<<<<[->>>>+<<<<]
            >>>>>>+
            <<<<<<<<[
                -
                
                >>>>>>[
                    -
                    
                    r1 >
                ]
                r1 >
                [
                    l1 <
                ]
                l1 <
            <<<<<<]
            >>>>>>>>-
            <<[
                [-]
                <<<<<<<<<<<<<<<<<<<+
            >>>>>>>>>>>>>>>>>>>]
            br i1 %19_ label %20_ label %21
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+
            >>>>>>>>>>>>>>>>>>>>>>>>>[
                -
                <<<<<<<<<<<<<<<<<<<<<<<<<-
                >>>>+
                #B:main/20_true
            >>>>>>>>>>>>>>>>>>>>>]
            <<<<<<<<<<<<<<<<<<<<<<<<<[
                -
                >>>>>>+
                #B:main/21_false
            <<<<<<]
        >>>]
        >#B:%20
        [
            -
            call @putchar(i8 32)
            enable next block when we return
            >#caller/%call_term_for_4
            +
            putchar intrinsic
            op_to_reg storing const value in temp address
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#constop_32
            ++++++++++++++++++++++++++++++++
            .
            [-]
        <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
        >#B:%call_term_for_4
        [
            -
            br label %21
            >+
        <]
        >#B:%21
        [
            -
            %22 = load i8* %3_ align 1
            >>>>>>>>>>>>>>>>>>>>[-]
            dup17/32/43 <<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>+>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<<<]
            mov43/17 >>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>]
            store i8 %22_ i8* %6_ align 1
            dup32/43/44 <<<<<<<<<<<[->>>>>>>>>>>+>+<<<<<<<<<<<<]
            mov43/32 >>>>>>>>>>>[-<<<<<<<<<<<+>>>>>>>>>>>]
            <<<<<<<<<<<<<<<<<<<<<<<[-]
            mov44/20 >>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>]
            %23 = load i8* %2_ align 1
            <<<<<<<<<<<[-]
            dup16/33/43 <<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>+>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            mov43/16 >>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            store i8 %23_ i8* %3_ align 1
            dup33/43/44 <<<<<<<<<<[->>>>>>>>>>+>+<<<<<<<<<<<]
            mov43/33 >>>>>>>>>>[-<<<<<<<<<<+>>>>>>>>>>]
            <<<<<<<<<<<<<<<<<<<<<<<<<<[-]
            mov44/17 >>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            %24 = load i8* %6_ align 1
            <<<<<<<<<<[-]
            dup20/34/43 <<<<<<<<<<<<<<[->>>>>>>>>>>>>>+>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<]
            mov43/20 >>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>]
            %25 = zext i8 %24 to i32
            <<<<<<<<[-]
            dup34/43/44 <[->>>>>>>>>+>+<<<<<<<<<<]
            mov43/34 >>>>>>>>>[-<<<<<<<<<+>>>>>>>>>]
            mov44/35 >[-<<<<<<<<<+>>>>>>>>>]
            %26 = load i8* %2_ align 1
            <<<<<<<<[-]
            dup16/36/43 <<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>+>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            mov43/16 >>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            %27 = zext i8 %26 to i32
            <<<<<<[-]
            dup36/43/44 <[->>>>>>>+>+<<<<<<<<]
            mov43/36 >>>>>>>[-<<<<<<<+>>>>>>>]
            mov44/37 >[-<<<<<<<+>>>>>>>]
            %28 = add i32 %27_ i32 %25
            <<<<<<[-]
            dup37/43/44 <[->>>>>>+>+<<<<<<<]
            mov43/37 >>>>>>[-<<<<<<+>>>>>>]
            dup35/45/46 <<<<<<<<[->>>>>>>>>>+>+<<<<<<<<<<<]
            mov45/35 >>>>>>>>>>[-<<<<<<<<<<+>>>>>>>>>>]
            mov44/38 <[-<<<<<<+>>>>>>]
            >>[
                -
                <<<<<<<<+
            >>>>>>>>]
            %29 = trunc i32 %28 to i8
            <<<<<<<[-]
            dup38/43/44 <[->>>>>+>+<<<<<<]
            mov43/38 >>>>>[-<<<<<+>>>>>]
            mov44/39 >[-<<<<<+>>>>>]
            store i8 %29_ i8* %2_ align 1
            dup39/43/44 <<<<<[->>>>+>+<<<<<]
            mov43/39 >>>>[-<<<<+>>>>]
            <<<<<<<<<<<<<<<<<<<<<<<<<<<[-]
            mov44/16 >>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            br label %30
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+
        <]
        >#B:%30
        [
            -
            %31 = load i8* %5_ align 1
            >>>>>>>>>>>>>>>>>>>>>>>>>>>[-]
            dup19/40/43 <<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>+>>>+<<<<<<<<<<<<<<<<<<<<<<<<]
            mov43/19 >>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>]
            %32 = add i8 %31_ i8 1
            <<[-]
            dup40/43/44 <[->>>+>+<<<<]
            mov43/40 >>>[-<<<+>>>]
            op_to_reg storing const value in temp address
            >>#constop_1
            +
            mov44/41 <[-<<<+>>>]
            >[
                -
                <<<<+
            >>>>]
            store i8 %32_ i8* %5_ align 1
            dup41/43/44 <<<<[->>+>+<<<]
            mov43/41 >>[-<<+>>]
            <<<<<<<<<<<<<<<<<<<<<<<<[-]
            mov44/19 >>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>]
            br label %7
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+
        >>>>>>]
        >#B:%33
        [
            -
            %34 = load i32* %1_ align 4
            >>>>>>>>>>>>>>>>>>>>>>>>>>>>[-]
            dup15/42/43 <<<<<<<<<<<<<<<<<<<<<<<<<<<[->>>>>>>>>>>>>>>>>>>>>>>>>>>+>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<]
            mov43/15 >>>>>>>>>>>>>>>>>>>>>>>>>>>>[-<<<<<<<<<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>]
            ret i32 %34
            zero all function allocs
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            >[-]
            <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<-
            #dead_frame
            >>>>-
            l1 <
            <<<<[-]
            r1 >
            l8 <<<<<<<<
        >>>>>>>>>>>>>>]
    <<<<<<<<<<]
<<<<]
